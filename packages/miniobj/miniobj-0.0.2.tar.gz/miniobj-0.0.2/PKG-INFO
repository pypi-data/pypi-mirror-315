Metadata-Version: 2.1
Name: miniobj
Version: 0.0.2
Summary: A minimalistic Python library for loading Wavefront OBJ files.
License: MIT License
        
        Copyright (c) 2024 Yongsen Mao
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Requires-Python: >=3.7.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: tqdm
Requires-Dist: numpy
Requires-Dist: pillow

# miniobj
Minimum wavefront .obj file parser in Python

## Installation
```bash
pip install miniobj
```

## Usage
```python
from miniobj import MiniObj

obj_mesh = MiniObj("mesh.obj")
# convert quad faces to triangles, ngon faces are not supported yet
obj_mesh.load(as_triangles=False)

obj_mesh.export("output.obj")
```

## Quantization
```python
obj_mesh.scale_unit() # scale min coord to 0, max coord to 1
obj_mesh.quantize(bins=64) # quantize to 64x64x64
obj_mesh.export("output.obj")
```

Check out [main.py](main.py) for more examples.
