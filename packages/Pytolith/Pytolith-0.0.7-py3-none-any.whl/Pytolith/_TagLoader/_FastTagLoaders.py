"""
Automatically generated layout readers, DO NOT USE ANY FUNCTIONS FROM THIS FILE or import this module outside of Pytolith itself.
"""
#	This file has been automatically generated at 2024-12-14 18:25:45.236312
#	Generator script: /tmp/build-via-sdist-9bbnosuf/pytolith-0.0.7/code_generator.py
#	Binary definitions version: b'w\x02\xb9h\\\xbfq\xe6\xd84\x81\xfb \xd7\xd4p\xde\xc5\x17\xcd7\xf8i.\xeb)w\xc6S\x7f\xc9w'
#	XML definitions loaded from: /tmp/build-via-sdist-9bbnosuf/pytolith-0.0.7/Data/TagLayouts/Halo2
#	Edit the XML defintions and rebuild the wheel to modify the contents of this file.

from Pytolith.TagTypes import TagField as _TagField
#	Static loader for structure:sound_lowpass for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_lowpass_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:mapping_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__mapping_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Custom_reader(arg_element)))
    


#	Static loader for structure:mapping_function for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__mapping_function_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    


#	Static loader for block:real for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__real_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:byte for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__byte_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for structure:sound_promotion_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_promotion_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:sound_promotion_parameters for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_promotion_parameters_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_promotion_rule for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_promotion_rule_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_promotion_runtime_timer for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_promotion_runtime_timer_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_override_mixbins for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_override_mixbins_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_filter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_filter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:sound_playback_parameter_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_playback_parameter_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:platform_sound_pitch_lfo for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_pitch_lfo_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:platform_sound_filter_lfo for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_filter_lfo_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:sound_effect_struct_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_effect_struct_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    TagReference_reader = READERS['TagReference']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_component for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_component_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_effect_overrides for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_overrides_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_override_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_override_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_effect_override_parameters for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_override_parameters_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Custom_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:platform_sound_effect_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_effect_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_effect_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_effect_override_descriptor for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_override_descriptor_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for structure:simple_platform_sound_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__simple_platform_sound_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:sound_playback_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_playback_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], Custom_reader(arg_element)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], Custom_reader(arg_element)))
    append(_TagField(arg_defs[17], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:sound_scale_modifiers for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_scale_modifiers_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_2real = arg_loader.s_2real
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:sound_permutation_chunk for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_chunk_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_permutation_chunk for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_chunk_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_permutation_chunk for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_chunk_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_encoded_dialogue_section for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_encoded_dialogue_section_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_permutation_dialogue_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_dialogue_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:g_null for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__g_null_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    


#	Static loader for block:global_error_report_categories for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_error_report_categories_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], LongString_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:error_reports for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_reports_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_long = arg_loader.s_long
    s_4real = arg_loader.s_4real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    append(_TagField(arg_defs[3], String_reader(arg_element)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[15], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[16], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[17], s_4real.unpack(arg_element.read(16))))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:error_report_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_report_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:error_report_vectors for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_report_vectors_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:error_report_lines for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_report_lines_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_4real = arg_loader.s_4real
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    


#	Static loader for block:error_report_triangles for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_report_triangles_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_4real = arg_loader.s_4real
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    


#	Static loader for block:error_report_quads for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_report_quads_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_4real = arg_loader.s_4real
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    


#	Static loader for block:error_report_comments for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__error_report_comments_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Array_reader = SPECIAL_READERS['Array']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[2]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_4real.unpack(arg_element.read(16))))
    


#	Static loader for block:global_tag_import_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_tag_import_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    LongString_reader = READERS['LongString']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], LongString_reader(arg_element)))
    append(_TagField(arg_defs[2], String_reader(arg_element)))
    append(_TagField(arg_defs[3], String_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], String_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:tag_import_file for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__tag_import_file_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Data_reader = READERS['Data']
    LongString_reader = READERS['LongString']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], LongString_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Data_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_hud_multitexture_overlay_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_hud_multitexture_overlay_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[14], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[15], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[16], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[19], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[20], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[23], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[24], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[27], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[28]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_hud_multitexture_overlay_effector_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_hud_multitexture_overlay_effector_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:predicted_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__predicted_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:tag_block_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__tag_block_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:tag_block_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__tag_block_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:global_geometry_block_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_geometry_block_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_block_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_block_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_geometry_compression_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_compression_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for structure:global_geometry_section_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_geometry_section_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[16], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:global_geometry_section_strip_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_section_strip_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:global_geometry_section for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_geometry_section_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Array_reader = SPECIAL_READERS['Array']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], VertexBuffer_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:global_geometry_section for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_geometry_section_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Ptr_reader = READERS['Ptr']
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Data_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Ptr_reader(arg_element)))
    


#	Static loader for block:global_geometry_section_raw_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_section_raw_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    Array_reader = SPECIAL_READERS['Array']
    s_2real = arg_loader.s_2real
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[14], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_section_vertex_buffer for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_section_vertex_buffer_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    append(_TagField(arg_defs[0], VertexBuffer_reader(arg_element)))
    


#	Static loader for block:global_geometry_part for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_part_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[19], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[20]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_part_block_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_part_block_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[11]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:global_subparts for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_subparts_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:global_visibility_bounds for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_visibility_bounds_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:global_geometry_isq_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_geometry_isq_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Data_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_plane for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_plane_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    append(_TagField(arg_defs[0], RealPlane3D_reader(arg_element)))
    


#	Static loader for block:global_geometry_rigid_plane_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_rigid_plane_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:global_geometry_explicit_edge for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_explicit_edge_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_material for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_material_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_material_property for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_material_property_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:sound_response_extra_sounds for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_response_extra_sounds_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:sound_response_extra_sounds for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_response_extra_sounds_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    


#	Static loader for block:sound_response_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_response_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:game_engine_general_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_general_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_slayer_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_slayer_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_ctf_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_ctf_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_oddball_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_oddball_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_king_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_king_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_color for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_color_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:effect_locations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__effect_locations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    


#	Static loader for block:particle_system_definition_block_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_system_definition_block_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:particle_system_definition_block_new for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_system_definition_block_new_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:particle_system_emitter_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_system_emitter_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[22], RealEulerAngles2D_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:particle_property_scalar_struct_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__particle_property_scalar_struct_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], Custom_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:particle_property_color_struct_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__particle_property_color_struct_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], Custom_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:global_ui_campaign_level for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_ui_campaign_level_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:global_ui_multiplayer_level for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_ui_multiplayer_level_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    LongString_reader = READERS['LongString']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], LongString_reader(arg_element)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[15], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[16], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[17], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[18], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[19], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[20], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[21], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[22], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[23], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:screen_animation_keyframe_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__screen_animation_keyframe_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:text_block_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__text_block_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Rectangle2D_reader = READERS['Rectangle2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_4real = arg_loader.s_4real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[6], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:bitmap_block_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_block_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[17]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:hud_block_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_block_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Rectangle2D_reader = READERS['Rectangle2D']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], Rectangle2D_reader(arg_element)))
    


#	Static loader for block:player_block_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__player_block_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:ui_model_scene_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_model_scene_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Rectangle2D_reader = READERS['Rectangle2D']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], StringId_reader(arg_element)))
    


#	Static loader for block:ui_object_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_object_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    


#	Static loader for block:ui_light_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_light_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    


#	Static loader for structure:shader_gpu_state_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__shader_gpu_state_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:render_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:shader_gpu_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__shader_gpu_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:texture_stage_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__texture_stage_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:render_state_parameter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_state_parameter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:texture_stage_state_parameter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__texture_stage_state_parameter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:texture for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__texture_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:vertex_shader_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vertex_shader_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:global_shader_parameter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_shader_parameter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_animation_property for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_animation_property_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], Custom_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_definition_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_definition_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_bitmap_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_bitmap_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:pixel32 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel32_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:real_vector4d for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__real_vector4d_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_postprocess_level_of_detail_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_level_of_detail_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_implementation_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_implementation_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_overlay_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_overlay_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scalar_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scalar_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_overlay_reference_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_overlay_reference_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_postprocess_animated_parameter_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_animated_parameter_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_animated_parameter_reference_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_animated_parameter_reference_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_char = arg_loader.s_char
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:shader_postprocess_bitmap_property for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_bitmap_property_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_postprocess_color_property for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_color_property_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:shader_postprocess_value_property for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_value_property_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_postprocess_level_of_detail for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_level_of_detail_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_layer for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_layer_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_pass for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_pass_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_implementation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_implementation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_bitmap for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_bitmap_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_postprocess_bitmap_transform for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_bitmap_transform_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_postprocess_value for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_value_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_postprocess_color for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_color_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:shader_postprocess_bitmap_transform_overlay for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_bitmap_transform_overlay_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_value_overlay for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_value_overlay_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:color_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__color_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_color_overlay for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_color_overlay_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_vertex_shader_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_vertex_shader_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_template_category for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_category_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_template_parameter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_parameter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_template_level_of_detail for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_level_of_detail_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_template_pass_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_pass_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decorator_cell_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_cell_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:decorator_projected_decal for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_projected_decal_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:structure_bsp_background_sound_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_background_sound_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_sound_environment_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_sound_environment_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_weather_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_weather_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], String_reader(arg_element)))
    


#	Static loader for block:decorator_placement_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_placement_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:decorator_cache_block for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_cache_block_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decorator_cache_block_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_cache_block_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], VertexBuffer_reader(arg_element)))
    append(_TagField(arg_defs[2], VertexBuffer_reader(arg_element)))
    


#	Static loader for block:decorator_cache_block_data for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_cache_block_data_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], VertexBuffer_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], VertexBuffer_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decorator_placement for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_placement_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:decal_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decal_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:sprite_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sprite_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:decorator_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:pathfinding_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pathfinding_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sector for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sector for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sector for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sector_link for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_link_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sector_link for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_link_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:sector_link for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_link_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:sector_link for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_link_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:ref for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ref_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sector_bsp2d_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_bsp2d_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane2D_reader = READERS['RealPlane2D']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], RealPlane2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:surface_flags for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__surface_flags_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sector_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sector_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:environment_object_refs for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__environment_object_refs_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:environment_object_refs for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__environment_object_refs_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:environment_object_bsp_refs for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__environment_object_bsp_refs_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:environment_object_bsp_refs for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__environment_object_bsp_refs_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:environment_object_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__environment_object_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:environment_object_nodes for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__environment_object_nodes_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:pathfinding_hints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pathfinding_hints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:pathfinding_hints for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pathfinding_hints_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:pathfinding_hints for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pathfinding_hints_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:pathfinding_hints for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pathfinding_hints_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:instanced_geometry_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__instanced_geometry_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:user_hint for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:user_hint_point for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_point_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_ray for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_ray_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:user_hint_ray for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_ray_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:user_hint_line_segment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_line_segment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:user_hint_line_segment for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_line_segment_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_parallelogram for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_parallelogram_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:user_hint_parallelogram for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_parallelogram_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_polygon for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_polygon_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_jump for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_jump_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:user_hint_climb for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_climb_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:user_hint_well for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_well_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_well_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_well_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], RealEulerAngles2D_reader(arg_element)))
    


#	Static loader for block:user_hint_flight for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_flight_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:user_hint_flight_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_hint_flight_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for structure:scenario_object_id for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_object_id_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    


#	Static loader for structure:scenario_object_datum for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_object_datum_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], RealEulerAngles3D_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:scenario_object_datum for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_object_datum_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], RealEulerAngles3D_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:scenario_object_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_object_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:old_scenario_unit for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__old_scenario_unit_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_unit for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_unit_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:scenario_device for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_device_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_object_names for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_object_names_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:dont_use_me_scenario_environment_object for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__dont_use_me_scenario_environment_object_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Tag_reader = READERS['Tag']
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Tag_reader(arg_element)))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_structure_bsp_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_structure_bsp_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_structure_bsp_reference for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_structure_bsp_reference_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_scenery_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:pathfinding_object_index_list for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pathfinding_object_index_list_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:scenario_scenery for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:scenario_scenery for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_scenery for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_scenery for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_scenery for version 4
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_version_4(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_scenery_datum_struct_v2 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_scenery_datum_struct_v2_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:scenario_scenery_datum_struct_v3 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_scenery_datum_struct_v3_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Custom_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:scenario_scenery_datum_struct_v4 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_scenery_datum_struct_v4_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:scenario_crate_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_crate_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_crate for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_crate_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:g_scenario_editor_folder for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__g_scenario_editor_folder_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], LongString_reader(arg_element)))
    


#	Static loader for block:scenario_weapon_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_weapon_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_weapon for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_weapon_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_weapon for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_weapon_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_weapon for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_weapon_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_weapon_datum for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_weapon_datum_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_vehicle_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_vehicle_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_vehicle for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_vehicle_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_vehicle for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_vehicle_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_vehicle for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_vehicle_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], Custom_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], Custom_reader(arg_element)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], Custom_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], Custom_reader(arg_element)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_biped_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_biped_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_biped for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_biped_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_biped for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_biped_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_biped for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_biped_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_equipment_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_equipment_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_equipment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_equipment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_equipment for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_equipment_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_equipment for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_equipment_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_equipment_datum for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_equipment_datum_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_creature_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_creature_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_creature for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_creature_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_sound_scenery_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_sound_scenery_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_sound_scenery for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_sound_scenery_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_sound_scenery for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_sound_scenery_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_sound_scenery for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_sound_scenery_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:sound_scenery_datum for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_scenery_datum_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:editor_comment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__editor_comment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    LongString_reader = READERS['LongString']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], String_reader(arg_element)))
    append(_TagField(arg_defs[3], LongString_reader(arg_element)))
    


#	Static loader for block:style_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__style_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:squad_groups for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__squad_groups_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:squads for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__squads_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], TagReference_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[23], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:squads for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__squads_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[20], StringId_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:squads for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__squads_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[20], StringId_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], String_reader(arg_element)))
    fd = arg_defs[24]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:move_positions for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__move_positions_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:actor_starting_locations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:actor_starting_locations for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:actor_starting_locations for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:actor_starting_locations for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    


#	Static loader for block:actor_starting_locations for version 4
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_4(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    OldStringId_reader = READERS['OldStringId']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:actor_starting_locations for version 5
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_5(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    OldStringId_reader = READERS['OldStringId']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:actor_starting_locations for version 6
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_starting_locations_version_6(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    OldStringId_reader = READERS['OldStringId']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], StringId_reader(arg_element)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], String_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_players for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_players_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:special_movement for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__special_movement_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:orders for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__orders_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], String_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:orders for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__orders_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], String_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:orders for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__orders_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], String_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:area_set for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__area_set_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:zone_set for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__zone_set_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:zone_set for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__zone_set_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:order_completion for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__order_completion_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:order_completion_condition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__order_completion_condition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], String_reader(arg_element)))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:order_ending for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__order_ending_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:trigger_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__trigger_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:secondary_zone_set for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__secondary_zone_set_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:secondary_zone_set for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__secondary_zone_set_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:secondary_set_trigger for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__secondary_set_trigger_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:zone for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__zone_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:zone for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__zone_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:firing_positions for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__firing_positions_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Custom_reader(arg_element)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:firing_positions for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__firing_positions_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Custom_reader(arg_element)))
    


#	Static loader for block:firing_positions for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__firing_positions_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Custom_reader(arg_element)))
    


#	Static loader for block:firing_positions for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__firing_positions_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[8], Custom_reader(arg_element)))
    


#	Static loader for block:areas for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__areas_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:areas for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__areas_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:flight_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__flight_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:character_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:ai_animation_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_animation_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:ai_script_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_script_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:ai_recording_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_recording_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:ai_conversation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_conversation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ai_conversation_participant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_conversation_participant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], String_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:ai_conversation_line for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_conversation_line_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    


#	Static loader for block:cs_script_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cs_script_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:cs_point_set for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cs_point_set_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:cs_point_set for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cs_point_set_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:cs_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cs_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], RealEulerAngles2D_reader(arg_element)))
    


#	Static loader for block:cs_point for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cs_point_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], RealEulerAngles2D_reader(arg_element)))
    


#	Static loader for block:triggers for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__triggers_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ai_scene for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_scene_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ai_scene_trigger for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_scene_trigger_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ai_scene_role for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_scene_role_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ai_scene_role_variants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_scene_role_variants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    


#	Static loader for block:flock_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__flock_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], s_2short.unpack(arg_element.read(4))))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[36]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], StringId_reader(arg_element)))
    


#	Static loader for block:flock_source for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__flock_source_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:flock_sink for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__flock_sink_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_trigger_volume for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_trigger_volume_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], String_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_trigger_volume for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_trigger_volume_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_cutscene_flag for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cutscene_flag_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], RealEulerAngles2D_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_cutscene_camera_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cutscene_camera_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Custom_reader = READERS['Custom']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], String_reader(arg_element)))
    append(_TagField(arg_defs[3], Custom_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:recorded_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__recorded_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Data_reader = READERS['Data']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Data_reader(arg_element)))
    


#	Static loader for block:scenario_cluster_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_cluster_background_sounds for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_background_sounds_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_cluster_sound_environments for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_sound_environments_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_cluster_points for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_points_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:scenario_cluster_weather_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_weather_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_cluster_atmospheric_fog_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_atmospheric_fog_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_atmospheric_fog_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_atmospheric_fog_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[25], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[27], TagReference_reader(arg_element)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[35], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[36]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_atmospheric_fog_mixer for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_atmospheric_fog_mixer_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:scenario_decorator_set_palette_entry for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_decorator_set_palette_entry_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_decal_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_decal_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_decals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_decals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:device_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__device_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_machine for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_machine_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_machine for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_machine_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_machine for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_machine_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_machine for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_machine_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:old_scenario_device for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__old_scenario_device_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:scenario_machine_struct_v2 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_machine_struct_v2_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_machine_struct_v3 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_machine_struct_v3_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_machine_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_machine_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_control for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_control_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], Custom_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_control for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_control_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_control for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_control_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_control for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_control_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_control_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_control_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light_fixture for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_fixture_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], RealEulerAngles3D_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light_fixture for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_fixture_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_light_fixture for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_fixture_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_light_fixture for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_light_fixture_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_light_fixture_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_light_fixture_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_structure_bsp_spherical_harmonic_lighting for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_structure_bsp_spherical_harmonic_lighting_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_spherical_harmonic_lighting_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_spherical_harmonic_lighting_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:large_bsp3d_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_bsp3d_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:planes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__planes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    append(_TagField(arg_defs[0], RealPlane3D_reader(arg_element)))
    


#	Static loader for block:large_leaves for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_leaves_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:large_bsp2d_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_bsp2d_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:large_bsp2d_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_bsp2d_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane2D_reader = READERS['RealPlane2D']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], RealPlane2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:large_surfaces for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_surfaces_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:large_edges for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_edges_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:large_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:small_bsp3d_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__small_bsp3d_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:leaves for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__leaves_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:bsp2d_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bsp2d_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:bsp2d_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bsp2d_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane2D_reader = READERS['RealPlane2D']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], RealPlane2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:surfaces for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__surfaces_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:edges for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__edges_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:edges for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__edges_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:bsp3d_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bsp3d_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for structure:global_collision_bsp for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_collision_bsp_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:global_collision_bsp for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_collision_bsp_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:global_collision_bsp for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_collision_bsp_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:collision_bsp_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_bsp_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Ptr_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[16], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[23], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[24], Data_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:spheres for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__spheres_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[19], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[20], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[25], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[26]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[27], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[28]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[30]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[32]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:pills for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pills_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[19]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[21]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for structure:character_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__character_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:character_physics_ground for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__character_physics_ground_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:character_physics_flying for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__character_physics_flying_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:character_physics_dead for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__character_physics_dead_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:character_physics_sentinel for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__character_physics_sentinel_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:planar_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__planar_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[19], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[23], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[24], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[28], TagReference_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:planar_fog_patchy_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__planar_fog_patchy_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_decals_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_decals_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_interface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_interface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[24], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[27], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[29], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[30], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_static for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_static_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_meter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_meter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[17], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[18], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[20], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[21], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_number for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_number_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[21], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[22], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_crosshair for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_crosshair_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_crosshair_item for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_crosshair_item_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_overlays for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_overlays_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_hud_overlay for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_hud_overlay_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_hud_screen_effect_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_hud_screen_effect_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[20], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], TagReference_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:chocolate_mountain for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__chocolate_mountain_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:lighting_variables for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lighting_variables_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:primary_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__primary_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], Custom_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:secondary_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__secondary_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], Custom_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:ambient_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__ambient_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], Custom_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:lightmap_shadows for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__lightmap_shadows_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:scenario_devices_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_devices_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_comments_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_comments_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:item_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__item_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:item_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__item_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:particle for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], Custom_reader(arg_element)))
    append(_TagField(arg_defs[7], Custom_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Custom_reader(arg_element)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[23], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[24], Explanation_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:model for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:model for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[29], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[30], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], StringId_reader(arg_element)))
    fd = arg_defs[32]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[34], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[37], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[38], StringId_reader(arg_element)))
    


#	Static loader for block:model_variant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_variant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    


#	Static loader for block:model_variant_region for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_variant_region_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:model_variant_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_variant_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:model_variant_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_variant_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:model_variant_state for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_variant_state_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:model_variant_object for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_variant_object_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    


#	Static loader for block:model_material for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_material_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_damage_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_damage_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[20], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[21], TagReference_reader(arg_element)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_damage_info for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_damage_info_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], StringId_reader(arg_element)))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[26], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[27], TagReference_reader(arg_element)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[37], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[38], TagReference_reader(arg_element)))
    


#	Static loader for block:global_damage_section for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_damage_section_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], StringId_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:instantaneous_damage_repsonse for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__instantaneous_damage_repsonse_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], StringId_reader(arg_element)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[16], StringId_reader(arg_element)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], StringId_reader(arg_element)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[20], StringId_reader(arg_element)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:instantaneous_response_damage_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__instantaneous_response_damage_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:instantaneous_response_damage_effect for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__instantaneous_response_damage_effect_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for structure:instantaneous_response_damage_effect_marker for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__instantaneous_response_damage_effect_marker_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:instantaneous_response_damage_effect_marker for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__instantaneous_response_damage_effect_marker_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    


#	Static loader for block:global_damage_nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_damage_nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:damage_seat_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_seat_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:damage_constraint_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_constraint_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:model_region for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_region_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:model_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:model_node for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_node_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:model_object_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_object_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:model_target for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_target_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:model_target_lock_on_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__model_target_lock_on_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_scenario_load_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_scenario_load_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:effect_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__effect_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:effect_part for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__effect_part_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[11], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:beam for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__beam_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:effect_accelerations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__effect_accelerations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:vertex_shader for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vertex_shader_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:vertex_shader for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vertex_shader_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:vertex_shader_classification for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vertex_shader_classification_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Ptr_reader = READERS['Ptr']
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    


#	Static loader for block:color_table for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__color_table_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:color for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__color_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    s_4real = arg_loader.s_4real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    


#	Static loader for block:scenario_decorators_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_decorators_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:mouse_cursor_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mouse_cursor_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:mouse_cursor_bitmap_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mouse_cursor_bitmap_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:user_interface_globals_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_interface_globals_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    


#	Static loader for block:user_interface_widget_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_interface_widget_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:screen_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__screen_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:rasterizer_screen_effect_pass_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rasterizer_screen_effect_pass_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:rasterizer_screen_effect_texcoord_generation_advanced_control for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rasterizer_screen_effect_texcoord_generation_advanced_control_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], RealPlane3D_reader(arg_element)))
    append(_TagField(arg_defs[5], RealPlane3D_reader(arg_element)))
    append(_TagField(arg_defs[6], RealPlane3D_reader(arg_element)))
    append(_TagField(arg_defs[7], RealPlane3D_reader(arg_element)))
    


#	Static loader for block:rasterizer_screen_effect_convolution for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rasterizer_screen_effect_convolution_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:unit for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], TagReference_reader(arg_element)))
    fd = arg_defs[50]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[55]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], StringId_reader(arg_element)))
    append(_TagField(arg_defs[78], StringId_reader(arg_element)))
    fd = arg_defs[79]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[80]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[81], TagReference_reader(arg_element)))
    fd = arg_defs[82]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[83], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[84]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[85]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[86]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[87]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[89], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[90], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[91]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[92]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[93]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[95], Explanation_reader(arg_element)))
    fd = arg_defs[96]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    fd = arg_defs[98]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:unit_camera for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_camera_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:unit_camera_track for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_camera_track_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:unit_seat_acceleration for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_seat_acceleration_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:unit_additional_node_names for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_additional_node_names_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:unit_additional_node_names for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_additional_node_names_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    


#	Static loader for structure:unit_boarding_melee for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_boarding_melee_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:unit_boarding_melee for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_boarding_melee_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    


#	Static loader for structure:campaign_metagame_bucket for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__campaign_metagame_bucket_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:unit_postures for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_postures_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:unit_hud_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_hud_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:dialogue_variant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__dialogue_variant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for block:powered_seat for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__powered_seat_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:unit_weapon for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_weapon_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:unit_seat for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_seat_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[2], OldStringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_seat for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_seat_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[2], OldStringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], TagReference_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_seat for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_seat_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[2], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[14], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], TagReference_reader(arg_element)))
    fd = arg_defs[28]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_seat for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_seat_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[2], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[17], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Explanation_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], StringId_reader(arg_element)))
    fd = arg_defs[26]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], TagReference_reader(arg_element)))
    fd = arg_defs[30]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[36]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[37], StringId_reader(arg_element)))
    append(_TagField(arg_defs[38], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:unit_boost for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_boost_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:unit_lipsync_scales for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_lipsync_scales_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:unit_lipsync_scales for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__unit_lipsync_scales_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_vehicles_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_vehicles_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:model_animation_graph for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__model_animation_graph_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:animation_graph_resources for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_graph_resources_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:animation_graph_resources for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_graph_resources_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:animation_graph_resources for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_graph_resources_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_graph_node for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_graph_node_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_graph_node for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_graph_node_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_graph_sound_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_graph_sound_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:animation_blend_screen for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_blend_screen_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:animation_aiming_screen for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_aiming_screen_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:animation_pool for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_pool_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[19], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[24], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Data_reader(arg_element)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[30], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_pool for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_pool_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], Data_reader(arg_element)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_pool for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_pool_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], Data_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_pool for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_pool_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], Data_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_pool for version 4
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_pool_version_4(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], Data_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_pool for version 5
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_pool_version_5(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Data_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_frame_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_frame_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:animation_sound_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_sound_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


#	Static loader for structure:packed_data_sizes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__packed_data_sizes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_effect_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_effect_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


#	Static loader for block:animation_effect_event for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_effect_event_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:object_space_node_data_block_v0 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_space_node_data_block_v0_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:object_space_node_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_space_node_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:quantized_orientation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__quantized_orientation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_graph_effect_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_graph_effect_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:animation_graph_contents for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_graph_contents_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_mode for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_mode_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:weapon_class for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_class_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:weapon_type for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_type_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:animation_entry for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_entry_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:animation_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:damage_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:damage_direction for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_direction_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:damage_region for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_region_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:animation_transition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_transition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:animation_transition_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_transition_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:animation_transition_destination for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_transition_destination_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:animation_destination_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__animation_destination_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:precache_list for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__precache_list_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:animation_ik for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_ik_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    


#	Static loader for block:vehicle_suspension for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicle_suspension_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:object_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:model_animation_runtime_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__model_animation_runtime_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:inherited_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__inherited_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:inherited_animation_node_map for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__inherited_animation_node_map_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:inherited_animation_node_map_flag for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__inherited_animation_node_map_flag_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:weapon_class_lookup for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_class_lookup_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    


#	Static loader for block:additional_node_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__additional_node_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:style for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__style_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[15], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[16], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[17], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[21], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[27]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:behavior_names for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__behavior_names_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    


#	Static loader for block:projectile for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__projectile_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[49], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[50], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[51], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[52], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[53], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[59], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[65], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[66], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[71]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[72], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[73], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[74], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[75], TagReference_reader(arg_element)))
    fd = arg_defs[76]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[77]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[78], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[79], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[80], TagReference_reader(arg_element)))
    


#	Static loader for block:projectile for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__projectile_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[53], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[54], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[55], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[58], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[59], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[60], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[61], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[64], TagReference_reader(arg_element)))
    fd = arg_defs[65]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[68]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    fd = arg_defs[70]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[73], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[74], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[75], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[76], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[79], TagReference_reader(arg_element)))
    fd = arg_defs[80]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[81], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[84], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[86], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[87], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[88]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[89], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[90], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[91]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[92], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[93]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:projectile_material_response for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__projectile_material_response_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[12], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], TagReference_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:super_detonation_damage for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__super_detonation_damage_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:super_detonation_damage for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__super_detonation_damage_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for structure:angular_velocity_lower_bound for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__angular_velocity_lower_bound_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:angular_velocity_lower_bound for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__angular_velocity_lower_bound_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:crate for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__crate_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[45]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_template for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_template_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_template for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_template_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_template_parameter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_template_parameter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Custom_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_effect_templates for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_templates_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_effect_template_additional_sound_input for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_template_additional_sound_input_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:platform_sound_effect_template_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_template_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    


#	Static loader for block:platform_sound_effect_template for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_template_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:platform_sound_effect_template_component for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_effect_template_component_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:collision_model for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:collision_model for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:OLD_global_damage_resistance for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__OLD_global_damage_resistance_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:collision_model_material for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_material_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    


#	Static loader for block:collision_model_region for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_region_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:collision_model_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:collision_model_permutation for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_permutation_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:collision_model_bsp for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_bsp_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:collision_model_pathfinding_sphere for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_pathfinding_sphere_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:collision_model_node for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_node_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:collision_model_node for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_model_node_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:equipment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__equipment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[71], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], TagReference_reader(arg_element)))
    fd = arg_defs[74]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_scenario_description for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_scenario_description_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_description for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_description_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], String_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_light_response for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_light_response_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_hud_interface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_hud_interface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[27], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[34], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[38], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[39], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[42]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[43], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[44]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[45]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[47], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[48], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[54], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[55], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[56], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[60], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[61], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[62], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[63], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[64], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[65], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[67], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[68]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[69]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[70], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[71], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[74]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[75], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[76], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[79], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[80]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[81]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[82], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[83], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[84], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[86], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[87], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[88], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[89], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[90], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[91]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[92], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[93]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[95]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[96], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[97], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[98], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[99], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[100], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[101]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[102]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[103], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[104], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[105], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[106], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[107], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[108], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[109], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[110], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[111], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[112], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[113], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[114], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[117]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[118]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[119], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[120], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[121], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[122]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[123], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[124], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[125], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[126], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[127], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[128]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[129]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[130], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[131], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[132], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[133], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[134], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[135], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[136], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[137], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[138], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[139]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[140], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[141]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[142]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[143]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[144], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[145], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[146], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[147], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[148], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[149]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[150]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[151], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[152], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[153], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[154], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[155], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[156], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[157], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[158], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[159], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[160]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[161], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[162]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[163]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[164]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[165]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[166], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[167], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[168], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[169], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[170], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[171]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[172]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[173], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[174], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[175]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[176]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[177]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[178]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[179], Explanation_reader(arg_element)))
    fd = arg_defs[180]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[181], Explanation_reader(arg_element)))
    fd = arg_defs[182]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[183], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[184], TagReference_reader(arg_element)))
    fd = arg_defs[185]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[186]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_hud_auxilary_overlay for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_hud_auxilary_overlay_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_hud_sound for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_hud_sound_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:unit_hud_auxilary_panel for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__unit_hud_auxilary_panel_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[25], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[32], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[37], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[38], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[39], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[40], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[41], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[42], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[45]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[49]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:long for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__long_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:item for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__item_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    


#	Static loader for block:predicted_bitmaps for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__predicted_bitmaps_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:sound_cache_file_gestalt for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_cache_file_gestalt_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_codec for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_codec_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:sound_gestalt_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_scale for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_scale_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_import_names for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_import_names_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    


#	Static loader for block:sound_gestalt_pitch_range_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_pitch_range_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[2], s_2short.unpack(arg_element.read(4))))
    


#	Static loader for block:sound_gestalt_pitch_ranges for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_pitch_ranges_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:sound_gestalt_permutations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_permutations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_permutation_language_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_permutation_language_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:sound_gestalt_custom_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_custom_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_reflections for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_reflections_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_gestalt_lowpass for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_lowpass_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_remastered_sound_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_remastered_sound_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:sound_gestalt_runtime_permutation_bit_vector for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_runtime_permutation_bit_vector_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:sound_gestalt_language_chunks for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_language_chunks_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_promotions for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_promotions_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_gestalt_extra_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_gestalt_extra_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Array_reader = SPECIAL_READERS['Array']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_universal for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_universal_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for block:multiplayer_runtime for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_runtime_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[17], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[37]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[42]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[43], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[47]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[48], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[53], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[57]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[58], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[62]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[65], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[67]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[68], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[72]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[73], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[77]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[78]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[79]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_runtime for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_runtime_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[34], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[35], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[37]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[41]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[42], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[46]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[47], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[51]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[52], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[53], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[56]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[57], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[61]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[65], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[66]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[67], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[71]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[72], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[73], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[76]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[77], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[78], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[79], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[80], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[81]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[82], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[83], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[84], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[86]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[87], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[89], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[90], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[91]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[92], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[93], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[94], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[95], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[96]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[98], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[99], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[100], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[101]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[102], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[103], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[104], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[105], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[106]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[107]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[108]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[109]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[110]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[111], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[112], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[113], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[114], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[115], TagReference_reader(arg_element)))
    


#	Static loader for block:weapons for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapons_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:vehicles for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicles_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:sounds for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sounds_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for structure:grenade_and_powerup for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__grenade_and_powerup_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:grenade_and_powerup for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__grenade_and_powerup_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:grenade for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__grenade_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:powerup for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__powerup_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:game_engine_flavor_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_flavor_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_medic_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_medic_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_vip_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_vip_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_juggernaut_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_juggernaut_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_territories_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_territories_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_assault_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_assault_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_infection_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_infection_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_headhunter_event for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_headhunter_event_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_constants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_constants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[20], StringId_reader(arg_element)))
    append(_TagField(arg_defs[21], StringId_reader(arg_element)))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:game_engine_status_response for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_engine_status_response_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_template for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_template_property for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_property_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


#	Static loader for block:shader_template_runtime_external_light_response_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_runtime_external_light_response_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_template_postprocess_definition_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_postprocess_definition_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_template_postprocess_level_of_detail_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_postprocess_level_of_detail_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_template_postprocess_pass_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_postprocess_pass_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_template_postprocess_implementation_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_postprocess_implementation_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:shader_template_postprocess_remapping_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_template_postprocess_remapping_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_char = arg_loader.s_char
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:device_control for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__device_control_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[55], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[56], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[57], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[58], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[59], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[60], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[62]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[67], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[68], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], StringId_reader(arg_element)))
    fd = arg_defs[71]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[72], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[73], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[74], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_cinematics_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cinematics_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:detail_object_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__detail_object_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:detail_object_type for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__detail_object_type_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Data_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[44]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[45]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[47]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[48]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[49]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[51]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[55]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[56]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[57]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[58]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[59]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[60]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[61]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], Data_reader(arg_element)))
    append(_TagField(arg_defs[63], Data_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[66]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[67]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[68]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[69]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[70]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[71]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[72]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[73]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[74], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[75], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[76], TagReference_reader(arg_element)))
    fd = arg_defs[77]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Array_reader = SPECIAL_READERS['Array']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Data_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[38]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[44]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[45]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[47]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[48]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[49]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[51]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[55], Data_reader(arg_element)))
    append(_TagField(arg_defs[56], Data_reader(arg_element)))
    fd = arg_defs[57]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[58]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[59]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[60]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[61]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[62]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[63]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[65], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], TagReference_reader(arg_element)))
    fd = arg_defs[68]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[69]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[70]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[71]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[72]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[73]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[74]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[75]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[76]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[77]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[78]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[79]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[80]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[81]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[82]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[83]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[84]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[85]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[86]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[87], TagReference_reader(arg_element)))
    fd = arg_defs[88]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[89]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[90], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[91], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[92], Explanation_reader(arg_element)))
    fd = arg_defs[93]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[95]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[96], TagReference_reader(arg_element)))
    fd = arg_defs[97]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[98]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[99]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[100]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[101]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[102]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[103]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[104]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[105], TagReference_reader(arg_element)))
    fd = arg_defs[106]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[107]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[108], TagReference_reader(arg_element)))
    fd = arg_defs[109]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[110]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[111]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[112]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Array_reader = SPECIAL_READERS['Array']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Data_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[38]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[44]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[45]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[47]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[48]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[49]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[51]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[55], Data_reader(arg_element)))
    append(_TagField(arg_defs[56], Data_reader(arg_element)))
    fd = arg_defs[57]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[58]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[59]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[60]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[61]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[62]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[63]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[65], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], TagReference_reader(arg_element)))
    fd = arg_defs[68]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[69]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[70]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[71]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[72]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[73]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[74]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[75]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[76]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[77]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[78]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[79]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[80]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[81]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[82]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[83]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[84]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[85]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[86]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[87], TagReference_reader(arg_element)))
    fd = arg_defs[88]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[89]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[90], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[91], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[92], Explanation_reader(arg_element)))
    fd = arg_defs[93]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[95]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[96], TagReference_reader(arg_element)))
    fd = arg_defs[97]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[98]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[99]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[100]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[101]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[102]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[103]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[104]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[105], TagReference_reader(arg_element)))
    fd = arg_defs[106]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[107]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[108], TagReference_reader(arg_element)))
    fd = arg_defs[109]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[110]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[111]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[112]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_sky_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_sky_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_child_scenario for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_child_scenario_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_profiles for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_profiles_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_netpoints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_netpoints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], StringId_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_netpoints for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_netpoints_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], StringId_reader(arg_element)))
    


#	Static loader for block:scenario_netgame_equipment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_netgame_equipment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:scenario_netgame_equipment_orientation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__scenario_netgame_equipment_orientation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealEulerAngles3D_reader = READERS['RealEulerAngles3D']
    append(_TagField(arg_defs[0], RealEulerAngles3D_reader(arg_element)))
    


#	Static loader for block:scenario_starting_equipment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_starting_equipment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_bsp_switch_trigger_volume for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_bsp_switch_trigger_volume_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_detail_object_collection_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_detail_object_collection_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:actor_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__actor_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:hs_scripts for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hs_scripts_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:hs_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hs_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:hs_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hs_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    


#	Static loader for block:hs_source_files for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hs_source_files_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    Data_reader = READERS['Data']
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    


#	Static loader for block:scenario_cutscene_title for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cutscene_title_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Rectangle2D_reader = READERS['Rectangle2D']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_resources for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_resources_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_resource_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_resource_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_hs_source_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_hs_source_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_ai_resource_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_ai_resource_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:old_unused_strucure_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_unused_strucure_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:old_unused_object_identifiers for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_unused_object_identifiers_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:hs_unit_seat for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hs_unit_seat_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_kill_trigger_volumes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_kill_trigger_volumes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:syntax_datum for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__syntax_datum_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_scavenger_hunt_object for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scavenger_hunt_object_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_spawn_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_spawn_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:dynamic_spawn_zone_overload for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__dynamic_spawn_zone_overload_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:static_spawn_zone for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__static_spawn_zone_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:static_spawn_zone_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__static_spawn_zone_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_planar_fog_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_planar_fog_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_bsp_switch_transition_volume for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_bsp_switch_transition_volume_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_level_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_level_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ai_scenario_mission_dialogue for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_scenario_mission_dialogue_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_interpolator for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_interpolator_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    Skip_reader = SPECIAL_READERS['Skip']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:scenario_screen_effect_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_screen_effect_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:scenario_simulation_definition_table for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_simulation_definition_table_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:antenna for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__antenna_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:antenna_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__antenna_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[7], s_4real.unpack(arg_element.read(16))))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:particle_model for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_model_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:particle_models for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_models_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:particle_model_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_model_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:particle_model_indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_model_indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:particle_model::cached_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_model____cached_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    append(_TagField(arg_defs[0], VertexBuffer_reader(arg_element)))
    


#	Static loader for block:scenario_lights_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_lights_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_dialogue_constants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_dialogue_constants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:biped for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__biped_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], TagReference_reader(arg_element)))
    fd = arg_defs[50]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[55]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], StringId_reader(arg_element)))
    append(_TagField(arg_defs[78], StringId_reader(arg_element)))
    fd = arg_defs[79]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[80]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[81], TagReference_reader(arg_element)))
    fd = arg_defs[82]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[83], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[84]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[85]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[86]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[87]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[89], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[90], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[91]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[92]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[93]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[95], Explanation_reader(arg_element)))
    fd = arg_defs[96]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    fd = arg_defs[98]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[99], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[100], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[101]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[102], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[103]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[104], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[105], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[106], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[107], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[108], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[109], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[110], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[111], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[112], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[113], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[114], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[117], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[118], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[119], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[120], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[121]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[122], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[123], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[124], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[125], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[126], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[127], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[128], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[129], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[130]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[131], TagReference_reader(arg_element)))
    fd = arg_defs[132]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[133], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[134], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[135]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[136], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[137], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[138], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[139], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[140], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[141], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[142]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[143], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[144], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[145], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[146], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[147], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[148], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[149], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[150], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[151], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[152], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[153], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[154], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[155], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[156], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[157], StringId_reader(arg_element)))
    fd = arg_defs[158]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[159]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[160], StringId_reader(arg_element)))
    fd = arg_defs[161]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[162], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[163]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[164]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[165]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:biped for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__biped_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], TagReference_reader(arg_element)))
    fd = arg_defs[50]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[55]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], StringId_reader(arg_element)))
    append(_TagField(arg_defs[78], StringId_reader(arg_element)))
    fd = arg_defs[79]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[80]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[81], TagReference_reader(arg_element)))
    fd = arg_defs[82]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[83], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[84]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[85]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[86]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[87]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[89], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[90], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[91]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[92]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[93]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[95], Explanation_reader(arg_element)))
    fd = arg_defs[96]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    fd = arg_defs[98]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[99], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[100], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[101], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[102], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[103]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[104]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[105], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[106], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[107]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[108], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[109], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[110], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[111], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[112], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[113], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[114]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[117], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[118], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[119], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[120], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[121], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[122], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[123], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[124], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[125], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[126], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[127]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[128]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[129]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[130], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[131], TagReference_reader(arg_element)))
    fd = arg_defs[132]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[133]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[134], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[135], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[136], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[137]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:contact_point_block_v1 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__contact_point_block_v1_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    


#	Static loader for structure:biped_lock_on_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__biped_lock_on_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:biped_lock_on_data for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__biped_lock_on_data_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:contact_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__contact_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    


#	Static loader for block:vehicle_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicle_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:vehicle_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicle_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


#	Static loader for block:hud_message_text for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_message_text_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:hud_message_elements for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_message_elements_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:hud_messages for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_messages_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:creature for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__creature_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[46]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[52]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[53], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[54]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[55]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[57], TagReference_reader(arg_element)))
    fd = arg_defs[58]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[59], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[60], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:scenario_structure_lighting_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_structure_lighting_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:garbage for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__garbage_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    fd = arg_defs[70]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:device_light_fixture for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__device_light_fixture_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[55], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[56], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[57], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[58], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[59], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[60], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[62]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], Explanation_reader(arg_element)))
    fd = arg_defs[67]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:cache_file_sound for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cache_file_sound_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[15], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:lens_flare for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lens_flare_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:lens_flare_reflection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lens_flare_reflection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:lens_flare_scalar_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lens_flare_scalar_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:lens_flare_color_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lens_flare_color_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:cellular_automata2d for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cellular_automata2d_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[14], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[16], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[19], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[20], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[25], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], TagReference_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:rules for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rules_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:states for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__states_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:scenario_equipment_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_equipment_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:decorators for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorators_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_structure_bsp for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_structure_bsp_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    s_3real = arg_loader.s_3real
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Data_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], Data_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[38]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[44]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[47]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[48], TagReference_reader(arg_element)))
    fd = arg_defs[49]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[51]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_collision_materials for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_collision_materials_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for block:global_collision_bsp for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_collision_bsp_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:global_collision_bsp for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_collision_bsp_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:global_collision_bsp for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_collision_bsp_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:UNUSED_structure_bsp_node for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__UNUSED_structure_bsp_node_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_leaf for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_leaf_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_bsp_leaf for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_leaf_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_bsp_surface_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_surface_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_surface_reference for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_surface_reference_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_bsp_cluster_portal for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_portal_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_cluster_portal_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_portal_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:structure_bsp_fog_plane for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_fog_plane_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], RealPlane3D_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_weather_polyhedron for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_weather_polyhedron_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_weather_polyhedron_plane for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_weather_polyhedron_plane_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    append(_TagField(arg_defs[0], RealPlane3D_reader(arg_element)))
    


#	Static loader for block:structure_bsp_detail_object_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_detail_object_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_detail_object_cells for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_detail_object_cells_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:global_detail_object for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_detail_object_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:global_detail_object_counts for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_detail_object_counts_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:global_z_reference_vector for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_z_reference_vector_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_bsp_cluster for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Ptr_reader = READERS['Ptr']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    fd = arg_defs[22]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Ptr_reader(arg_element)))
    


#	Static loader for block:structure_bsp_cluster for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_2real = arg_loader.s_2real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], Data_reader(arg_element)))
    fd = arg_defs[26]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], Data_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_cluster for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_2real = arg_loader.s_2real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], Data_reader(arg_element)))
    


#	Static loader for block:structure_indices_segment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_indices_segment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_indices_segment_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_indices_segment_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:structure_subcluster for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_subcluster_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_cluster_portal_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_portal_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_shared_edge for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_shared_edge_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_shared_edge_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_shared_edge_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_subcluster_boundary for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_subcluster_boundary_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_strip_segment_first_triangle_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_strip_segment_first_triangle_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_cluster_lightmap_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_lightmap_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_cluster_lightmap_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_lightmap_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_cluster_lightmap_texture_coordinate for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_lightmap_texture_coordinate_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:structure_bsp_cluster_lightmap_duplicate_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_lightmap_duplicate_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_lightmap_sampling_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_lightmap_sampling_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_lightmap_bsp_leaf for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_lightmap_bsp_leaf_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_lightmap_surface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_lightmap_surface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_cluster_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Ptr_reader = READERS['Ptr']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Ptr_reader(arg_element)))
    


#	Static loader for structure:structure_bsp_cluster_mopp_shape for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__structure_bsp_cluster_mopp_shape_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_cluster_visibility_mopp_leaf for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_visibility_mopp_leaf_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:structure_bsp_cluster_havok_shape for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__structure_bsp_cluster_havok_shape_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_cluster_instanced_geometry_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_instanced_geometry_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:visibility_mopp_reorder_table for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__visibility_mopp_reorder_table_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_cluster_data_block_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_data_block_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_sky_owner_cluster for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_sky_owner_cluster_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_conveyor_surface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_conveyor_surface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:structure_bsp_breakable_surface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_breakable_surface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_bsp_pathfinding_edges for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_pathfinding_edges_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:structure_bsp_marker for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_marker_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    String_reader = READERS['String']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:structure_bsp_runtime_decal for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_runtime_decal_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_environment_object_palette for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_environment_object_palette_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_environment_object for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_environment_object_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Tag_reader = READERS['Tag']
    Pad_reader = SPECIAL_READERS['Pad']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Tag_reader(arg_element)))
    append(_TagField(arg_defs[7], String_reader(arg_element)))
    


#	Static loader for block:structure_bsp_lightmap_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_lightmap_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:global_map_leaf for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_map_leaf_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:map_leaf_face for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__map_leaf_face_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:map_leaf_face_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__map_leaf_face_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:map_leaf_connection_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__map_leaf_connection_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_leaf_connection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_leaf_connection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:leaf_connection_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__leaf_connection_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:structure_bsp_precomputed_lighting for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_precomputed_lighting_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:visibility for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__visibility_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    append(_TagField(arg_defs[5], Data_reader(arg_element)))
    append(_TagField(arg_defs[6], Data_reader(arg_element)))
    append(_TagField(arg_defs[7], Data_reader(arg_element)))
    


#	Static loader for block:structure_bsp_instanced_geometry_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_instanced_geometry_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:structure_instanced_geometry_render_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__structure_instanced_geometry_render_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:structure_instanced_geometry_render_info for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__structure_instanced_geometry_render_info_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_instanced_geometry_instances for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_instanced_geometry_instances_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], StringId_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_instanced_geometry_instances for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_instanced_geometry_instances_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], StringId_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_instanced_geometry_instances for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_instanced_geometry_instances_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], StringId_reader(arg_element)))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_sound_cluster for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_sound_cluster_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_sound_cluster_portal_designators for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_sound_cluster_portal_designators_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_sound_cluster_interior_cluster_indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_sound_cluster_interior_cluster_indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:transparent_planes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__transparent_planes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], RealPlane3D_reader(arg_element)))
    


#	Static loader for block:structure_bsp_debug_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_debug_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_cluster_debug_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_cluster_debug_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_debug_info_render_line for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_debug_info_render_line_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:structure_bsp_debug_info_indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_debug_info_indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:structure_bsp_fog_plane_debug_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_fog_plane_debug_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_bsp_fog_zone_debug_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_fog_zone_debug_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:global_structure_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_structure_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:breakable_surface_key_table for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__breakable_surface_key_table_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_water_definitions for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_water_definitions_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[19], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:water_geometry_section for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__water_geometry_section_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:structure_portal_device_mapping for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_portal_device_mapping_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_device_portal_association for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_device_portal_association_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:game_portal_to_portal_mapping for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_portal_to_portal_mapping_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:structure_bsp_audibility for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_audibility_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:door_encoded_pas for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__door_encoded_pas_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:cluster_door_portal_encoded_pas for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cluster_door_portal_encoded_pas_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:ai_deafening_encoded_pas for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_deafening_encoded_pas_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:encoded_cluster_distances for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__encoded_cluster_distances_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:occluder_to_machine_door_mapping for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__occluder_to_machine_door_mapping_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:structure_bsp_fake_lightprobes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_bsp_fake_lightprobes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:render_lighting for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__render_lighting_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_classes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_classes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_classes for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_classes_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_class for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_class_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_class for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_class_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], Custom_reader(arg_element)))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_class for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_class_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], Custom_reader(arg_element)))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_class for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_class_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], Custom_reader(arg_element)))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_class_ducker_block_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_class_ducker_block_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:weather_system for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weather_system_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_particle_system_lite for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_particle_system_lite_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:particle_system_lite_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_system_lite_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:particles_render_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particles_render_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:particles_update_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particles_update_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_weather_background_plate for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_weather_background_plate_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[14], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[24], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[25], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:global_wind_model for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_wind_model_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:gloal_wind_primitives for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__gloal_wind_primitives_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decal for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decal_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[15], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], TagReference_reader(arg_element)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:inertial_matrix for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__inertial_matrix_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:powered_mass_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__powered_mass_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], StringId_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:mass_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mass_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], TagReference_reader(arg_element)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], TagReference_reader(arg_element)))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:havok_cleanup_resources for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__havok_cleanup_resources_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:collision_damage for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__collision_damage_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_globals for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_globals_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sound_globals for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_globals_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:ai_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[29], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[30], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[32], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[33], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[38], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:ai_globals_gravemind for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_globals_gravemind_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:game_globals_damage for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__game_globals_damage_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:damage_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:armor_modifier for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__armor_modifier_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:custom_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__custom_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:sound_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:camera for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__camera_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:player_control for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__player_control_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:look_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__look_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:difficulty for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__difficulty_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[37]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[53], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[65], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[79], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[80], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[81], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[84], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[86], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[87]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[88], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[89], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[90], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[91], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[92], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[93], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[94], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[95], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[96], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[97]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[98]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[99]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[100], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[101], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[102], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[103], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[104], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[105], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[106], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[107], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[108], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[109], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[110], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[111], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[112], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[113], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[114], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[117], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[118]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[119]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[120]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[121]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:grenades for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__grenades_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    


#	Static loader for block:rasterizer_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rasterizer_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[20], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[23], TagReference_reader(arg_element)))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[36], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[37], TagReference_reader(arg_element)))
    


#	Static loader for block:vertex_shader_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vertex_shader_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:interface_tag_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__interface_tag_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    


#	Static loader for block:cheat_weapons for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cheat_weapons_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:cheat_powerups for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cheat_powerups_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:multiplayer_information for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_information_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vehicles_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicles_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:sounds_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sounds_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:player_information for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__player_information_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[26], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[28], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[29], TagReference_reader(arg_element)))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[32], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[33], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[34], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[35], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[36], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[37], TagReference_reader(arg_element)))
    


#	Static loader for block:player_representation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__player_representation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    


#	Static loader for block:falling_damage for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__falling_damage_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:old_materials for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_materials_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    


#	Static loader for block:global_material_defintion for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_material_defintion_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    


#	Static loader for structure:material_physics_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__material_physics_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:material_physics_properties for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__material_physics_properties_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:materials_sweeteners for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__materials_sweeteners_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:multiplayer_ui for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_ui_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for block:runtime_levels_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__runtime_levels_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:runtime_campaign_level for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__runtime_campaign_level_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], LongString_reader(arg_element)))
    


#	Static loader for block:ui_levels_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_levels_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ui_campaign for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_campaign_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:weapon for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[71], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[72], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[73], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[74]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[79], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[80], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[81], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[84]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[85], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[86], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[87], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[88], TagReference_reader(arg_element)))
    fd = arg_defs[89]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[90]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[91], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[92]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[93]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[95], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[96], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[97], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[98], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[99]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[100], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[101], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[102]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[103], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[104]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[105], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[106], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[107]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[108]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[109], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[110], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[111], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[112], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[113], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[114], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[117], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[118]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[119], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[120], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[121], TagReference_reader(arg_element)))
    fd = arg_defs[122]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[123]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[124], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[125], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[126], TagReference_reader(arg_element)))
    fd = arg_defs[127]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[128], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[129], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[130], StringId_reader(arg_element)))
    append(_TagField(arg_defs[131], StringId_reader(arg_element)))
    append(_TagField(arg_defs[132], StringId_reader(arg_element)))
    append(_TagField(arg_defs[133], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[134], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[135]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[136]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[137]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[71], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[73], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[74], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[75], Explanation_reader(arg_element)))
    fd = arg_defs[76]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[79], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[80], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[81], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[84], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[86], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[87], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[88]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[89], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[90], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[91], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[92], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[93], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[94], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[95], Explanation_reader(arg_element)))
    fd = arg_defs[96]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    fd = arg_defs[98]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[99]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[100]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[101]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[102], Explanation_reader(arg_element)))
    fd = arg_defs[103]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[104], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[105], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[106], Explanation_reader(arg_element)))
    fd = arg_defs[107]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[108], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[109], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[110]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[111], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[112], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[113]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[114], Explanation_reader(arg_element)))
    fd = arg_defs[115]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[116], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[117], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[118], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[119], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[120], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[121], TagReference_reader(arg_element)))
    fd = arg_defs[122]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[123], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[124], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[125], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[126], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[127]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[128], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[129], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[130], TagReference_reader(arg_element)))
    fd = arg_defs[131]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[132]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[133], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[134], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[135], TagReference_reader(arg_element)))
    fd = arg_defs[136]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[137], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[138], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[139], StringId_reader(arg_element)))
    append(_TagField(arg_defs[140], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[141], StringId_reader(arg_element)))
    append(_TagField(arg_defs[142], StringId_reader(arg_element)))
    append(_TagField(arg_defs[143], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[144], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[145], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[146]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[147]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[148]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[149]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[150]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[151]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[152]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[71], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[73], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[74], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], Explanation_reader(arg_element)))
    fd = arg_defs[77]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[78], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[79], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[80], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[81], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[84], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[86], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[87], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[89]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[90], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[91], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[92], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[93], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[94], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[95], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[96], Explanation_reader(arg_element)))
    fd = arg_defs[97]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[98], Explanation_reader(arg_element)))
    fd = arg_defs[99]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[100], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[101]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[102]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[103]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[104], Explanation_reader(arg_element)))
    fd = arg_defs[105]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[106], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[107], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[108], Explanation_reader(arg_element)))
    fd = arg_defs[109]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[110], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[111], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[112]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[113], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[114], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[115]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[116], Explanation_reader(arg_element)))
    fd = arg_defs[117]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[118], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[119], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[120], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[121], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[122], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[123], TagReference_reader(arg_element)))
    fd = arg_defs[124]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[125], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[126], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[127], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[128], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[129]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[130], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[131], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[132], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[133], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[134], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[135], StringId_reader(arg_element)))
    append(_TagField(arg_defs[136], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[137], StringId_reader(arg_element)))
    append(_TagField(arg_defs[138], StringId_reader(arg_element)))
    append(_TagField(arg_defs[139], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[140], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[141], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[142]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[143]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[144]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[145]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[146]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[147]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[148]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[149]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[150]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[151], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[152], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[153], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[154], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[155], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[156]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[157], TagReference_reader(arg_element)))
    


#	Static loader for block:weapon for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], StringId_reader(arg_element)))
    append(_TagField(arg_defs[52], StringId_reader(arg_element)))
    append(_TagField(arg_defs[53], StringId_reader(arg_element)))
    append(_TagField(arg_defs[54], StringId_reader(arg_element)))
    append(_TagField(arg_defs[55], StringId_reader(arg_element)))
    append(_TagField(arg_defs[56], StringId_reader(arg_element)))
    append(_TagField(arg_defs[57], StringId_reader(arg_element)))
    append(_TagField(arg_defs[58], StringId_reader(arg_element)))
    append(_TagField(arg_defs[59], StringId_reader(arg_element)))
    append(_TagField(arg_defs[60], StringId_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    fd = arg_defs[64]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[67], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[68], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[71], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[73], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[74], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[79], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[80], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[81], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[84], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[85], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[86], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[87], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[88], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[89], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[90], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[91], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[92], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[93], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[94], Explanation_reader(arg_element)))
    fd = arg_defs[95]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[96], Explanation_reader(arg_element)))
    fd = arg_defs[97]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[98], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[99]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[100], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[101], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[102], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[103], Explanation_reader(arg_element)))
    fd = arg_defs[104]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[105], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[106], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[107]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[108], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[109], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[110]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[111], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[112], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[113], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[114], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[117], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[118], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[119], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[120], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[121], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[122], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[123], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[124], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[125], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[126], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[127], StringId_reader(arg_element)))
    append(_TagField(arg_defs[128], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[129], StringId_reader(arg_element)))
    append(_TagField(arg_defs[130], StringId_reader(arg_element)))
    append(_TagField(arg_defs[131], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[132], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[133], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[134]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[135]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[136]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[137]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[138]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[139]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[140]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[141]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[142], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[143], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[144], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[145], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[146], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[147], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[148], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[149], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[150], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[151], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for structure:melee_aim_assist for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__melee_aim_assist_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:melee_aim_assist for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__melee_aim_assist_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:melee_damage_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__melee_damage_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:melee_damage_parameters for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__melee_damage_parameters_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    


#	Static loader for structure:aim_assist for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__aim_assist_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:magazines for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__magazines_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:magazines for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__magazines_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[16], TagReference_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:magazine_objects for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__magazine_objects_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    


#	Static loader for block:magazine_objects for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__magazine_objects_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    


#	Static loader for structure:weapon_tracking for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_tracking_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:weapon_tracking for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_tracking_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_triggers for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_triggers_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:weapon_trigger_autofire for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_trigger_autofire_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for structure:weapon_trigger_charging for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_trigger_charging_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    


#	Static loader for block:weapon_barrels for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_barrels_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], StringId_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[27], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[32], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[33], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[35], TagReference_reader(arg_element)))
    fd = arg_defs[36]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[38], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[39]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[42]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[44]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[45], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[49]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[51], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:weapon_barrels for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_barrels_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[30], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[34], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[35], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[36]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[37], TagReference_reader(arg_element)))
    fd = arg_defs[38]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[39], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[46], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[50]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[51]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:weapon_barrels for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_barrels_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], StringId_reader(arg_element)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[22], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[30], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[31], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[35], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[36], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[37]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], TagReference_reader(arg_element)))
    fd = arg_defs[39]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[40], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[47], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[51]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:weapon_barrel_damage_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_barrel_damage_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:weapon_barrel_damage_effect for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_barrel_damage_effect_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:barrel_firing_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__barrel_firing_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    


#	Static loader for block:barrel_firing_effect for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__barrel_firing_effect_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    


#	Static loader for structure:weapon_interface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_interface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for structure:weapon_shared_interface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__weapon_shared_interface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:weapon_first_person_interface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__weapon_first_person_interface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    


#	Static loader for block:user_interface_list_skin_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_interface_list_skin_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[4], Point2D_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:single_animation_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__single_animation_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:pixel_shader for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Ptr_reader = READERS['Ptr']
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    


#	Static loader for block:scenario_creature_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_creature_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_scenery_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_scenery_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_scenery for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_scenery_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[44]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[45]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:sound_environment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_environment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], StringId_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_environment for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_environment_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], StringId_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[26], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 4
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_4(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 5
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_5(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 6
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_6(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound for version 7
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_version_7(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:old_sound_pitch_range for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_sound_pitch_range_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:old_sound_permutations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_sound_permutations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Data_reader = READERS['Data']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Data_reader(arg_element)))
    append(_TagField(arg_defs[7], Data_reader(arg_element)))
    append(_TagField(arg_defs[8], Data_reader(arg_element)))
    


#	Static loader for block:old_sound_permutation_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_sound_permutation_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    


#	Static loader for structure:large_sound_playback_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__large_sound_playback_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:large_sound_playback_parameters for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__large_sound_playback_parameters_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:large_sound_scale_modifiers for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__large_sound_scale_modifiers_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:large_sound_pitch_range for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_sound_pitch_range_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:large_sound_permutations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__large_sound_permutations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Data_reader(arg_element)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Data_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_permutation_marker for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_marker_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Custom_reader(arg_element)))
    


#	Static loader for block:sound_platform_sound_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_platform_sound_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_pitch_range for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_pitch_range_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[5], s_2short.unpack(arg_element.read(4))))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_permutations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], Custom_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_extra_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_extra_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:sound_definition_language_permutation_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_definition_language_permutation_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    append(_TagField(arg_defs[3], Data_reader(arg_element)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_definition_language_permutation_info for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_definition_language_permutation_info_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_definition_language_permutation_info for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_definition_language_permutation_info_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_permutation_raw_info_block_old for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_raw_info_block_old_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    append(_TagField(arg_defs[3], Data_reader(arg_element)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_permutation_raw_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_permutation_raw_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], Data_reader(arg_element)))
    append(_TagField(arg_defs[3], Data_reader(arg_element)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:sound_reflection_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_reflection_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_reflection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_reflection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:patchy_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__patchy_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[20], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[26]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:damage_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[34]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[41]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[42], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[43]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[46]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[47]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[48], TagReference_reader(arg_element)))
    fd = arg_defs[49]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[57]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[58], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[59], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[60], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[61], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[65], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[66]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[71]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[73]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[74]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[78]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[79], StringId_reader(arg_element)))
    append(_TagField(arg_defs[80], StringId_reader(arg_element)))
    


#	Static loader for block:damage_effect for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_effect_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    append(_TagField(arg_defs[25], StringId_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[38]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[40], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[43]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[46]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[51]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[54], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[55], TagReference_reader(arg_element)))
    fd = arg_defs[56]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[57], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[61]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:damage_outer_cone_angle for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__damage_outer_cone_angle_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:damage_outer_cone_angle for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__damage_outer_cone_angle_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:damage_effect_player_response for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__damage_effect_player_response_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:screen_flash_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__screen_flash_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_4real.unpack(arg_element.read(16))))
    


#	Static loader for structure:vibration_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__vibration_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:vibration_frequency_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__vibration_frequency_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], Custom_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:damage_effect_sound_effect_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__damage_effect_sound_effect_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:ai_dialogue_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_dialogue_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_0 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_0_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], LongString_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_0 for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_0_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:response for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__response_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:vocalization_definitions_block_1 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_1_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], LongString_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_1 for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_1_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_2 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_2_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], LongString_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_2 for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_2_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_3 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_3_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], LongString_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_3 for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_3_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_4 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_4_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], LongString_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_4 for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_4_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_5 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_5_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    LongString_reader = READERS['LongString']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], LongString_reader(arg_element)))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_definitions_block_5 for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_definitions_block_5_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], StringId_reader(arg_element)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:vocalization_patterns for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vocalization_patterns_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], StringId_reader(arg_element)))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], StringId_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:dialogue_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__dialogue_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:involuntary_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__involuntary_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:material_effects for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effects_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:material_effects for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effects_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:material_effect_block_v1 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effect_block_v1_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:material_effect_material_block_old_v1 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effect_material_block_old_v1_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:material_effect_block_v2 for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effect_block_v2_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:old_material_effect_material for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_material_effect_material_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:material_effect_material for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effect_material_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:material_effect_material for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_effect_material_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:user_interface_screen_widget_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_interface_screen_widget_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], StringId_reader(arg_element)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[24], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[25], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[31], TagReference_reader(arg_element)))
    fd = arg_defs[32]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:window_pane_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__window_pane_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:button_widget_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__button_widget_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Rectangle2D_reader = READERS['Rectangle2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_4real = arg_loader.s_4real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[6], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[9], StringId_reader(arg_element)))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:list_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__list_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:s_text_value_pair_reference_block_UNUSED for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__s_text_value_pair_reference_block_UNUSED_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], StringId_reader(arg_element)))
    


#	Static loader for block:table_view_list_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__table_view_list_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_4real = arg_loader.s_4real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[6], Point2D_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:table_view_list_row_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__table_view_list_row_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:table_view_list_item_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__table_view_list_item_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:s_text_value_pair_blocks_block_UNUSED for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__s_text_value_pair_blocks_block_UNUSED_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:local_string_id_list_section_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__local_string_id_list_section_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:local_string_id_list_string_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__local_string_id_list_string_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    


#	Static loader for block:local_bitmap_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__local_bitmap_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_trigger_volumes_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_trigger_volumes_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:contrail for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__contrail_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[21], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[23], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[27], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[28], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[29]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[30], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[35], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[38], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[39]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[40], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[45]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[47]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[48]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:contrail_point_states for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__contrail_point_states_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[8], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[9], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[24], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[25], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[26], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[27]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[29], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[30]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[32], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[33], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[34]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[38]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[42], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[43], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[44], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[45], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[47]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[48], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[49], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], TagReference_reader(arg_element)))
    fd = arg_defs[52]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[53], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[54], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[55]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[58]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[59], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[61]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[63]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[64], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[65], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[66], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[67], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[68]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[69]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[70], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[71], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[72]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[73]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[74]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[75]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[76], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[77], TagReference_reader(arg_element)))
    


#	Static loader for block:light_brightness_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_brightness_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:light_color_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_color_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:light_gel_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_gel_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Custom_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:user_interface_shared_globals_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__user_interface_shared_globals_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Rectangle2D_reader = READERS['Rectangle2D']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_4real.unpack(arg_element.read(16))))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[23], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[24], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[25], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[26], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[27], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[30], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[31], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[34], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[35], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[36], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[37], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[38], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[39], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[40], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[41], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[42], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[43], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[44], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[45], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[46], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[47], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[48], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[49], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[50], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[51], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[52], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[53], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[54], Explanation_reader(arg_element)))
    fd = arg_defs[55]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], Explanation_reader(arg_element)))
    fd = arg_defs[57]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[58], Explanation_reader(arg_element)))
    fd = arg_defs[59]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[60], Explanation_reader(arg_element)))
    fd = arg_defs[61]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[62], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[64], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[65], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[66], Explanation_reader(arg_element)))
    fd = arg_defs[67]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[68], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[69], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[70], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[71], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[72], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[73], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[74], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[75], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[76], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[77], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[78], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[79], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[80], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[81], Rectangle2D_reader(arg_element)))
    append(_TagField(arg_defs[82], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[83], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[84], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:ui_error_category for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_error_category_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], StringId_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:ui_error for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ui_error_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    


#	Static loader for block:animation_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__animation_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:shape_group_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shape_group_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shape_block_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shape_block_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_4real = arg_loader.s_4real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_4real.unpack(arg_element.read(16))))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:point_block_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__point_block_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    append(_TagField(arg_defs[0], Point2D_reader(arg_element)))
    


#	Static loader for block:persistent_background_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__persistent_background_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:background_animation_keyframe_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__background_animation_keyframe_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:list_skin_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__list_skin_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:skill_to_rank_mapping for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__skill_to_rank_mapping_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], s_2short.unpack(arg_element.read(4))))
    


#	Static loader for block:particle_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:particle_controller for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_controller_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:particle_controller_parameters for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__particle_controller_parameters_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:grenade_hud_interface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__grenade_hud_interface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[27], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[31]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[34], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[38], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[39], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[42]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[43], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[44]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[45]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[46]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[47], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[48], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[54], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[59], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[62]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[64], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[65], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[66]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[67]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[68], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[69]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[70], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[71], TagReference_reader(arg_element)))
    fd = arg_defs[72]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[73]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[74]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[75], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[76], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[77], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[78], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[79], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[80], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[81], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[82], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[83]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:grenade_hud_overlay for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__grenade_hud_overlay_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[18], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:grenade_hud_sound for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__grenade_hud_sound_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:ai_mission_dialogue for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ai_mission_dialogue_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:mission_dialogue_lines for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mission_dialogue_lines_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


#	Static loader for block:mission_dialogue_variants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mission_dialogue_variants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


#	Static loader for block:hud_number for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_number_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:sound_looping for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_looping_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_looping for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_looping_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_looping for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_looping_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sound_looping for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_looping_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:looping_sound_track for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__looping_sound_track_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    


#	Static loader for block:looping_sound_track for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__looping_sound_track_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:looping_sound_detail for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__looping_sound_detail_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:looping_sound_detail for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__looping_sound_detail_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:physics_model for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_model_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Data_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:physics_model for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_model_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Data_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:physics_model for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_model_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Data_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:rigid_bodies for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rigid_bodies_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[12]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[16]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[18]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:rigid_bodies for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rigid_bodies_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[14], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[18]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[20]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[22]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[24]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[26]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:physics_model_material for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_model_material_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:boxes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__boxes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[19]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[21], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[22], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[27], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[28]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[30]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[32]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[34]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:triangles for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__triangles_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[19]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[21]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[23]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:polyhedra for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__polyhedra_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[19]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[21]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[23], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[27], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[28]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[30], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:polyhedron_four_vectors for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__polyhedron_four_vectors_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:polyhedron_plane_equations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__polyhedron_plane_equations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:mass_distributions for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mass_distributions_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[7]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:lists for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lists_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[7], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:list_shapes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__list_shapes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:mopps for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__mopps_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[7], Ptr_reader(arg_element)))
    


#	Static loader for block:hinge_constraints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hinge_constraints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:constraint_bodies for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__constraint_bodies_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:ragdoll_constraints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ragdoll_constraints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:regions for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__regions_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:permutations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__permutations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:rigid_body_indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__rigid_body_indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:nodes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__nodes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:phantom_types for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__phantom_types_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:phantom_types for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__phantom_types_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:physics_model_node_constraint_edge for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_model_node_constraint_edge_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    


#	Static loader for block:physics_model_constraint_edge_constraint for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__physics_model_constraint_edge_constraint_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:multi_spheres for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multi_spheres_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[11], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:point_to_path_curve for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__point_to_path_curve_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:point_to_path_curve_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__point_to_path_curve_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:limited_hinge_constraints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__limited_hinge_constraints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:ball_and_socket_constraints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__ball_and_socket_constraints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:stiff_spring_constraints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__stiff_spring_constraints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:prismatic_constraints for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prismatic_constraints_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:phantoms for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__phantoms_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[7], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[8], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:dialogue for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__dialogue_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    


#	Static loader for block:dialogue for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__dialogue_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    


#	Static loader for block:sound_references for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_references_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    


#	Static loader for block:sound_references for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_references_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_weapons_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_weapons_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:bitmap for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Custom_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[17], Data_reader(arg_element)))
    append(_TagField(arg_defs[18], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[19], Data_reader(arg_element)))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[24], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[25], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[26], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[32], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[33], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[34], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:bitmap_group_sequence for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_group_sequence_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:bitmap_group_sprite for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_group_sprite_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:bitmap_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Tag_reader = READERS['Tag']
    Point2D_reader = READERS['Point2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Tag_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[8], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:bitmap_data for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_data_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Tag_reader = READERS['Tag']
    Point2D_reader = READERS['Point2D']
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Tag_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[17], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[18], Ptr_reader(arg_element)))
    fd = arg_defs[19]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[22], Ptr_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Ptr_reader(arg_element)))
    


#	Static loader for block:bitmap_data for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_data_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Tag_reader = READERS['Tag']
    Point2D_reader = READERS['Point2D']
    Ptr_reader = READERS['Ptr']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Tag_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[9], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[19], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[20], Ptr_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[23], Ptr_reader(arg_element)))
    fd = arg_defs[24]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], Ptr_reader(arg_element)))
    


#	Static loader for structure:bitmap_native_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__bitmap_native_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Ptr_reader(arg_element)))
    


#	Static loader for block:bitmap_native_mipmap_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bitmap_native_mipmap_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_pass for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], Data_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_pass_parameter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_parameter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_pass_implementation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_implementation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Data_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], TagReference_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:shader_pass_texture for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_texture_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_texture_state_address_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_texture_state_address_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_texture_state_filter_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_texture_state_filter_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_texture_state_kill_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_texture_state_kill_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_texture_state_misc_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_texture_state_misc_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_texture_state_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_texture_state_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_pass_vertex_shader_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_vertex_shader_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_state_channels_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_channels_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_state_alpha_blend_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_alpha_blend_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_state_alpha_test_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_alpha_test_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_state_depth_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_depth_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_state_cull_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_cull_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_state_fill_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_fill_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_state_misc_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_misc_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:shader_state_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_state_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:shader_pass_postprocess_definition_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_definition_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_pass_postprocess_implementation_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_implementation_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:shader_postprocess_pixel_shader for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_pixel_shader_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Ptr_reader = READERS['Ptr']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[2], Ptr_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Data_reader(arg_element)))
    append(_TagField(arg_defs[5], Data_reader(arg_element)))
    append(_TagField(arg_defs[6], Data_reader(arg_element)))
    


#	Static loader for block:shader_postprocess_pixel_shader_constant_defaults for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_postprocess_pixel_shader_constant_defaults_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:pixel_shader_extern_map for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_extern_map_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:pixel_shader_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:shader_pass_postprocess_texture_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_texture_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:shader_pass_postprocess_texture_state for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_texture_state_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:pixel_shader_fragment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_fragment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:pixel_shader_permutation_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_permutation_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:pixel_shader_combiner for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_combiner_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_char = arg_loader.s_char
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:shader_pass_postprocess_extern_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_extern_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_char = arg_loader.s_char
    fd = arg_defs[0]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:shader_pass_postprocess_constant_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_constant_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:shader_pass_postprocess_constant_info_new for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_constant_info_new_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:shader_pass_postprocess_implementation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__shader_pass_postprocess_implementation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:extern_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__extern_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:pixel_shader_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    Skip_reader = SPECIAL_READERS['Skip']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:pixel_shader_constant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__pixel_shader_constant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:meter for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__meter_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[11], s_4real.unpack(arg_element.read(16))))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], Data_reader(arg_element)))
    


#	Static loader for block:sound_mix for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_mix_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:sound_global_mix for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__sound_global_mix_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_bipeds_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_bipeds_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sky for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:sky_cubemap for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_cubemap_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sky_atmospheric_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_atmospheric_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sky_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sky_patchy_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_patchy_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    


#	Static loader for block:sky_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:sky_light_fog for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_light_fog_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sky_radiosity_light for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_radiosity_light_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:sky_shader_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_shader_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], String_reader(arg_element)))
    


#	Static loader for block:sky_animation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sky_animation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decorator_set for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_set_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decorator_set for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_set_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:decorator_shader_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_shader_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:decorator_classes for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_classes_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:decorator_permutations for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_permutations_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[8], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:decorator_models for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_models_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:decorator_model_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_model_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:decorator_model_indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_model_indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:decorator_set::cached_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__decorator_set____cached_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    append(_TagField(arg_defs[0], VertexBuffer_reader(arg_element)))
    


#	Static loader for block:device for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__device_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[55], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[56], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[57], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[58], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[59], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[60], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[62]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:hud_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    Rectangle2D_reader = READERS['Rectangle2D']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[15], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[27], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[32], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[33], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[34], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[38], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[39], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[43], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[49]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[50], TagReference_reader(arg_element)))
    fd = arg_defs[51]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[52]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[53], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[55]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], Explanation_reader(arg_element)))
    fd = arg_defs[57]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], Rectangle2D_reader(arg_element)))
    fd = arg_defs[62]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[64], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[65], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[66], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[67], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[68]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[71], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[72], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[73]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[74], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[75], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[76], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[78], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[79], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[80], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[81], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[82], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[83], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[84]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[85], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[86], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[87], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[89], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[90], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[91], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[92], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[93], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[94]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[95]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[96], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[98], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[99], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[100], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[101], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[102], TagReference_reader(arg_element)))
    fd = arg_defs[103]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[104]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:hud_button_icon for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_button_icon_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[5], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:hud_waypoint_arrow for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_waypoint_arrow_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    String_reader = READERS['String']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], String_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:global_new_hud_globals for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_new_hud_globals_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:hud_dashlights for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_dashlights_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    


#	Static loader for block:new_hud_waypoint_arrow for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__new_hud_waypoint_arrow_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    


#	Static loader for block:hud_waypoint for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_waypoint_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:new_hud_sound for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__new_hud_sound_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    


#	Static loader for block:player_training_entry_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__player_training_entry_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:global_new_hud_globals_constants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_new_hud_globals_constants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[11], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[12], TagReference_reader(arg_element)))
    


#	Static loader for block:scenario_structure_lightmap for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_structure_lightmap_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_lightmap_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_lightmap_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:structure_lightmap_palette_color for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_lightmap_palette_color_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Skip_reader = SPECIAL_READERS['Skip']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:lightmap_geometry_section for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_geometry_section_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:lightmap_geometry_section_cache_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_geometry_section_cache_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:lightmap_geometry_render_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_geometry_render_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:structure_lightmap_lighting_environment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__structure_lightmap_lighting_environment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[13], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[14], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:lightmap_vertex_buffer_bucket for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_vertex_buffer_bucket_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:lightmap_bucket_raw_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_bucket_raw_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    


#	Static loader for block:lightmap_vertex_buffer_bucket_cache_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_vertex_buffer_bucket_cache_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:lightmap_instance_bucket_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_instance_bucket_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:lightmap_instance_bucket_section_offset for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_instance_bucket_section_offset_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:lightmap_scenery_object_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__lightmap_scenery_object_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:stereo_system for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__stereo_system_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:scenario_cluster_data_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_cluster_data_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:point_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__point_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    


#	Static loader for block:scenario_sound_scenery_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_sound_scenery_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:multiplayer_variant_settings_interface_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multiplayer_variant_settings_interface_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Custom_reader = READERS['Custom']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Array_reader = SPECIAL_READERS['Array']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Custom_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Custom_reader(arg_element)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    fd = arg_defs[14]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], Explanation_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    fd = arg_defs[22]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], Explanation_reader(arg_element)))
    fd = arg_defs[24]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    fd = arg_defs[26]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    fd = arg_defs[28]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], Explanation_reader(arg_element)))
    fd = arg_defs[30]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], Custom_reader(arg_element)))
    fd = arg_defs[32]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], Custom_reader(arg_element)))
    


#	Static loader for block:variant_setting_edit_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__variant_setting_edit_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:text_value_pair for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__text_value_pair_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    


#	Static loader for block:null for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__null_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for block:g_default_variants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__g_default_variants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:default_variant_settings for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__default_variant_settings_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for structure:create_new_variant for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__create_new_variant_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:device_machine for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__device_machine_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[48], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[55], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[56], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[57], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[58], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[59], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[60], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[62]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[63], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[67], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[68], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[69], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[70], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[71]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[72], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[73], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[74]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[75], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[76]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:light_volume for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_volume_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:light_volume_volume for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_volume_volume_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Block_reader = SPECIAL_READERS['Block']
    Skip_reader = SPECIAL_READERS['Skip']
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[28]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    


#	Static loader for block:light_volume_aspect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_volume_aspect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], Explanation_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:light_volume_runtime_offset for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__light_volume_runtime_offset_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:scenery for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenery_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[45], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[47]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:scenery for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenery_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[48], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[49]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:scenery for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenery_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[48], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[49]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[50]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:wind for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__wind_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[1], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:camera_track for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__camera_track_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:camera_track_control_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__camera_track_control_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_4real.unpack(arg_element.read(16))))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:character for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:character for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], TagReference_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:character for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[4], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[22], Explanation_reader(arg_element)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[26]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[27]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[28]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[29]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[30]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[31]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[32]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[34]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[35]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[36]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[37]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[38]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:character_general for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_general_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_placement for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_placement_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_vitality for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_vitality_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[25]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[28]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_perception for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_perception_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_retreat for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_retreat_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], TagReference_reader(arg_element)))
    


#	Static loader for block:character_look for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_look_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealEulerAngles2D_reader = READERS['RealEulerAngles2D']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[1], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[2], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[3], RealEulerAngles2D_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[11], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:character_movement for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_movement_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[12], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_engage for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_engage_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_evasion for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_evasion_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_cover for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_cover_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_search for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_search_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:character_presearch for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_presearch_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_presearch for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_presearch_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:character_weapons for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_weapons_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[23], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[25]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[32], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[35]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[37], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[38], s_2short.unpack(arg_element.read(4))))
    fd = arg_defs[39]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[40], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[43], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[44], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:character_weapons for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_weapons_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[14], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[15]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[17], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[24], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[25]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[26], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[27], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[28], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[33]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[34], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[35], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[36], s_2short.unpack(arg_element.read(4))))
    fd = arg_defs[37]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[39], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[41]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[42], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[44]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[45], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[47]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[49]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[50], TagReference_reader(arg_element)))
    


#	Static loader for block:character_firing_pattern for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_firing_pattern_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_grenades for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_grenades_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_2real = arg_loader.s_2real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_charge for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_charge_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_charge for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_charge_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_charge for version 2
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_charge_version_2(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_charge for version 3
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_charge_version_3(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[13]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    


#	Static loader for block:character_ready for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_ready_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:character_vehicle for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_vehicle_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[27]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[33]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[35]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_vehicle for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_vehicle_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[19], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[20], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[34]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[35], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[37]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[38], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[39], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[40], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[41], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[42], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[43], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[44], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[45]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[46], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[47], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[50], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[53], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[54], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[55], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[56]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[57], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[58]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:character_idle for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_idle_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:character_swarm for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_swarm_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_2real = arg_loader.s_2real
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_vocalization for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_vocalization_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_firing_pattern_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_firing_pattern_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:character_variants for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_variants_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    


#	Static loader for block:character_boarding for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_boarding_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:character_boss for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__character_boss_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:campaign_metagame_bucket for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__campaign_metagame_bucket_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:vehicle for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicle_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_2short = arg_loader.s_2short
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[44], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[45], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[46], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[47], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[48]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[49], TagReference_reader(arg_element)))
    fd = arg_defs[50]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[51], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[52], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[53]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[54]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[55]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[56], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[57], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[58], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[59], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[60], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[61], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[62], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[63], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[64], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[65]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[66], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[67], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[68], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[69], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[70], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[71], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[72], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[73], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[74], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[75], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[76], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[77], StringId_reader(arg_element)))
    append(_TagField(arg_defs[78], StringId_reader(arg_element)))
    fd = arg_defs[79]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[80]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[81], TagReference_reader(arg_element)))
    fd = arg_defs[82]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[83], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[84]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[85]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[86]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[87]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[88], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[89], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[90], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[91]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[92]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[93]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[94]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[95], Explanation_reader(arg_element)))
    fd = arg_defs[96]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[97], Explanation_reader(arg_element)))
    fd = arg_defs[98]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[99], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[100], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[101], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[102], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[103], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[104], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[105], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[106], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[107], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[108], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[109], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[110], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[111], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[112], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[113], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[114], StringId_reader(arg_element)))
    append(_TagField(arg_defs[115], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[116], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[117], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[118], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[119], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[120], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[121], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[122], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[123], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[124], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[125]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[126]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[127], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[128], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[129], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[130], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[131], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[132], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[133]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[134], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[135], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[136], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[137]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[138], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[139], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[140], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[141]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[142], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[143], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[144], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[145], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[146], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[147], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[148], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[149], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[150], Explanation_reader(arg_element)))
    fd = arg_defs[151]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:gear for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__gear_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], Explanation_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:torque_curve for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__torque_curve_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for structure:havok_vehicle_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__havok_vehicle_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:anti_gravity_point_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__anti_gravity_point_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], StringId_reader(arg_element)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:friction_point_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__friction_point_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[6]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[10], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], StringId_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[15], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[16], StringId_reader(arg_element)))
    fd = arg_defs[17]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:vehicle_phantom_shape for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__vehicle_phantom_shape_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Ptr_reader = READERS['Ptr']
    Pad_reader = SPECIAL_READERS['Pad']
    Skip_reader = SPECIAL_READERS['Skip']
    Array_reader = SPECIAL_READERS['Array']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Skip_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Ptr_reader(arg_element)))
    append(_TagField(arg_defs[7], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[11], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[14], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:new_hud_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__new_hud_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:hud_bitmap_widgets for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_bitmap_widgets_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[12], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[13], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[14], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[15], s_2real.unpack(arg_element.read(8))))
    append(_TagField(arg_defs[16], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[18], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:hud_widget_inputs for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__hud_widget_inputs_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:hud_widget_inputs for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__hud_widget_inputs_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_uchar = arg_loader.s_uchar
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[3], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[4], s_uchar.unpack(arg_element.read(1))[0]))
    


#	Static loader for structure:hud_widget_state_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__hud_widget_state_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[9], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:hud_widget_effect for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_widget_effect_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], Explanation_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:hud_widget_effect_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__hud_widget_effect_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:hud_text_widgets for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_text_widgets_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    s_real = arg_loader.s_real
    s_uchar = arg_loader.s_uchar
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[5], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    append(_TagField(arg_defs[8], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_uchar.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[15], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[18], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[19], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[20], Point2D_reader(arg_element)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:new_hud_dashlight_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__new_hud_dashlight_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:hud_screen_effect_widgets for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__hud_screen_effect_widgets_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Point2D_reader = READERS['Point2D']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[8], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[9], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[13], Point2D_reader(arg_element)))
    append(_TagField(arg_defs[14], Point2D_reader(arg_element)))
    


#	Static loader for structure:screen_effect_bonus for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__screen_effect_bonus_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    


#	Static loader for structure:screen_effect_bonus for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__screen_effect_bonus_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    


#	Static loader for block:cloth for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cloth_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_short = arg_loader.s_short
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], Explanation_reader(arg_element)))
    fd = arg_defs[9]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for structure:cloth_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__cloth_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:cloth_vertices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cloth_vertices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_3real = arg_loader.s_3real
    s_2real = arg_loader.s_2real
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], s_2real.unpack(arg_element.read(8))))
    


#	Static loader for block:cloth_indices for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cloth_indices_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:cloth_links for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cloth_links_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:material_physics for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__material_physics_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:cellular_automata for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__cellular_automata_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    s_2short = arg_loader.s_2short
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[10], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[12]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[14], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[15], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[18], s_2short.unpack(arg_element.read(4))))
    append(_TagField(arg_defs[19], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[20]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[23]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[24], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[27]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[28], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[33], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[34], Explanation_reader(arg_element)))
    fd = arg_defs[35]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], TagReference_reader(arg_element)))
    fd = arg_defs[37]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:object for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_uchar = arg_loader.s_uchar
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_real = arg_loader.s_real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[4]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[7], s_uchar.unpack(arg_element.read(1))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], StringId_reader(arg_element)))
    append(_TagField(arg_defs[14], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[15], TagReference_reader(arg_element)))
    fd = arg_defs[16]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[18], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[19], TagReference_reader(arg_element)))
    fd = arg_defs[20]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[23]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[24]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[25], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[30], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[31], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[32], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[33], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[34], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[35], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[36], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[37], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[38]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[39]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[40]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[41]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[42]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[43]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:object_ai_properties for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_ai_properties_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:object_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Custom_reader = READERS['Custom']
    Struct_reader = SPECIAL_READERS['Struct']
    s_ulong = arg_loader.s_ulong
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], StringId_reader(arg_element)))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], Custom_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], StringId_reader(arg_element)))
    


#	Static loader for block:object_attachment for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_attachment_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    append(_TagField(arg_defs[6], StringId_reader(arg_element)))
    fd = arg_defs[7]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:object_widget for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_widget_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    append(_TagField(arg_defs[0], TagReference_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    


#	Static loader for block:old_object_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__old_object_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], OldStringId_reader(arg_element)))
    


#	Static loader for block:object_change_colors for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_change_colors_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    UselessPad_reader = SPECIAL_READERS['UselessPad']
    fd = arg_defs[0]
    append(_TagField(fd, UselessPad_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:object_change_color_initial_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_change_color_initial_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_real = arg_loader.s_real
    s_3real = arg_loader.s_3real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    


#	Static loader for block:object_change_color_function for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__object_change_color_function_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    s_3real = arg_loader.s_3real
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[3], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    


#	Static loader for block:sound_effect_collection for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__sound_effect_collection_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:platform_sound_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__platform_sound_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    Struct_reader = SPECIAL_READERS['Struct']
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for structure:platform_sound_playback for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__platform_sound_playback_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:scenario_ai_resource for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__scenario_ai_resource_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[14]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[17]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:breakable_surface for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__breakable_surface_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:multilingual_unicode_string_list for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multilingual_unicode_string_list_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:multilingual_unicode_string_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__multilingual_unicode_string_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], StringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[3], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[8], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:colony for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__colony_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    Pad_reader = SPECIAL_READERS['Pad']
    s_2real = arg_loader.s_2real
    s_4real = arg_loader.s_4real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_2real.unpack(arg_element.read(8))))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[6], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[7], TagReference_reader(arg_element)))
    


#	Static loader for block:liquid for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__liquid_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[7]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:liquid_arc for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__liquid_arc_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    TagReference_reader = READERS['TagReference']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[10], TagReference_reader(arg_element)))
    fd = arg_defs[11]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[12], Explanation_reader(arg_element)))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[14], Explanation_reader(arg_element)))
    fd = arg_defs[15]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[16], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[17], Explanation_reader(arg_element)))
    fd = arg_defs[18]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[20], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[21], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[22], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[24], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[25], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[26], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[27], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[28], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[29], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[30]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[31], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[32]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[33]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[34], Explanation_reader(arg_element)))
    fd = arg_defs[35]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[36], Explanation_reader(arg_element)))
    fd = arg_defs[37]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:liquid_core for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__liquid_core_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], Explanation_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    fd = arg_defs[8]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[11], Explanation_reader(arg_element)))
    fd = arg_defs[12]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:render_model for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_long = arg_loader.s_long
    s_ushort = arg_loader.s_ushort
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[10], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[11], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[12], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[13], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[14], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[15], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[17], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[18]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[19]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[20]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[21]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[22]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[23], s_real.unpack(arg_element.read(4))[0]))
    fd = arg_defs[24]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[25]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:render_model_region for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_region_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Block_reader = SPECIAL_READERS['Block']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:render_model_permutation for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_permutation_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:render_model_section for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_section_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:render_model_section_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_section_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], Explanation_reader(arg_element)))
    fd = arg_defs[4]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[5]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[7]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[8]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[9], Explanation_reader(arg_element)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[13], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[14]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[15]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[16]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for block:render_model_section_data for version 1
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_section_data_version_1(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    fd = arg_defs[0]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    


#	Static loader for structure:global_geometry_point_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_structure__global_geometry_point_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Data_reader = READERS['Data']
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], Data_reader(arg_element)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:global_geometry_raw_point for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_raw_point_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[3]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[5], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:global_geometry_rigid_point_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_rigid_point_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:global_geometry_point_data_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__global_geometry_point_data_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:render_model_node_map for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_node_map_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:render_model_forward_shared_edge for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_forward_shared_edge_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:render_model_shared_edge_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_shared_edge_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_short = arg_loader.s_short
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[2]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[3], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[4]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[5], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:render_model_backward_shared_edge for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_backward_shared_edge_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    s_short = arg_loader.s_short
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:render_model_dsq_raw_vertex for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_dsq_raw_vertex_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    RealPlane3D_reader = READERS['RealPlane3D']
    s_3real = arg_loader.s_3real
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[1], RealPlane3D_reader(arg_element)))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:render_model_dsq_strip_index for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_dsq_strip_index_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    


#	Static loader for block:render_model_dsq_silhouette_quad for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_dsq_silhouette_quad_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:render_model_invalid_section_pairs for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_invalid_section_pairs_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:render_model_section_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_section_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ushort = arg_loader.s_ushort
    append(_TagField(arg_defs[0], s_ushort.unpack(arg_element.read(2))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[2]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:render_model_compound_node for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_compound_node_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Array_reader = SPECIAL_READERS['Array']
    fd = arg_defs[0]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Array_reader(arg_element, fd)))
    


#	Static loader for block:render_model_node for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_node_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    Explanation_reader = READERS['Explanation']
    OldStringId_reader = READERS['OldStringId']
    s_short = arg_loader.s_short
    s_3real = arg_loader.s_3real
    s_ushort = arg_loader.s_ushort
    s_4real = arg_loader.s_4real
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    append(_TagField(arg_defs[1], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_ushort.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[6], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[7], Explanation_reader(arg_element)))
    append(_TagField(arg_defs[8], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[9], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[10], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[11], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[12], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[13], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:render_model_node_map_block_OLD for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_node_map_block_OLD_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    


#	Static loader for block:render_model_marker_group for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_marker_group_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    OldStringId_reader = READERS['OldStringId']
    Block_reader = SPECIAL_READERS['Block']
    append(_TagField(arg_defs[0], OldStringId_reader(arg_element)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:render_model_marker for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__render_model_marker_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Pad_reader = SPECIAL_READERS['Pad']
    s_4real = arg_loader.s_4real
    s_3real = arg_loader.s_3real
    s_real = arg_loader.s_real
    s_char = arg_loader.s_char
    append(_TagField(arg_defs[0], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[1], s_char.unpack(arg_element.read(1))[0]))
    append(_TagField(arg_defs[2], s_char.unpack(arg_element.read(1))[0]))
    fd = arg_defs[3]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[4], s_3real.unpack(arg_element.read(12))))
    append(_TagField(arg_defs[5], s_4real.unpack(arg_element.read(16))))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:prt_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prt_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    Struct_reader = SPECIAL_READERS['Struct']
    Pad_reader = SPECIAL_READERS['Pad']
    s_real = arg_loader.s_real
    s_short = arg_loader.s_short
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[3], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[4], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[5], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[6], s_real.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[7], s_short.unpack(arg_element.read(2))[0]))
    fd = arg_defs[8]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    fd = arg_defs[9]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[10]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[11]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[12]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[13]
    append(_TagField(fd, Struct_reader(arg_element, fd)))
    


#	Static loader for block:prt_lod_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prt_lod_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:prt_section_info for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prt_section_info_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:prt_cluster_basis for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prt_cluster_basis_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:prt_raw_pca_data for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prt_raw_pca_data_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_real = arg_loader.s_real
    append(_TagField(arg_defs[0], s_real.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:prt_vertex_buffers for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__prt_vertex_buffers_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    VertexBuffer_reader = READERS['VertexBuffer']
    append(_TagField(arg_defs[0], VertexBuffer_reader(arg_element)))
    


#	Static loader for block:section_render_leaves for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__section_render_leaves_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:node_render_leaves for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__node_render_leaves_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    Block_reader = SPECIAL_READERS['Block']
    fd = arg_defs[0]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    fd = arg_defs[1]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:bsp_leaf for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bsp_leaf_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:bsp_surface_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__bsp_surface_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    
    append = data_out.append
    
    s_short = arg_loader.s_short
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[1], s_short.unpack(arg_element.read(2))[0]))
    append(_TagField(arg_defs[2], s_long.unpack(arg_element.read(4))[0]))
    


#	Static loader for block:text_value_pair_definition for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__text_value_pair_definition_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    SPECIAL_READERS = arg_loader._tag_readers_special_field
    
    append = data_out.append
    
    TagReference_reader = READERS['TagReference']
    StringId_reader = READERS['StringId']
    Block_reader = SPECIAL_READERS['Block']
    Pad_reader = SPECIAL_READERS['Pad']
    s_ulong = arg_loader.s_ulong
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    fd = arg_defs[1]
    append(_TagField(fd, Pad_reader(arg_element, fd)))
    append(_TagField(arg_defs[2], TagReference_reader(arg_element)))
    append(_TagField(arg_defs[3], StringId_reader(arg_element)))
    append(_TagField(arg_defs[4], StringId_reader(arg_element)))
    append(_TagField(arg_defs[5], StringId_reader(arg_element)))
    fd = arg_defs[6]
    append(_TagField(fd, Block_reader(arg_element, fd)))
    


#	Static loader for block:text_value_pair_reference for version 0
#	This function is automatically generated, do not call it directly or edit it
def __reader_block__text_value_pair_reference_version_0(arg_loader,arg_element,arg_defs,data_out):
    """
Autogenerated internal function, DO NOT CALL DIRECTLY.
"""
    READERS = arg_loader._tag_readers
    
    append = data_out.append
    
    StringId_reader = READERS['StringId']
    s_ulong = arg_loader.s_ulong
    s_long = arg_loader.s_long
    append(_TagField(arg_defs[0], s_ulong.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[1], s_long.unpack(arg_element.read(4))[0]))
    append(_TagField(arg_defs[2], StringId_reader(arg_element)))
    


LAYOUT_READERS = {
    'structure:sound_lowpass' : (__reader_structure__sound_lowpass_version_0,),
    'structure:mapping_function' : (__reader_structure__mapping_function_version_0,__reader_structure__mapping_function_version_1),
    'block:real' : (__reader_block__real_version_0,),
    'block:byte' : (__reader_block__byte_version_0,),
    'structure:sound_promotion_parameters' : (__reader_structure__sound_promotion_parameters_version_0,__reader_structure__sound_promotion_parameters_version_1),
    'block:sound_promotion_rule' : (__reader_block__sound_promotion_rule_version_0,),
    'block:sound_promotion_runtime_timer' : (__reader_block__sound_promotion_runtime_timer_version_0,),
    'block:platform_sound_override_mixbins' : (__reader_block__platform_sound_override_mixbins_version_0,),
    'block:platform_sound_filter' : (__reader_block__platform_sound_filter_version_0,),
    'structure:sound_playback_parameter_definition' : (__reader_structure__sound_playback_parameter_definition_version_0,),
    'block:platform_sound_pitch_lfo' : (__reader_block__platform_sound_pitch_lfo_version_0,),
    'block:platform_sound_filter_lfo' : (__reader_block__platform_sound_filter_lfo_version_0,),
    'block:sound_effect_playback' : (__reader_block__sound_effect_playback_version_0,),
    'structure:sound_effect_struct_definition' : (__reader_structure__sound_effect_struct_definition_version_0,),
    'block:sound_effect_component' : (__reader_block__sound_effect_component_version_0,),
    'block:sound_effect_overrides' : (__reader_block__sound_effect_overrides_version_0,),
    'block:sound_effect_override_parameters' : (__reader_block__sound_effect_override_parameters_version_0,__reader_block__sound_effect_override_parameters_version_1),
    'block:platform_sound_effect_collection' : (__reader_block__platform_sound_effect_collection_version_0,),
    'block:platform_sound_effect' : (__reader_block__platform_sound_effect_version_0,),
    'block:platform_sound_effect_function' : (__reader_block__platform_sound_effect_function_version_0,),
    'block:platform_sound_effect_constant' : (__reader_block__platform_sound_effect_constant_version_0,),
    'block:platform_sound_effect_override_descriptor' : (__reader_block__platform_sound_effect_override_descriptor_version_0,),
    'structure:simple_platform_sound_playback' : (__reader_structure__simple_platform_sound_playback_version_0,),
    'structure:sound_playback_parameters' : (__reader_structure__sound_playback_parameters_version_0,),
    'structure:sound_scale_modifiers' : (__reader_structure__sound_scale_modifiers_version_0,),
    'block:sound_permutation_chunk' : (__reader_block__sound_permutation_chunk_version_0,__reader_block__sound_permutation_chunk_version_1,__reader_block__sound_permutation_chunk_version_2),
    'block:sound_encoded_dialogue_section' : (__reader_block__sound_encoded_dialogue_section_version_0,),
    'block:sound_permutation_dialogue_info' : (__reader_block__sound_permutation_dialogue_info_version_0,),
    'block:g_null' : (__reader_block__g_null_version_0,),
    'block:global_error_report_categories' : (__reader_block__global_error_report_categories_version_0,),
    'block:error_reports' : (__reader_block__error_reports_version_0,),
    'block:error_report_vertices' : (__reader_block__error_report_vertices_version_0,),
    'block:error_report_vectors' : (__reader_block__error_report_vectors_version_0,),
    'block:error_report_lines' : (__reader_block__error_report_lines_version_0,),
    'block:error_report_triangles' : (__reader_block__error_report_triangles_version_0,),
    'block:error_report_quads' : (__reader_block__error_report_quads_version_0,),
    'block:error_report_comments' : (__reader_block__error_report_comments_version_0,),
    'block:global_tag_import_info' : (__reader_block__global_tag_import_info_version_0,),
    'block:tag_import_file' : (__reader_block__tag_import_file_version_0,),
    'block:global_hud_multitexture_overlay_definition' : (__reader_block__global_hud_multitexture_overlay_definition_version_0,),
    'block:global_hud_multitexture_overlay_effector_definition' : (__reader_block__global_hud_multitexture_overlay_effector_definition_version_0,),
    'block:predicted_resource' : (__reader_block__predicted_resource_version_0,),
    'block:tag_block_index' : (__reader_block__tag_block_index_version_0,),
    'structure:tag_block_index' : (__reader_structure__tag_block_index_version_0,),
    'structure:global_geometry_block_info' : (__reader_structure__global_geometry_block_info_version_0,),
    'block:global_geometry_block_resource' : (__reader_block__global_geometry_block_resource_version_0,),
    'block:global_geometry_compression_info' : (__reader_block__global_geometry_compression_info_version_0,),
    'structure:global_geometry_section_info' : (__reader_structure__global_geometry_section_info_version_0,),
    'block:global_geometry_section_strip_index' : (__reader_block__global_geometry_section_strip_index_version_0,),
    'structure:global_geometry_section' : (__reader_structure__global_geometry_section_version_0,__reader_structure__global_geometry_section_version_1),
    'block:global_geometry_section_raw_vertex' : (__reader_block__global_geometry_section_raw_vertex_version_0,),
    'block:global_geometry_section_vertex_buffer' : (__reader_block__global_geometry_section_vertex_buffer_version_0,),
    'block:global_geometry_part' : (__reader_block__global_geometry_part_version_0,),
    'block:global_geometry_part_block_new' : (__reader_block__global_geometry_part_block_new_version_0,),
    'block:global_subparts' : (__reader_block__global_subparts_version_0,),
    'block:global_visibility_bounds' : (__reader_block__global_visibility_bounds_version_0,),
    'structure:global_geometry_isq_info' : (__reader_structure__global_geometry_isq_info_version_0,),
    'block:global_geometry_plane' : (__reader_block__global_geometry_plane_version_0,),
    'block:global_geometry_rigid_plane_group' : (__reader_block__global_geometry_rigid_plane_group_version_0,),
    'block:global_geometry_explicit_edge' : (__reader_block__global_geometry_explicit_edge_version_0,),
    'block:global_geometry_material' : (__reader_block__global_geometry_material_version_0,),
    'block:global_geometry_material_property' : (__reader_block__global_geometry_material_property_version_0,),
    'structure:sound_response_extra_sounds' : (__reader_structure__sound_response_extra_sounds_version_0,__reader_structure__sound_response_extra_sounds_version_1),
    'block:sound_response_definition' : (__reader_block__sound_response_definition_version_0,),
    'block:game_engine_general_event' : (__reader_block__game_engine_general_event_version_0,),
    'block:game_engine_slayer_event' : (__reader_block__game_engine_slayer_event_version_0,),
    'block:game_engine_ctf_event' : (__reader_block__game_engine_ctf_event_version_0,),
    'block:game_engine_oddball_event' : (__reader_block__game_engine_oddball_event_version_0,),
    'block:game_engine_king_event' : (__reader_block__game_engine_king_event_version_0,),
    'block:multiplayer_color' : (__reader_block__multiplayer_color_version_0,),
    'block:effect_locations' : (__reader_block__effect_locations_version_0,),
    'block:particle_system_definition_block_new' : (__reader_block__particle_system_definition_block_new_version_0,__reader_block__particle_system_definition_block_new_version_1),
    'block:particle_system_emitter_definition' : (__reader_block__particle_system_emitter_definition_version_0,),
    'structure:particle_property_scalar_struct_new' : (__reader_structure__particle_property_scalar_struct_new_version_0,),
    'structure:particle_property_color_struct_new' : (__reader_structure__particle_property_color_struct_new_version_0,),
    'block:global_ui_campaign_level' : (__reader_block__global_ui_campaign_level_version_0,),
    'block:global_ui_multiplayer_level' : (__reader_block__global_ui_multiplayer_level_version_0,),
    'block:screen_animation_keyframe_reference' : (__reader_block__screen_animation_keyframe_reference_version_0,),
    'block:text_block_reference' : (__reader_block__text_block_reference_version_0,),
    'block:bitmap_block_reference' : (__reader_block__bitmap_block_reference_version_0,),
    'block:hud_block_reference' : (__reader_block__hud_block_reference_version_0,),
    'block:player_block_reference' : (__reader_block__player_block_reference_version_0,),
    'block:ui_model_scene_reference' : (__reader_block__ui_model_scene_reference_version_0,),
    'block:ui_object_reference' : (__reader_block__ui_object_reference_version_0,),
    'block:ui_light_reference' : (__reader_block__ui_light_reference_version_0,),
    'structure:shader_gpu_state_reference' : (__reader_structure__shader_gpu_state_reference_version_0,),
    'block:render_state' : (__reader_block__render_state_version_0,),
    'structure:shader_gpu_state' : (__reader_structure__shader_gpu_state_version_0,),
    'block:texture_stage_state' : (__reader_block__texture_stage_state_version_0,),
    'block:render_state_parameter' : (__reader_block__render_state_parameter_version_0,),
    'block:texture_stage_state_parameter' : (__reader_block__texture_stage_state_parameter_version_0,),
    'block:texture' : (__reader_block__texture_version_0,),
    'block:vertex_shader_constant' : (__reader_block__vertex_shader_constant_version_0,),
    'block:global_shader_parameter' : (__reader_block__global_shader_parameter_version_0,),
    'block:shader_animation_property' : (__reader_block__shader_animation_property_version_0,),
    'block:shader_postprocess_definition_new' : (__reader_block__shader_postprocess_definition_new_version_0,),
    'block:shader_postprocess_bitmap_new' : (__reader_block__shader_postprocess_bitmap_new_version_0,),
    'block:pixel32' : (__reader_block__pixel32_version_0,),
    'block:real_vector4d' : (__reader_block__real_vector4d_version_0,),
    'block:shader_postprocess_level_of_detail_new' : (__reader_block__shader_postprocess_level_of_detail_new_version_0,),
    'block:shader_postprocess_implementation_new' : (__reader_block__shader_postprocess_implementation_new_version_0,),
    'block:shader_postprocess_overlay_new' : (__reader_block__shader_postprocess_overlay_new_version_0,),
    'structure:scalar_function' : (__reader_structure__scalar_function_version_0,),
    'block:shader_postprocess_overlay_reference_new' : (__reader_block__shader_postprocess_overlay_reference_new_version_0,),
    'block:shader_postprocess_animated_parameter_new' : (__reader_block__shader_postprocess_animated_parameter_new_version_0,),
    'block:shader_postprocess_animated_parameter_reference_new' : (__reader_block__shader_postprocess_animated_parameter_reference_new_version_0,),
    'block:shader_postprocess_bitmap_property' : (__reader_block__shader_postprocess_bitmap_property_version_0,),
    'block:shader_postprocess_color_property' : (__reader_block__shader_postprocess_color_property_version_0,),
    'block:shader_postprocess_value_property' : (__reader_block__shader_postprocess_value_property_version_0,),
    'block:shader_postprocess_level_of_detail' : (__reader_block__shader_postprocess_level_of_detail_version_0,),
    'block:shader_postprocess_layer' : (__reader_block__shader_postprocess_layer_version_0,),
    'block:shader_postprocess_pass' : (__reader_block__shader_postprocess_pass_version_0,),
    'block:shader_postprocess_implementation' : (__reader_block__shader_postprocess_implementation_version_0,),
    'block:shader_postprocess_bitmap' : (__reader_block__shader_postprocess_bitmap_version_0,),
    'block:shader_postprocess_bitmap_transform' : (__reader_block__shader_postprocess_bitmap_transform_version_0,),
    'block:shader_postprocess_value' : (__reader_block__shader_postprocess_value_version_0,),
    'block:shader_postprocess_color' : (__reader_block__shader_postprocess_color_version_0,),
    'block:shader_postprocess_bitmap_transform_overlay' : (__reader_block__shader_postprocess_bitmap_transform_overlay_version_0,),
    'block:shader_postprocess_value_overlay' : (__reader_block__shader_postprocess_value_overlay_version_0,),
    'structure:color_function' : (__reader_structure__color_function_version_0,),
    'block:shader_postprocess_color_overlay' : (__reader_block__shader_postprocess_color_overlay_version_0,),
    'block:shader_postprocess_vertex_shader_constant' : (__reader_block__shader_postprocess_vertex_shader_constant_version_0,),
    'block:shader_template_category' : (__reader_block__shader_template_category_version_0,),
    'block:shader_template_parameter' : (__reader_block__shader_template_parameter_version_0,),
    'block:shader_template_level_of_detail' : (__reader_block__shader_template_level_of_detail_version_0,),
    'block:shader_template_pass_reference' : (__reader_block__shader_template_pass_reference_version_0,),
    'block:decorator_cell_collection' : (__reader_block__decorator_cell_collection_version_0,),
    'block:decorator_projected_decal' : (__reader_block__decorator_projected_decal_version_0,),
    'block:structure_bsp_background_sound_palette' : (__reader_block__structure_bsp_background_sound_palette_version_0,),
    'block:structure_bsp_sound_environment_palette' : (__reader_block__structure_bsp_sound_environment_palette_version_0,),
    'block:structure_bsp_weather_palette' : (__reader_block__structure_bsp_weather_palette_version_0,),
    'block:decorator_placement_definition' : (__reader_block__decorator_placement_definition_version_0,),
    'block:decorator_cache_block' : (__reader_block__decorator_cache_block_version_0,),
    'block:decorator_cache_block_data' : (__reader_block__decorator_cache_block_data_version_0,__reader_block__decorator_cache_block_data_version_1),
    'block:decorator_placement' : (__reader_block__decorator_placement_version_0,),
    'block:decal_vertices' : (__reader_block__decal_vertices_version_0,),
    'block:indices' : (__reader_block__indices_version_0,),
    'block:sprite_vertices' : (__reader_block__sprite_vertices_version_0,),
    'block:decorator_group' : (__reader_block__decorator_group_version_0,),
    'block:pathfinding_data' : (__reader_block__pathfinding_data_version_0,),
    'block:sector' : (__reader_block__sector_version_0,__reader_block__sector_version_1,__reader_block__sector_version_2),
    'block:sector_link' : (__reader_block__sector_link_version_0,__reader_block__sector_link_version_1,__reader_block__sector_link_version_2,__reader_block__sector_link_version_3),
    'block:ref' : (__reader_block__ref_version_0,),
    'block:sector_bsp2d_nodes' : (__reader_block__sector_bsp2d_nodes_version_0,),
    'block:surface_flags' : (__reader_block__surface_flags_version_0,),
    'block:sector_vertex' : (__reader_block__sector_vertex_version_0,),
    'block:environment_object_refs' : (__reader_block__environment_object_refs_version_0,__reader_block__environment_object_refs_version_1),
    'block:environment_object_bsp_refs' : (__reader_block__environment_object_bsp_refs_version_0,__reader_block__environment_object_bsp_refs_version_1),
    'block:environment_object_nodes' : (__reader_block__environment_object_nodes_version_0,__reader_block__environment_object_nodes_version_1),
    'block:pathfinding_hints' : (__reader_block__pathfinding_hints_version_0,__reader_block__pathfinding_hints_version_1,__reader_block__pathfinding_hints_version_2,__reader_block__pathfinding_hints_version_3),
    'block:instanced_geometry_reference' : (__reader_block__instanced_geometry_reference_version_0,),
    'block:user_hint' : (__reader_block__user_hint_version_0,),
    'block:user_hint_point' : (__reader_block__user_hint_point_version_0,__reader_block__user_hint_point_version_1),
    'block:user_hint_ray' : (__reader_block__user_hint_ray_version_0,__reader_block__user_hint_ray_version_1),
    'block:user_hint_line_segment' : (__reader_block__user_hint_line_segment_version_0,__reader_block__user_hint_line_segment_version_1),
    'block:user_hint_parallelogram' : (__reader_block__user_hint_parallelogram_version_0,__reader_block__user_hint_parallelogram_version_1),
    'block:user_hint_polygon' : (__reader_block__user_hint_polygon_version_0,),
    'block:user_hint_jump' : (__reader_block__user_hint_jump_version_0,),
    'block:user_hint_climb' : (__reader_block__user_hint_climb_version_0,),
    'block:user_hint_well' : (__reader_block__user_hint_well_version_0,),
    'block:user_hint_well_point' : (__reader_block__user_hint_well_point_version_0,),
    'block:user_hint_flight' : (__reader_block__user_hint_flight_version_0,),
    'block:user_hint_flight_point' : (__reader_block__user_hint_flight_point_version_0,),
    'structure:scenario_object_id' : (__reader_structure__scenario_object_id_version_0,),
    'structure:scenario_object_datum' : (__reader_structure__scenario_object_datum_version_0,__reader_structure__scenario_object_datum_version_1),
    'structure:scenario_object_permutation' : (__reader_structure__scenario_object_permutation_version_0,),
    'structure:old_scenario_unit' : (__reader_structure__old_scenario_unit_version_0,),
    'structure:scenario_unit' : (__reader_structure__scenario_unit_version_0,),
    'structure:scenario_device' : (__reader_structure__scenario_device_version_0,),
    'block:scenario_object_names' : (__reader_block__scenario_object_names_version_0,),
    'block:dont_use_me_scenario_environment_object' : (__reader_block__dont_use_me_scenario_environment_object_version_0,),
    'block:scenario_structure_bsp_reference' : (__reader_block__scenario_structure_bsp_reference_version_0,__reader_block__scenario_structure_bsp_reference_version_1),
    'block:scenario_scenery_palette' : (__reader_block__scenario_scenery_palette_version_0,),
    'block:pathfinding_object_index_list' : (__reader_block__pathfinding_object_index_list_version_0,),
    'block:scenario_scenery' : (__reader_block__scenario_scenery_version_0,__reader_block__scenario_scenery_version_1,__reader_block__scenario_scenery_version_2,__reader_block__scenario_scenery_version_3,__reader_block__scenario_scenery_version_4),
    'structure:scenario_scenery_datum_struct_v2' : (__reader_structure__scenario_scenery_datum_struct_v2_version_0,),
    'structure:scenario_scenery_datum_struct_v3' : (__reader_structure__scenario_scenery_datum_struct_v3_version_0,),
    'structure:scenario_scenery_datum_struct_v4' : (__reader_structure__scenario_scenery_datum_struct_v4_version_0,),
    'block:scenario_crate_palette' : (__reader_block__scenario_crate_palette_version_0,),
    'block:scenario_crate' : (__reader_block__scenario_crate_version_0,),
    'block:g_scenario_editor_folder' : (__reader_block__g_scenario_editor_folder_version_0,),
    'block:scenario_weapon_palette' : (__reader_block__scenario_weapon_palette_version_0,),
    'block:scenario_weapon' : (__reader_block__scenario_weapon_version_0,__reader_block__scenario_weapon_version_1,__reader_block__scenario_weapon_version_2),
    'structure:scenario_weapon_datum' : (__reader_structure__scenario_weapon_datum_version_0,),
    'block:scenario_vehicle_palette' : (__reader_block__scenario_vehicle_palette_version_0,),
    'block:scenario_vehicle' : (__reader_block__scenario_vehicle_version_0,__reader_block__scenario_vehicle_version_1,__reader_block__scenario_vehicle_version_2),
    'block:scenario_light_palette' : (__reader_block__scenario_light_palette_version_0,),
    'block:scenario_light' : (__reader_block__scenario_light_version_0,__reader_block__scenario_light_version_1,__reader_block__scenario_light_version_2),
    'structure:scenario_light' : (__reader_structure__scenario_light_version_0,),
    'block:scenario_biped_palette' : (__reader_block__scenario_biped_palette_version_0,),
    'block:scenario_biped' : (__reader_block__scenario_biped_version_0,__reader_block__scenario_biped_version_1,__reader_block__scenario_biped_version_2),
    'block:scenario_equipment_palette' : (__reader_block__scenario_equipment_palette_version_0,),
    'block:scenario_equipment' : (__reader_block__scenario_equipment_version_0,__reader_block__scenario_equipment_version_1,__reader_block__scenario_equipment_version_2),
    'structure:scenario_equipment_datum' : (__reader_structure__scenario_equipment_datum_version_0,),
    'block:scenario_creature_palette' : (__reader_block__scenario_creature_palette_version_0,),
    'block:scenario_creature' : (__reader_block__scenario_creature_version_0,),
    'block:scenario_sound_scenery_palette' : (__reader_block__scenario_sound_scenery_palette_version_0,),
    'block:scenario_sound_scenery' : (__reader_block__scenario_sound_scenery_version_0,__reader_block__scenario_sound_scenery_version_1,__reader_block__scenario_sound_scenery_version_2),
    'structure:sound_scenery_datum' : (__reader_structure__sound_scenery_datum_version_0,),
    'block:editor_comment' : (__reader_block__editor_comment_version_0,),
    'block:style_palette' : (__reader_block__style_palette_version_0,),
    'block:squad_groups' : (__reader_block__squad_groups_version_0,),
    'block:squads' : (__reader_block__squads_version_0,__reader_block__squads_version_1,__reader_block__squads_version_2),
    'block:move_positions' : (__reader_block__move_positions_version_0,),
    'block:actor_starting_locations' : (__reader_block__actor_starting_locations_version_0,__reader_block__actor_starting_locations_version_1,__reader_block__actor_starting_locations_version_2,__reader_block__actor_starting_locations_version_3,__reader_block__actor_starting_locations_version_4,__reader_block__actor_starting_locations_version_5,__reader_block__actor_starting_locations_version_6),
    'block:scenario_players' : (__reader_block__scenario_players_version_0,),
    'block:special_movement' : (__reader_block__special_movement_version_0,),
    'block:orders' : (__reader_block__orders_version_0,__reader_block__orders_version_1,__reader_block__orders_version_2),
    'block:area_set' : (__reader_block__area_set_version_0,),
    'block:zone_set' : (__reader_block__zone_set_version_0,__reader_block__zone_set_version_1),
    'block:order_completion' : (__reader_block__order_completion_version_0,),
    'block:order_completion_condition' : (__reader_block__order_completion_condition_version_0,),
    'block:order_ending' : (__reader_block__order_ending_version_0,),
    'block:trigger_references' : (__reader_block__trigger_references_version_0,),
    'block:secondary_zone_set' : (__reader_block__secondary_zone_set_version_0,__reader_block__secondary_zone_set_version_1),
    'block:secondary_set_trigger' : (__reader_block__secondary_set_trigger_version_0,),
    'block:zone' : (__reader_block__zone_version_0,__reader_block__zone_version_1),
    'block:firing_positions' : (__reader_block__firing_positions_version_0,__reader_block__firing_positions_version_1,__reader_block__firing_positions_version_2,__reader_block__firing_positions_version_3),
    'block:areas' : (__reader_block__areas_version_0,__reader_block__areas_version_1),
    'block:flight_reference' : (__reader_block__flight_reference_version_0,),
    'block:character_palette' : (__reader_block__character_palette_version_0,),
    'block:ai_animation_reference' : (__reader_block__ai_animation_reference_version_0,),
    'block:ai_script_reference' : (__reader_block__ai_script_reference_version_0,),
    'block:ai_recording_reference' : (__reader_block__ai_recording_reference_version_0,),
    'block:ai_conversation' : (__reader_block__ai_conversation_version_0,),
    'block:ai_conversation_participant' : (__reader_block__ai_conversation_participant_version_0,),
    'block:ai_conversation_line' : (__reader_block__ai_conversation_line_version_0,),
    'block:cs_script_data' : (__reader_block__cs_script_data_version_0,),
    'block:cs_point_set' : (__reader_block__cs_point_set_version_0,__reader_block__cs_point_set_version_1),
    'block:cs_point' : (__reader_block__cs_point_version_0,__reader_block__cs_point_version_1),
    'block:triggers' : (__reader_block__triggers_version_0,),
    'block:ai_scene' : (__reader_block__ai_scene_version_0,),
    'block:ai_scene_trigger' : (__reader_block__ai_scene_trigger_version_0,),
    'block:ai_scene_role' : (__reader_block__ai_scene_role_version_0,),
    'block:ai_scene_role_variants' : (__reader_block__ai_scene_role_variants_version_0,),
    'block:flock_definition' : (__reader_block__flock_definition_version_0,),
    'block:flock_source' : (__reader_block__flock_source_version_0,),
    'block:flock_sink' : (__reader_block__flock_sink_version_0,),
    'block:scenario_trigger_volume' : (__reader_block__scenario_trigger_volume_version_0,__reader_block__scenario_trigger_volume_version_1),
    'block:scenario_cutscene_flag' : (__reader_block__scenario_cutscene_flag_version_0,),
    'block:scenario_cutscene_camera_point' : (__reader_block__scenario_cutscene_camera_point_version_0,),
    'block:recorded_animation' : (__reader_block__recorded_animation_version_0,),
    'block:scenario_cluster_data' : (__reader_block__scenario_cluster_data_version_0,),
    'block:scenario_cluster_background_sounds' : (__reader_block__scenario_cluster_background_sounds_version_0,),
    'block:scenario_cluster_sound_environments' : (__reader_block__scenario_cluster_sound_environments_version_0,),
    'block:scenario_cluster_points' : (__reader_block__scenario_cluster_points_version_0,),
    'block:scenario_cluster_weather_properties' : (__reader_block__scenario_cluster_weather_properties_version_0,),
    'block:scenario_cluster_atmospheric_fog_properties' : (__reader_block__scenario_cluster_atmospheric_fog_properties_version_0,),
    'block:scenario_atmospheric_fog_palette' : (__reader_block__scenario_atmospheric_fog_palette_version_0,),
    'block:scenario_atmospheric_fog_mixer' : (__reader_block__scenario_atmospheric_fog_mixer_version_0,),
    'block:scenario_decorator_set_palette_entry' : (__reader_block__scenario_decorator_set_palette_entry_version_0,),
    'block:scenario_decal_palette' : (__reader_block__scenario_decal_palette_version_0,),
    'block:scenario_decals' : (__reader_block__scenario_decals_version_0,),
    'block:device_group' : (__reader_block__device_group_version_0,),
    'block:scenario_machine' : (__reader_block__scenario_machine_version_0,__reader_block__scenario_machine_version_1,__reader_block__scenario_machine_version_2,__reader_block__scenario_machine_version_3),
    'structure:old_scenario_device' : (__reader_structure__old_scenario_device_version_0,),
    'structure:scenario_machine_struct_v2' : (__reader_structure__scenario_machine_struct_v2_version_0,),
    'structure:scenario_machine_struct_v3' : (__reader_structure__scenario_machine_struct_v3_version_0,),
    'block:scenario_machine_palette' : (__reader_block__scenario_machine_palette_version_0,),
    'block:scenario_control' : (__reader_block__scenario_control_version_0,__reader_block__scenario_control_version_1,__reader_block__scenario_control_version_2),
    'structure:scenario_control' : (__reader_structure__scenario_control_version_0,),
    'block:scenario_control_palette' : (__reader_block__scenario_control_palette_version_0,),
    'block:scenario_light_fixture' : (__reader_block__scenario_light_fixture_version_0,__reader_block__scenario_light_fixture_version_1,__reader_block__scenario_light_fixture_version_2),
    'structure:scenario_light_fixture' : (__reader_structure__scenario_light_fixture_version_0,),
    'block:scenario_light_fixture_palette' : (__reader_block__scenario_light_fixture_palette_version_0,),
    'block:scenario_structure_bsp_spherical_harmonic_lighting' : (__reader_block__scenario_structure_bsp_spherical_harmonic_lighting_version_0,),
    'block:scenario_spherical_harmonic_lighting_point' : (__reader_block__scenario_spherical_harmonic_lighting_point_version_0,),
    'block:large_bsp3d_nodes' : (__reader_block__large_bsp3d_nodes_version_0,),
    'block:planes' : (__reader_block__planes_version_0,),
    'block:large_leaves' : (__reader_block__large_leaves_version_0,),
    'block:large_bsp2d_references' : (__reader_block__large_bsp2d_references_version_0,),
    'block:large_bsp2d_nodes' : (__reader_block__large_bsp2d_nodes_version_0,),
    'block:large_surfaces' : (__reader_block__large_surfaces_version_0,),
    'block:large_edges' : (__reader_block__large_edges_version_0,),
    'block:large_vertices' : (__reader_block__large_vertices_version_0,),
    'block:small_bsp3d_nodes' : (__reader_block__small_bsp3d_nodes_version_0,),
    'block:leaves' : (__reader_block__leaves_version_0,),
    'block:bsp2d_references' : (__reader_block__bsp2d_references_version_0,),
    'block:bsp2d_nodes' : (__reader_block__bsp2d_nodes_version_0,),
    'block:surfaces' : (__reader_block__surfaces_version_0,),
    'block:edges' : (__reader_block__edges_version_0,__reader_block__edges_version_1),
    'block:vertices' : (__reader_block__vertices_version_0,),
    'block:bsp3d_nodes' : (__reader_block__bsp3d_nodes_version_0,),
    'structure:global_collision_bsp' : (__reader_structure__global_collision_bsp_version_0,__reader_structure__global_collision_bsp_version_1,__reader_structure__global_collision_bsp_version_2),
    'block:collision_bsp_physics' : (__reader_block__collision_bsp_physics_version_0,),
    'block:spheres' : (__reader_block__spheres_version_0,),
    'block:pills' : (__reader_block__pills_version_0,),
    'structure:character_physics' : (__reader_structure__character_physics_version_0,),
    'structure:character_physics_ground' : (__reader_structure__character_physics_ground_version_0,),
    'structure:character_physics_flying' : (__reader_structure__character_physics_flying_version_0,),
    'structure:character_physics_dead' : (__reader_structure__character_physics_dead_version_0,),
    'structure:character_physics_sentinel' : (__reader_structure__character_physics_sentinel_version_0,),
    'block:planar_fog' : (__reader_block__planar_fog_version_0,),
    'block:planar_fog_patchy_fog' : (__reader_block__planar_fog_patchy_fog_version_0,),
    'block:scenario_decals_resource' : (__reader_block__scenario_decals_resource_version_0,),
    'block:weapon_hud_interface' : (__reader_block__weapon_hud_interface_version_0,),
    'block:weapon_hud_static' : (__reader_block__weapon_hud_static_version_0,),
    'block:weapon_hud_meter' : (__reader_block__weapon_hud_meter_version_0,),
    'block:weapon_hud_number' : (__reader_block__weapon_hud_number_version_0,),
    'block:weapon_hud_crosshair' : (__reader_block__weapon_hud_crosshair_version_0,),
    'block:weapon_hud_crosshair_item' : (__reader_block__weapon_hud_crosshair_item_version_0,),
    'block:weapon_hud_overlays' : (__reader_block__weapon_hud_overlays_version_0,),
    'block:weapon_hud_overlay' : (__reader_block__weapon_hud_overlay_version_0,),
    'block:global_hud_screen_effect_definition' : (__reader_block__global_hud_screen_effect_definition_version_0,),
    'block:chocolate_mountain' : (__reader_block__chocolate_mountain_version_0,),
    'block:lighting_variables' : (__reader_block__lighting_variables_version_0,),
    'structure:primary_light' : (__reader_structure__primary_light_version_0,),
    'structure:secondary_light' : (__reader_structure__secondary_light_version_0,),
    'structure:ambient_light' : (__reader_structure__ambient_light_version_0,),
    'structure:lightmap_shadows' : (__reader_structure__lightmap_shadows_version_0,),
    'block:scenario_devices_resource' : (__reader_block__scenario_devices_resource_version_0,),
    'block:scenario_comments_resource' : (__reader_block__scenario_comments_resource_version_0,),
    'block:item_collection' : (__reader_block__item_collection_version_0,),
    'block:item_permutation' : (__reader_block__item_permutation_version_0,),
    'block:particle' : (__reader_block__particle_version_0,),
    'block:model' : (__reader_block__model_version_0,__reader_block__model_version_1),
    'block:model_variant' : (__reader_block__model_variant_version_0,),
    'block:model_variant_region' : (__reader_block__model_variant_region_version_0,),
    'block:model_variant_permutation' : (__reader_block__model_variant_permutation_version_0,),
    'block:model_variant_state' : (__reader_block__model_variant_state_version_0,__reader_block__model_variant_state_version_1),
    'block:model_variant_object' : (__reader_block__model_variant_object_version_0,),
    'block:model_material' : (__reader_block__model_material_version_0,),
    'block:global_damage_info' : (__reader_block__global_damage_info_version_0,__reader_block__global_damage_info_version_1),
    'block:global_damage_section' : (__reader_block__global_damage_section_version_0,),
    'block:instantaneous_damage_repsonse' : (__reader_block__instantaneous_damage_repsonse_version_0,),
    'structure:instantaneous_response_damage_effect' : (__reader_structure__instantaneous_response_damage_effect_version_0,__reader_structure__instantaneous_response_damage_effect_version_1),
    'structure:instantaneous_response_damage_effect_marker' : (__reader_structure__instantaneous_response_damage_effect_marker_version_0,__reader_structure__instantaneous_response_damage_effect_marker_version_1),
    'block:global_damage_nodes' : (__reader_block__global_damage_nodes_version_0,),
    'block:damage_seat_info' : (__reader_block__damage_seat_info_version_0,),
    'block:damage_constraint_info' : (__reader_block__damage_constraint_info_version_0,),
    'block:model_region' : (__reader_block__model_region_version_0,),
    'block:model_permutation' : (__reader_block__model_permutation_version_0,),
    'block:model_node' : (__reader_block__model_node_version_0,),
    'block:model_object_data' : (__reader_block__model_object_data_version_0,),
    'block:model_target' : (__reader_block__model_target_version_0,),
    'structure:model_target_lock_on_data' : (__reader_structure__model_target_lock_on_data_version_0,),
    'block:global_scenario_load_parameters' : (__reader_block__global_scenario_load_parameters_version_0,),
    'block:effect' : (__reader_block__effect_version_0,),
    'block:effect_event' : (__reader_block__effect_event_version_0,),
    'block:effect_part' : (__reader_block__effect_part_version_0,),
    'block:beam' : (__reader_block__beam_version_0,),
    'block:effect_accelerations' : (__reader_block__effect_accelerations_version_0,),
    'block:vertex_shader' : (__reader_block__vertex_shader_version_0,__reader_block__vertex_shader_version_1),
    'block:vertex_shader_classification' : (__reader_block__vertex_shader_classification_version_0,),
    'block:color_table' : (__reader_block__color_table_version_0,),
    'block:color' : (__reader_block__color_version_0,),
    'block:scenario_decorators_resource' : (__reader_block__scenario_decorators_resource_version_0,),
    'block:mouse_cursor_definition' : (__reader_block__mouse_cursor_definition_version_0,),
    'block:mouse_cursor_bitmap_reference' : (__reader_block__mouse_cursor_bitmap_reference_version_0,),
    'block:user_interface_globals_definition' : (__reader_block__user_interface_globals_definition_version_0,),
    'block:user_interface_widget_reference' : (__reader_block__user_interface_widget_reference_version_0,),
    'block:screen_effect' : (__reader_block__screen_effect_version_0,),
    'block:rasterizer_screen_effect_pass_reference' : (__reader_block__rasterizer_screen_effect_pass_reference_version_0,),
    'block:rasterizer_screen_effect_texcoord_generation_advanced_control' : (__reader_block__rasterizer_screen_effect_texcoord_generation_advanced_control_version_0,),
    'block:rasterizer_screen_effect_convolution' : (__reader_block__rasterizer_screen_effect_convolution_version_0,),
    'block:unit' : (__reader_block__unit_version_0,),
    'structure:unit_camera' : (__reader_structure__unit_camera_version_0,),
    'block:unit_camera_track' : (__reader_block__unit_camera_track_version_0,),
    'structure:unit_seat_acceleration' : (__reader_structure__unit_seat_acceleration_version_0,),
    'structure:unit_additional_node_names' : (__reader_structure__unit_additional_node_names_version_0,__reader_structure__unit_additional_node_names_version_1),
    'structure:unit_boarding_melee' : (__reader_structure__unit_boarding_melee_version_0,__reader_structure__unit_boarding_melee_version_1),
    'structure:campaign_metagame_bucket' : (__reader_structure__campaign_metagame_bucket_version_0,),
    'block:unit_postures' : (__reader_block__unit_postures_version_0,),
    'block:unit_hud_reference' : (__reader_block__unit_hud_reference_version_0,),
    'block:dialogue_variant' : (__reader_block__dialogue_variant_version_0,),
    'block:powered_seat' : (__reader_block__powered_seat_version_0,),
    'block:unit_weapon' : (__reader_block__unit_weapon_version_0,),
    'block:unit_seat' : (__reader_block__unit_seat_version_0,__reader_block__unit_seat_version_1,__reader_block__unit_seat_version_2,__reader_block__unit_seat_version_3),
    'structure:unit_boost' : (__reader_structure__unit_boost_version_0,),
    'structure:unit_lipsync_scales' : (__reader_structure__unit_lipsync_scales_version_0,__reader_structure__unit_lipsync_scales_version_1),
    'block:scenario_vehicles_resource' : (__reader_block__scenario_vehicles_resource_version_0,),
    'block:model_animation_graph' : (__reader_block__model_animation_graph_version_0,),
    'structure:animation_graph_resources' : (__reader_structure__animation_graph_resources_version_0,__reader_structure__animation_graph_resources_version_1,__reader_structure__animation_graph_resources_version_2),
    'block:animation_graph_node' : (__reader_block__animation_graph_node_version_0,__reader_block__animation_graph_node_version_1),
    'block:animation_graph_sound_reference' : (__reader_block__animation_graph_sound_reference_version_0,),
    'block:animation_blend_screen' : (__reader_block__animation_blend_screen_version_0,),
    'structure:animation_aiming_screen' : (__reader_structure__animation_aiming_screen_version_0,),
    'block:animation_pool' : (__reader_block__animation_pool_version_0,__reader_block__animation_pool_version_1,__reader_block__animation_pool_version_2,__reader_block__animation_pool_version_3,__reader_block__animation_pool_version_4,__reader_block__animation_pool_version_5),
    'block:animation_frame_event' : (__reader_block__animation_frame_event_version_0,),
    'block:animation_sound_event' : (__reader_block__animation_sound_event_version_0,),
    'structure:packed_data_sizes' : (__reader_structure__packed_data_sizes_version_0,),
    'block:animation_effect_event' : (__reader_block__animation_effect_event_version_0,__reader_block__animation_effect_event_version_1),
    'block:object_space_node_data_block_v0' : (__reader_block__object_space_node_data_block_v0_version_0,),
    'block:object_space_node_data' : (__reader_block__object_space_node_data_version_0,),
    'structure:quantized_orientation' : (__reader_structure__quantized_orientation_version_0,),
    'block:animation_graph_effect_reference' : (__reader_block__animation_graph_effect_reference_version_0,),
    'structure:animation_graph_contents' : (__reader_structure__animation_graph_contents_version_0,),
    'block:animation_mode' : (__reader_block__animation_mode_version_0,),
    'block:weapon_class' : (__reader_block__weapon_class_version_0,),
    'block:weapon_type' : (__reader_block__weapon_type_version_0,),
    'block:animation_entry' : (__reader_block__animation_entry_version_0,),
    'structure:animation_index' : (__reader_structure__animation_index_version_0,),
    'block:damage_animation' : (__reader_block__damage_animation_version_0,),
    'block:damage_direction' : (__reader_block__damage_direction_version_0,),
    'block:damage_region' : (__reader_block__damage_region_version_0,),
    'block:animation_transition' : (__reader_block__animation_transition_version_0,),
    'structure:animation_transition_state' : (__reader_structure__animation_transition_state_version_0,),
    'block:animation_transition_destination' : (__reader_block__animation_transition_destination_version_0,),
    'structure:animation_destination_state' : (__reader_structure__animation_destination_state_version_0,),
    'block:precache_list' : (__reader_block__precache_list_version_0,),
    'block:animation_ik' : (__reader_block__animation_ik_version_0,),
    'block:vehicle_suspension' : (__reader_block__vehicle_suspension_version_0,),
    'block:object_animation' : (__reader_block__object_animation_version_0,),
    'structure:model_animation_runtime_data' : (__reader_structure__model_animation_runtime_data_version_0,),
    'block:inherited_animation' : (__reader_block__inherited_animation_version_0,),
    'block:inherited_animation_node_map' : (__reader_block__inherited_animation_node_map_version_0,),
    'block:inherited_animation_node_map_flag' : (__reader_block__inherited_animation_node_map_flag_version_0,),
    'block:weapon_class_lookup' : (__reader_block__weapon_class_lookup_version_0,),
    'block:additional_node_data' : (__reader_block__additional_node_data_version_0,),
    'block:style' : (__reader_block__style_version_0,),
    'block:behavior_names' : (__reader_block__behavior_names_version_0,),
    'block:projectile' : (__reader_block__projectile_version_0,__reader_block__projectile_version_1),
    'block:projectile_material_response' : (__reader_block__projectile_material_response_version_0,),
    'structure:super_detonation_damage' : (__reader_structure__super_detonation_damage_version_0,__reader_structure__super_detonation_damage_version_1),
    'structure:angular_velocity_lower_bound' : (__reader_structure__angular_velocity_lower_bound_version_0,__reader_structure__angular_velocity_lower_bound_version_1),
    'block:crate' : (__reader_block__crate_version_0,),
    'block:sound_effect_template' : (__reader_block__sound_effect_template_version_0,__reader_block__sound_effect_template_version_1),
    'block:sound_effect_template_parameter' : (__reader_block__sound_effect_template_parameter_version_0,),
    'block:sound_effect_templates' : (__reader_block__sound_effect_templates_version_0,),
    'block:sound_effect_template_additional_sound_input' : (__reader_block__sound_effect_template_additional_sound_input_version_0,),
    'block:platform_sound_effect_template_collection' : (__reader_block__platform_sound_effect_template_collection_version_0,),
    'block:platform_sound_effect_template' : (__reader_block__platform_sound_effect_template_version_0,),
    'block:platform_sound_effect_template_component' : (__reader_block__platform_sound_effect_template_component_version_0,),
    'block:collision_model' : (__reader_block__collision_model_version_0,__reader_block__collision_model_version_1),
    'structure:OLD_global_damage_resistance' : (__reader_structure__OLD_global_damage_resistance_version_0,),
    'block:collision_model_material' : (__reader_block__collision_model_material_version_0,),
    'block:collision_model_region' : (__reader_block__collision_model_region_version_0,),
    'block:collision_model_permutation' : (__reader_block__collision_model_permutation_version_0,__reader_block__collision_model_permutation_version_1),
    'block:collision_model_bsp' : (__reader_block__collision_model_bsp_version_0,),
    'block:collision_model_pathfinding_sphere' : (__reader_block__collision_model_pathfinding_sphere_version_0,),
    'block:collision_model_node' : (__reader_block__collision_model_node_version_0,__reader_block__collision_model_node_version_1),
    'block:equipment' : (__reader_block__equipment_version_0,),
    'block:multiplayer_scenario_description' : (__reader_block__multiplayer_scenario_description_version_0,),
    'block:scenario_description' : (__reader_block__scenario_description_version_0,),
    'block:shader_light_response' : (__reader_block__shader_light_response_version_0,),
    'block:unit_hud_interface' : (__reader_block__unit_hud_interface_version_0,),
    'block:unit_hud_auxilary_overlay' : (__reader_block__unit_hud_auxilary_overlay_version_0,),
    'block:unit_hud_sound' : (__reader_block__unit_hud_sound_version_0,),
    'block:unit_hud_auxilary_panel' : (__reader_block__unit_hud_auxilary_panel_version_0,),
    'block:shader' : (__reader_block__shader_version_0,),
    'block:shader_properties' : (__reader_block__shader_properties_version_0,),
    'block:long' : (__reader_block__long_version_0,),
    'block:item' : (__reader_block__item_version_0,),
    'block:predicted_bitmaps' : (__reader_block__predicted_bitmaps_version_0,),
    'block:sound_cache_file_gestalt' : (__reader_block__sound_cache_file_gestalt_version_0,),
    'block:sound_gestalt_codec' : (__reader_block__sound_gestalt_codec_version_0,),
    'block:sound_gestalt_playback' : (__reader_block__sound_gestalt_playback_version_0,),
    'block:sound_gestalt_scale' : (__reader_block__sound_gestalt_scale_version_0,),
    'block:sound_gestalt_import_names' : (__reader_block__sound_gestalt_import_names_version_0,),
    'block:sound_gestalt_pitch_range_parameters' : (__reader_block__sound_gestalt_pitch_range_parameters_version_0,),
    'block:sound_gestalt_pitch_ranges' : (__reader_block__sound_gestalt_pitch_ranges_version_0,),
    'block:sound_gestalt_permutations' : (__reader_block__sound_gestalt_permutations_version_0,),
    'block:sound_gestalt_permutation_language_data' : (__reader_block__sound_gestalt_permutation_language_data_version_0,),
    'block:sound_gestalt_custom_playback' : (__reader_block__sound_gestalt_custom_playback_version_0,),
    'block:sound_gestalt_reflections' : (__reader_block__sound_gestalt_reflections_version_0,),
    'block:sound_gestalt_lowpass' : (__reader_block__sound_gestalt_lowpass_version_0,),
    'block:sound_gestalt_remastered_sound_references' : (__reader_block__sound_gestalt_remastered_sound_references_version_0,),
    'block:sound_gestalt_runtime_permutation_bit_vector' : (__reader_block__sound_gestalt_runtime_permutation_bit_vector_version_0,),
    'block:sound_gestalt_language_chunks' : (__reader_block__sound_gestalt_language_chunks_version_0,),
    'block:sound_gestalt_promotions' : (__reader_block__sound_gestalt_promotions_version_0,),
    'block:sound_gestalt_extra_info' : (__reader_block__sound_gestalt_extra_info_version_0,),
    'block:multiplayer_globals' : (__reader_block__multiplayer_globals_version_0,),
    'block:multiplayer_universal' : (__reader_block__multiplayer_universal_version_0,),
    'block:multiplayer_runtime' : (__reader_block__multiplayer_runtime_version_0,__reader_block__multiplayer_runtime_version_1),
    'block:weapons' : (__reader_block__weapons_version_0,),
    'block:vehicles' : (__reader_block__vehicles_version_0,),
    'block:sounds' : (__reader_block__sounds_version_0,),
    'structure:grenade_and_powerup' : (__reader_structure__grenade_and_powerup_version_0,__reader_structure__grenade_and_powerup_version_1),
    'block:grenade' : (__reader_block__grenade_version_0,),
    'block:powerup' : (__reader_block__powerup_version_0,),
    'block:game_engine_flavor_event' : (__reader_block__game_engine_flavor_event_version_0,),
    'block:game_engine_medic_event' : (__reader_block__game_engine_medic_event_version_0,),
    'block:game_engine_vip_event' : (__reader_block__game_engine_vip_event_version_0,),
    'block:game_engine_juggernaut_event' : (__reader_block__game_engine_juggernaut_event_version_0,),
    'block:game_engine_territories_event' : (__reader_block__game_engine_territories_event_version_0,),
    'block:game_engine_assault_event' : (__reader_block__game_engine_assault_event_version_0,),
    'block:game_engine_infection_event' : (__reader_block__game_engine_infection_event_version_0,),
    'block:game_engine_headhunter_event' : (__reader_block__game_engine_headhunter_event_version_0,),
    'block:multiplayer_constants' : (__reader_block__multiplayer_constants_version_0,),
    'block:game_engine_status_response' : (__reader_block__game_engine_status_response_version_0,),
    'block:shader_template' : (__reader_block__shader_template_version_0,),
    'block:shader_template_property' : (__reader_block__shader_template_property_version_0,),
    'block:shader_template_runtime_external_light_response_index' : (__reader_block__shader_template_runtime_external_light_response_index_version_0,),
    'block:shader_template_postprocess_definition_new' : (__reader_block__shader_template_postprocess_definition_new_version_0,),
    'block:shader_template_postprocess_level_of_detail_new' : (__reader_block__shader_template_postprocess_level_of_detail_new_version_0,),
    'block:shader_template_postprocess_pass_new' : (__reader_block__shader_template_postprocess_pass_new_version_0,),
    'block:shader_template_postprocess_implementation_new' : (__reader_block__shader_template_postprocess_implementation_new_version_0,),
    'block:shader_template_postprocess_remapping_new' : (__reader_block__shader_template_postprocess_remapping_new_version_0,),
    'block:device_control' : (__reader_block__device_control_version_0,),
    'block:scenario_cinematics_resource' : (__reader_block__scenario_cinematics_resource_version_0,),
    'block:detail_object_collection' : (__reader_block__detail_object_collection_version_0,),
    'block:detail_object_type' : (__reader_block__detail_object_type_version_0,),
    'block:scenario' : (__reader_block__scenario_version_0,__reader_block__scenario_version_1,__reader_block__scenario_version_2),
    'block:scenario_sky_reference' : (__reader_block__scenario_sky_reference_version_0,),
    'block:scenario_child_scenario' : (__reader_block__scenario_child_scenario_version_0,),
    'block:scenario_function' : (__reader_block__scenario_function_version_0,),
    'block:scenario_profiles' : (__reader_block__scenario_profiles_version_0,),
    'block:scenario_netpoints' : (__reader_block__scenario_netpoints_version_0,__reader_block__scenario_netpoints_version_1),
    'block:scenario_netgame_equipment' : (__reader_block__scenario_netgame_equipment_version_0,),
    'structure:scenario_netgame_equipment_orientation' : (__reader_structure__scenario_netgame_equipment_orientation_version_0,),
    'block:scenario_starting_equipment' : (__reader_block__scenario_starting_equipment_version_0,),
    'block:scenario_bsp_switch_trigger_volume' : (__reader_block__scenario_bsp_switch_trigger_volume_version_0,),
    'block:scenario_detail_object_collection_palette' : (__reader_block__scenario_detail_object_collection_palette_version_0,),
    'block:actor_palette' : (__reader_block__actor_palette_version_0,),
    'block:hs_scripts' : (__reader_block__hs_scripts_version_0,),
    'block:hs_globals' : (__reader_block__hs_globals_version_0,),
    'block:hs_references' : (__reader_block__hs_references_version_0,),
    'block:hs_source_files' : (__reader_block__hs_source_files_version_0,),
    'block:scenario_cutscene_title' : (__reader_block__scenario_cutscene_title_version_0,),
    'block:scenario_resources' : (__reader_block__scenario_resources_version_0,),
    'block:scenario_resource_reference' : (__reader_block__scenario_resource_reference_version_0,),
    'block:scenario_hs_source_reference' : (__reader_block__scenario_hs_source_reference_version_0,),
    'block:scenario_ai_resource_reference' : (__reader_block__scenario_ai_resource_reference_version_0,),
    'block:old_unused_strucure_physics' : (__reader_block__old_unused_strucure_physics_version_0,),
    'block:old_unused_object_identifiers' : (__reader_block__old_unused_object_identifiers_version_0,),
    'block:hs_unit_seat' : (__reader_block__hs_unit_seat_version_0,),
    'block:scenario_kill_trigger_volumes' : (__reader_block__scenario_kill_trigger_volumes_version_0,),
    'block:syntax_datum' : (__reader_block__syntax_datum_version_0,),
    'block:scenario_scavenger_hunt_object' : (__reader_block__scenario_scavenger_hunt_object_version_0,),
    'block:scenario_spawn_data' : (__reader_block__scenario_spawn_data_version_0,),
    'block:dynamic_spawn_zone_overload' : (__reader_block__dynamic_spawn_zone_overload_version_0,),
    'block:static_spawn_zone' : (__reader_block__static_spawn_zone_version_0,),
    'structure:static_spawn_zone_data' : (__reader_structure__static_spawn_zone_data_version_0,),
    'block:scenario_planar_fog_palette' : (__reader_block__scenario_planar_fog_palette_version_0,),
    'block:scenario_bsp_switch_transition_volume' : (__reader_block__scenario_bsp_switch_transition_volume_version_0,),
    'block:scenario_level_data' : (__reader_block__scenario_level_data_version_0,),
    'block:ai_scenario_mission_dialogue' : (__reader_block__ai_scenario_mission_dialogue_version_0,),
    'block:scenario_interpolator' : (__reader_block__scenario_interpolator_version_0,),
    'block:scenario_screen_effect_reference' : (__reader_block__scenario_screen_effect_reference_version_0,),
    'block:scenario_simulation_definition_table' : (__reader_block__scenario_simulation_definition_table_version_0,),
    'block:antenna' : (__reader_block__antenna_version_0,),
    'block:antenna_vertex' : (__reader_block__antenna_vertex_version_0,),
    'block:particle_model' : (__reader_block__particle_model_version_0,),
    'block:particle_models' : (__reader_block__particle_models_version_0,),
    'block:particle_model_vertices' : (__reader_block__particle_model_vertices_version_0,),
    'block:particle_model_indices' : (__reader_block__particle_model_indices_version_0,),
    'block:particle_model::cached_data' : (__reader_block__particle_model____cached_data_version_0,),
    'block:scenario_lights_resource' : (__reader_block__scenario_lights_resource_version_0,),
    'block:sound_dialogue_constants' : (__reader_block__sound_dialogue_constants_version_0,),
    'block:biped' : (__reader_block__biped_version_0,__reader_block__biped_version_1),
    'block:contact_point_block_v1' : (__reader_block__contact_point_block_v1_version_0,),
    'structure:biped_lock_on_data' : (__reader_structure__biped_lock_on_data_version_0,__reader_structure__biped_lock_on_data_version_1),
    'block:contact_point' : (__reader_block__contact_point_version_0,),
    'block:vehicle_collection' : (__reader_block__vehicle_collection_version_0,),
    'block:vehicle_permutation' : (__reader_block__vehicle_permutation_version_0,),
    'block:hud_message_text' : (__reader_block__hud_message_text_version_0,),
    'block:hud_message_elements' : (__reader_block__hud_message_elements_version_0,),
    'block:hud_messages' : (__reader_block__hud_messages_version_0,),
    'block:creature' : (__reader_block__creature_version_0,),
    'block:scenario_structure_lighting_resource' : (__reader_block__scenario_structure_lighting_resource_version_0,),
    'block:garbage' : (__reader_block__garbage_version_0,),
    'block:device_light_fixture' : (__reader_block__device_light_fixture_version_0,),
    'block:cache_file_sound' : (__reader_block__cache_file_sound_version_0,),
    'block:lens_flare' : (__reader_block__lens_flare_version_0,),
    'block:lens_flare_reflection' : (__reader_block__lens_flare_reflection_version_0,),
    'block:lens_flare_scalar_animation' : (__reader_block__lens_flare_scalar_animation_version_0,),
    'block:lens_flare_color_animation' : (__reader_block__lens_flare_color_animation_version_0,),
    'block:cellular_automata2d' : (__reader_block__cellular_automata2d_version_0,),
    'block:rules' : (__reader_block__rules_version_0,),
    'block:states' : (__reader_block__states_version_0,),
    'block:scenario_equipment_resource' : (__reader_block__scenario_equipment_resource_version_0,),
    'block:decorators' : (__reader_block__decorators_version_0,),
    'block:scenario_structure_bsp' : (__reader_block__scenario_structure_bsp_version_0,),
    'block:structure_collision_materials' : (__reader_block__structure_collision_materials_version_0,),
    'block:global_collision_bsp' : (__reader_block__global_collision_bsp_version_0,__reader_block__global_collision_bsp_version_1,__reader_block__global_collision_bsp_version_2),
    'block:UNUSED_structure_bsp_node' : (__reader_block__UNUSED_structure_bsp_node_version_0,),
    'block:structure_bsp_leaf' : (__reader_block__structure_bsp_leaf_version_0,__reader_block__structure_bsp_leaf_version_1),
    'block:structure_bsp_surface_reference' : (__reader_block__structure_bsp_surface_reference_version_0,__reader_block__structure_bsp_surface_reference_version_1),
    'block:structure_bsp_cluster_portal' : (__reader_block__structure_bsp_cluster_portal_version_0,),
    'block:structure_bsp_cluster_portal_vertex' : (__reader_block__structure_bsp_cluster_portal_vertex_version_0,),
    'block:structure_bsp_fog_plane' : (__reader_block__structure_bsp_fog_plane_version_0,),
    'block:structure_bsp_weather_polyhedron' : (__reader_block__structure_bsp_weather_polyhedron_version_0,),
    'block:structure_bsp_weather_polyhedron_plane' : (__reader_block__structure_bsp_weather_polyhedron_plane_version_0,),
    'block:structure_bsp_detail_object_data' : (__reader_block__structure_bsp_detail_object_data_version_0,),
    'block:global_detail_object_cells' : (__reader_block__global_detail_object_cells_version_0,),
    'block:global_detail_object' : (__reader_block__global_detail_object_version_0,),
    'block:global_detail_object_counts' : (__reader_block__global_detail_object_counts_version_0,),
    'block:global_z_reference_vector' : (__reader_block__global_z_reference_vector_version_0,),
    'block:structure_bsp_cluster' : (__reader_block__structure_bsp_cluster_version_0,__reader_block__structure_bsp_cluster_version_1,__reader_block__structure_bsp_cluster_version_2),
    'block:structure_indices_segment' : (__reader_block__structure_indices_segment_version_0,),
    'block:structure_indices_segment_reference' : (__reader_block__structure_indices_segment_reference_version_0,),
    'block:structure_subcluster' : (__reader_block__structure_subcluster_version_0,),
    'block:structure_bsp_cluster_portal_index' : (__reader_block__structure_bsp_cluster_portal_index_version_0,),
    'block:structure_shared_edge' : (__reader_block__structure_shared_edge_version_0,),
    'block:structure_shared_edge_group' : (__reader_block__structure_shared_edge_group_version_0,),
    'block:structure_subcluster_boundary' : (__reader_block__structure_subcluster_boundary_version_0,),
    'block:structure_strip_segment_first_triangle_index' : (__reader_block__structure_strip_segment_first_triangle_index_version_0,),
    'block:structure_bsp_cluster_lightmap_data' : (__reader_block__structure_bsp_cluster_lightmap_data_version_0,),
    'block:structure_bsp_cluster_lightmap_index' : (__reader_block__structure_bsp_cluster_lightmap_index_version_0,),
    'block:structure_bsp_cluster_lightmap_texture_coordinate' : (__reader_block__structure_bsp_cluster_lightmap_texture_coordinate_version_0,),
    'block:structure_bsp_cluster_lightmap_duplicate_index' : (__reader_block__structure_bsp_cluster_lightmap_duplicate_index_version_0,),
    'block:structure_lightmap_sampling_info' : (__reader_block__structure_lightmap_sampling_info_version_0,),
    'block:structure_lightmap_bsp_leaf' : (__reader_block__structure_lightmap_bsp_leaf_version_0,),
    'block:structure_lightmap_surface' : (__reader_block__structure_lightmap_surface_version_0,),
    'block:structure_bsp_cluster_data' : (__reader_block__structure_bsp_cluster_data_version_0,),
    'structure:structure_bsp_cluster_mopp_shape' : (__reader_structure__structure_bsp_cluster_mopp_shape_version_0,),
    'block:structure_bsp_cluster_visibility_mopp_leaf' : (__reader_block__structure_bsp_cluster_visibility_mopp_leaf_version_0,),
    'structure:structure_bsp_cluster_havok_shape' : (__reader_structure__structure_bsp_cluster_havok_shape_version_0,),
    'block:structure_bsp_cluster_instanced_geometry_index' : (__reader_block__structure_bsp_cluster_instanced_geometry_index_version_0,),
    'block:visibility_mopp_reorder_table' : (__reader_block__visibility_mopp_reorder_table_version_0,),
    'block:structure_bsp_cluster_data_block_new' : (__reader_block__structure_bsp_cluster_data_block_new_version_0,),
    'block:structure_bsp_sky_owner_cluster' : (__reader_block__structure_bsp_sky_owner_cluster_version_0,),
    'block:structure_bsp_conveyor_surface' : (__reader_block__structure_bsp_conveyor_surface_version_0,),
    'block:structure_bsp_breakable_surface' : (__reader_block__structure_bsp_breakable_surface_version_0,),
    'block:structure_bsp_pathfinding_edges' : (__reader_block__structure_bsp_pathfinding_edges_version_0,),
    'block:structure_bsp_marker' : (__reader_block__structure_bsp_marker_version_0,),
    'block:structure_bsp_runtime_decal' : (__reader_block__structure_bsp_runtime_decal_version_0,),
    'block:structure_bsp_environment_object_palette' : (__reader_block__structure_bsp_environment_object_palette_version_0,),
    'block:structure_bsp_environment_object' : (__reader_block__structure_bsp_environment_object_version_0,),
    'block:structure_bsp_lightmap_data' : (__reader_block__structure_bsp_lightmap_data_version_0,),
    'block:global_map_leaf' : (__reader_block__global_map_leaf_version_0,),
    'block:map_leaf_face' : (__reader_block__map_leaf_face_version_0,),
    'block:map_leaf_face_vertex' : (__reader_block__map_leaf_face_vertex_version_0,),
    'block:map_leaf_connection_index' : (__reader_block__map_leaf_connection_index_version_0,),
    'block:global_leaf_connection' : (__reader_block__global_leaf_connection_version_0,),
    'block:leaf_connection_vertex' : (__reader_block__leaf_connection_vertex_version_0,),
    'block:structure_bsp_precomputed_lighting' : (__reader_block__structure_bsp_precomputed_lighting_version_0,),
    'structure:visibility' : (__reader_structure__visibility_version_0,),
    'block:structure_bsp_instanced_geometry_definition' : (__reader_block__structure_bsp_instanced_geometry_definition_version_0,),
    'structure:structure_instanced_geometry_render_info' : (__reader_structure__structure_instanced_geometry_render_info_version_0,__reader_structure__structure_instanced_geometry_render_info_version_1),
    'block:structure_bsp_instanced_geometry_instances' : (__reader_block__structure_bsp_instanced_geometry_instances_version_0,__reader_block__structure_bsp_instanced_geometry_instances_version_1,__reader_block__structure_bsp_instanced_geometry_instances_version_2),
    'block:structure_bsp_sound_cluster' : (__reader_block__structure_bsp_sound_cluster_version_0,),
    'block:structure_sound_cluster_portal_designators' : (__reader_block__structure_sound_cluster_portal_designators_version_0,),
    'block:structure_sound_cluster_interior_cluster_indices' : (__reader_block__structure_sound_cluster_interior_cluster_indices_version_0,),
    'block:transparent_planes' : (__reader_block__transparent_planes_version_0,),
    'block:structure_bsp_debug_info' : (__reader_block__structure_bsp_debug_info_version_0,),
    'block:structure_bsp_cluster_debug_info' : (__reader_block__structure_bsp_cluster_debug_info_version_0,),
    'block:structure_bsp_debug_info_render_line' : (__reader_block__structure_bsp_debug_info_render_line_version_0,),
    'block:structure_bsp_debug_info_indices' : (__reader_block__structure_bsp_debug_info_indices_version_0,),
    'block:structure_bsp_fog_plane_debug_info' : (__reader_block__structure_bsp_fog_plane_debug_info_version_0,),
    'block:structure_bsp_fog_zone_debug_info' : (__reader_block__structure_bsp_fog_zone_debug_info_version_0,),
    'structure:global_structure_physics' : (__reader_structure__global_structure_physics_version_0,),
    'block:breakable_surface_key_table' : (__reader_block__breakable_surface_key_table_version_0,),
    'block:global_water_definitions' : (__reader_block__global_water_definitions_version_0,),
    'block:water_geometry_section' : (__reader_block__water_geometry_section_version_0,),
    'block:structure_portal_device_mapping' : (__reader_block__structure_portal_device_mapping_version_0,),
    'block:structure_device_portal_association' : (__reader_block__structure_device_portal_association_version_0,),
    'block:game_portal_to_portal_mapping' : (__reader_block__game_portal_to_portal_mapping_version_0,),
    'block:structure_bsp_audibility' : (__reader_block__structure_bsp_audibility_version_0,),
    'block:door_encoded_pas' : (__reader_block__door_encoded_pas_version_0,),
    'block:cluster_door_portal_encoded_pas' : (__reader_block__cluster_door_portal_encoded_pas_version_0,),
    'block:ai_deafening_encoded_pas' : (__reader_block__ai_deafening_encoded_pas_version_0,),
    'block:encoded_cluster_distances' : (__reader_block__encoded_cluster_distances_version_0,),
    'block:occluder_to_machine_door_mapping' : (__reader_block__occluder_to_machine_door_mapping_version_0,),
    'block:structure_bsp_fake_lightprobes' : (__reader_block__structure_bsp_fake_lightprobes_version_0,),
    'structure:render_lighting' : (__reader_structure__render_lighting_version_0,),
    'block:sound_classes' : (__reader_block__sound_classes_version_0,__reader_block__sound_classes_version_1),
    'block:sound_class' : (__reader_block__sound_class_version_0,__reader_block__sound_class_version_1,__reader_block__sound_class_version_2,__reader_block__sound_class_version_3),
    'block:sound_class_ducker_block_definition' : (__reader_block__sound_class_ducker_block_definition_version_0,),
    'block:weather_system' : (__reader_block__weather_system_version_0,),
    'block:global_particle_system_lite' : (__reader_block__global_particle_system_lite_version_0,),
    'block:particle_system_lite_data' : (__reader_block__particle_system_lite_data_version_0,),
    'block:particles_render_data' : (__reader_block__particles_render_data_version_0,),
    'block:particles_update_data' : (__reader_block__particles_update_data_version_0,),
    'block:global_weather_background_plate' : (__reader_block__global_weather_background_plate_version_0,),
    'structure:global_wind_model' : (__reader_structure__global_wind_model_version_0,),
    'block:gloal_wind_primitives' : (__reader_block__gloal_wind_primitives_version_0,),
    'block:decal' : (__reader_block__decal_version_0,),
    'block:physics' : (__reader_block__physics_version_0,),
    'block:inertial_matrix' : (__reader_block__inertial_matrix_version_0,),
    'block:powered_mass_point' : (__reader_block__powered_mass_point_version_0,),
    'block:mass_point' : (__reader_block__mass_point_version_0,),
    'block:globals' : (__reader_block__globals_version_0,),
    'block:havok_cleanup_resources' : (__reader_block__havok_cleanup_resources_version_0,),
    'block:collision_damage' : (__reader_block__collision_damage_version_0,),
    'block:sound_globals' : (__reader_block__sound_globals_version_0,__reader_block__sound_globals_version_1,__reader_block__sound_globals_version_2),
    'block:ai_globals' : (__reader_block__ai_globals_version_0,),
    'block:ai_globals_gravemind' : (__reader_block__ai_globals_gravemind_version_0,),
    'block:game_globals_damage' : (__reader_block__game_globals_damage_version_0,),
    'block:damage_group' : (__reader_block__damage_group_version_0,),
    'block:armor_modifier' : (__reader_block__armor_modifier_version_0,),
    'block:custom_references' : (__reader_block__custom_references_version_0,),
    'block:sound_reference' : (__reader_block__sound_reference_version_0,),
    'block:camera' : (__reader_block__camera_version_0,),
    'block:player_control' : (__reader_block__player_control_version_0,),
    'block:look_function' : (__reader_block__look_function_version_0,),
    'block:difficulty' : (__reader_block__difficulty_version_0,),
    'block:grenades' : (__reader_block__grenades_version_0,),
    'block:rasterizer_data' : (__reader_block__rasterizer_data_version_0,),
    'block:vertex_shader_reference' : (__reader_block__vertex_shader_reference_version_0,),
    'block:interface_tag_references' : (__reader_block__interface_tag_references_version_0,),
    'block:cheat_weapons' : (__reader_block__cheat_weapons_version_0,),
    'block:cheat_powerups' : (__reader_block__cheat_powerups_version_0,),
    'block:multiplayer_information' : (__reader_block__multiplayer_information_version_0,),
    'block:vehicles_globals' : (__reader_block__vehicles_globals_version_0,),
    'block:sounds_globals' : (__reader_block__sounds_globals_version_0,),
    'block:player_information' : (__reader_block__player_information_version_0,),
    'block:player_representation' : (__reader_block__player_representation_version_0,),
    'block:falling_damage' : (__reader_block__falling_damage_version_0,),
    'block:old_materials' : (__reader_block__old_materials_version_0,),
    'block:global_material_defintion' : (__reader_block__global_material_defintion_version_0,),
    'structure:material_physics_properties' : (__reader_structure__material_physics_properties_version_0,__reader_structure__material_physics_properties_version_1),
    'structure:materials_sweeteners' : (__reader_structure__materials_sweeteners_version_0,),
    'block:multiplayer_ui' : (__reader_block__multiplayer_ui_version_0,),
    'block:runtime_levels_definition' : (__reader_block__runtime_levels_definition_version_0,),
    'block:runtime_campaign_level' : (__reader_block__runtime_campaign_level_version_0,),
    'block:ui_levels_definition' : (__reader_block__ui_levels_definition_version_0,),
    'block:ui_campaign' : (__reader_block__ui_campaign_version_0,),
    'block:weapon' : (__reader_block__weapon_version_0,__reader_block__weapon_version_1,__reader_block__weapon_version_2,__reader_block__weapon_version_3),
    'structure:melee_aim_assist' : (__reader_structure__melee_aim_assist_version_0,__reader_structure__melee_aim_assist_version_1),
    'structure:melee_damage_parameters' : (__reader_structure__melee_damage_parameters_version_0,__reader_structure__melee_damage_parameters_version_1),
    'structure:aim_assist' : (__reader_structure__aim_assist_version_0,),
    'block:magazines' : (__reader_block__magazines_version_0,__reader_block__magazines_version_1),
    'block:magazine_objects' : (__reader_block__magazine_objects_version_0,__reader_block__magazine_objects_version_1),
    'structure:weapon_tracking' : (__reader_structure__weapon_tracking_version_0,__reader_structure__weapon_tracking_version_1),
    'block:weapon_triggers' : (__reader_block__weapon_triggers_version_0,),
    'structure:weapon_trigger_autofire' : (__reader_structure__weapon_trigger_autofire_version_0,),
    'structure:weapon_trigger_charging' : (__reader_structure__weapon_trigger_charging_version_0,),
    'block:weapon_barrels' : (__reader_block__weapon_barrels_version_0,__reader_block__weapon_barrels_version_1,__reader_block__weapon_barrels_version_2),
    'structure:weapon_barrel_damage_effect' : (__reader_structure__weapon_barrel_damage_effect_version_0,__reader_structure__weapon_barrel_damage_effect_version_1),
    'block:barrel_firing_effect' : (__reader_block__barrel_firing_effect_version_0,__reader_block__barrel_firing_effect_version_1),
    'structure:weapon_interface' : (__reader_structure__weapon_interface_version_0,),
    'structure:weapon_shared_interface' : (__reader_structure__weapon_shared_interface_version_0,),
    'block:weapon_first_person_interface' : (__reader_block__weapon_first_person_interface_version_0,),
    'block:user_interface_list_skin_definition' : (__reader_block__user_interface_list_skin_definition_version_0,),
    'block:single_animation_reference' : (__reader_block__single_animation_reference_version_0,),
    'block:pixel_shader' : (__reader_block__pixel_shader_version_0,),
    'block:scenario_creature_resource' : (__reader_block__scenario_creature_resource_version_0,),
    'block:scenario_scenery_resource' : (__reader_block__scenario_scenery_resource_version_0,),
    'block:sound_scenery' : (__reader_block__sound_scenery_version_0,),
    'block:sound_environment' : (__reader_block__sound_environment_version_0,__reader_block__sound_environment_version_1),
    'block:sound' : (__reader_block__sound_version_0,__reader_block__sound_version_1,__reader_block__sound_version_2,__reader_block__sound_version_3,__reader_block__sound_version_4,__reader_block__sound_version_5,__reader_block__sound_version_6,__reader_block__sound_version_7),
    'block:old_sound_pitch_range' : (__reader_block__old_sound_pitch_range_version_0,),
    'block:old_sound_permutations' : (__reader_block__old_sound_permutations_version_0,),
    'block:old_sound_permutation_info' : (__reader_block__old_sound_permutation_info_version_0,),
    'structure:large_sound_playback_parameters' : (__reader_structure__large_sound_playback_parameters_version_0,__reader_structure__large_sound_playback_parameters_version_1),
    'structure:large_sound_scale_modifiers' : (__reader_structure__large_sound_scale_modifiers_version_0,),
    'block:large_sound_pitch_range' : (__reader_block__large_sound_pitch_range_version_0,),
    'block:large_sound_permutations' : (__reader_block__large_sound_permutations_version_0,),
    'block:sound_permutation_marker' : (__reader_block__sound_permutation_marker_version_0,),
    'block:sound_platform_sound_playback' : (__reader_block__sound_platform_sound_playback_version_0,),
    'block:sound_pitch_range' : (__reader_block__sound_pitch_range_version_0,),
    'block:sound_permutations' : (__reader_block__sound_permutations_version_0,),
    'block:sound_extra_info' : (__reader_block__sound_extra_info_version_0,),
    'block:sound_definition_language_permutation_info' : (__reader_block__sound_definition_language_permutation_info_version_0,__reader_block__sound_definition_language_permutation_info_version_1,__reader_block__sound_definition_language_permutation_info_version_2),
    'block:sound_permutation_raw_info_block_old' : (__reader_block__sound_permutation_raw_info_block_old_version_0,),
    'block:sound_permutation_raw_info' : (__reader_block__sound_permutation_raw_info_version_0,),
    'structure:sound_reflection_parameters' : (__reader_structure__sound_reflection_parameters_version_0,),
    'block:sound_reflection' : (__reader_block__sound_reflection_version_0,),
    'block:patchy_fog' : (__reader_block__patchy_fog_version_0,),
    'block:damage_effect' : (__reader_block__damage_effect_version_0,__reader_block__damage_effect_version_1),
    'structure:damage_outer_cone_angle' : (__reader_structure__damage_outer_cone_angle_version_0,__reader_structure__damage_outer_cone_angle_version_1),
    'block:damage_effect_player_response' : (__reader_block__damage_effect_player_response_version_0,),
    'structure:screen_flash_definition' : (__reader_structure__screen_flash_definition_version_0,),
    'structure:vibration_definition' : (__reader_structure__vibration_definition_version_0,),
    'structure:vibration_frequency_definition' : (__reader_structure__vibration_frequency_definition_version_0,),
    'structure:damage_effect_sound_effect_definition' : (__reader_structure__damage_effect_sound_effect_definition_version_0,),
    'block:ai_dialogue_globals' : (__reader_block__ai_dialogue_globals_version_0,),
    'block:vocalization_definitions_block_0' : (__reader_block__vocalization_definitions_block_0_version_0,__reader_block__vocalization_definitions_block_0_version_1),
    'block:response' : (__reader_block__response_version_0,),
    'block:vocalization_definitions_block_1' : (__reader_block__vocalization_definitions_block_1_version_0,__reader_block__vocalization_definitions_block_1_version_1),
    'block:vocalization_definitions_block_2' : (__reader_block__vocalization_definitions_block_2_version_0,__reader_block__vocalization_definitions_block_2_version_1),
    'block:vocalization_definitions_block_3' : (__reader_block__vocalization_definitions_block_3_version_0,__reader_block__vocalization_definitions_block_3_version_1),
    'block:vocalization_definitions_block_4' : (__reader_block__vocalization_definitions_block_4_version_0,__reader_block__vocalization_definitions_block_4_version_1),
    'block:vocalization_definitions_block_5' : (__reader_block__vocalization_definitions_block_5_version_0,__reader_block__vocalization_definitions_block_5_version_1),
    'block:vocalization_patterns' : (__reader_block__vocalization_patterns_version_0,),
    'block:dialogue_data' : (__reader_block__dialogue_data_version_0,),
    'block:involuntary_data' : (__reader_block__involuntary_data_version_0,),
    'block:material_effects' : (__reader_block__material_effects_version_0,__reader_block__material_effects_version_1),
    'block:material_effect_block_v1' : (__reader_block__material_effect_block_v1_version_0,),
    'block:material_effect_material_block_old_v1' : (__reader_block__material_effect_material_block_old_v1_version_0,),
    'block:material_effect_block_v2' : (__reader_block__material_effect_block_v2_version_0,),
    'block:old_material_effect_material' : (__reader_block__old_material_effect_material_version_0,),
    'block:material_effect_material' : (__reader_block__material_effect_material_version_0,__reader_block__material_effect_material_version_1),
    'block:user_interface_screen_widget_definition' : (__reader_block__user_interface_screen_widget_definition_version_0,),
    'block:window_pane_reference' : (__reader_block__window_pane_reference_version_0,),
    'block:button_widget_reference' : (__reader_block__button_widget_reference_version_0,),
    'block:list_reference' : (__reader_block__list_reference_version_0,),
    'block:s_text_value_pair_reference_block_UNUSED' : (__reader_block__s_text_value_pair_reference_block_UNUSED_version_0,),
    'block:table_view_list_reference' : (__reader_block__table_view_list_reference_version_0,),
    'block:table_view_list_row_reference' : (__reader_block__table_view_list_row_reference_version_0,),
    'block:table_view_list_item_reference' : (__reader_block__table_view_list_item_reference_version_0,),
    'block:s_text_value_pair_blocks_block_UNUSED' : (__reader_block__s_text_value_pair_blocks_block_UNUSED_version_0,),
    'block:local_string_id_list_section_reference' : (__reader_block__local_string_id_list_section_reference_version_0,),
    'block:local_string_id_list_string_reference' : (__reader_block__local_string_id_list_string_reference_version_0,),
    'block:local_bitmap_reference' : (__reader_block__local_bitmap_reference_version_0,),
    'block:scenario_trigger_volumes_resource' : (__reader_block__scenario_trigger_volumes_resource_version_0,),
    'block:contrail' : (__reader_block__contrail_version_0,),
    'block:contrail_point_states' : (__reader_block__contrail_point_states_version_0,),
    'block:light' : (__reader_block__light_version_0,),
    'block:light_brightness_animation' : (__reader_block__light_brightness_animation_version_0,),
    'block:light_color_animation' : (__reader_block__light_color_animation_version_0,),
    'block:light_gel_animation' : (__reader_block__light_gel_animation_version_0,),
    'block:user_interface_shared_globals_definition' : (__reader_block__user_interface_shared_globals_definition_version_0,),
    'block:ui_error_category' : (__reader_block__ui_error_category_version_0,),
    'block:ui_error' : (__reader_block__ui_error_version_0,),
    'block:animation_reference' : (__reader_block__animation_reference_version_0,),
    'block:shape_group_reference' : (__reader_block__shape_group_reference_version_0,),
    'block:shape_block_reference' : (__reader_block__shape_block_reference_version_0,),
    'block:point_block_reference' : (__reader_block__point_block_reference_version_0,),
    'block:persistent_background_animation' : (__reader_block__persistent_background_animation_version_0,),
    'block:background_animation_keyframe_reference' : (__reader_block__background_animation_keyframe_reference_version_0,),
    'block:list_skin_reference' : (__reader_block__list_skin_reference_version_0,),
    'block:skill_to_rank_mapping' : (__reader_block__skill_to_rank_mapping_version_0,),
    'block:particle_physics' : (__reader_block__particle_physics_version_0,),
    'block:particle_controller' : (__reader_block__particle_controller_version_0,),
    'block:particle_controller_parameters' : (__reader_block__particle_controller_parameters_version_0,),
    'block:grenade_hud_interface' : (__reader_block__grenade_hud_interface_version_0,),
    'block:grenade_hud_overlay' : (__reader_block__grenade_hud_overlay_version_0,),
    'block:grenade_hud_sound' : (__reader_block__grenade_hud_sound_version_0,),
    'block:ai_mission_dialogue' : (__reader_block__ai_mission_dialogue_version_0,),
    'block:mission_dialogue_lines' : (__reader_block__mission_dialogue_lines_version_0,),
    'block:mission_dialogue_variants' : (__reader_block__mission_dialogue_variants_version_0,),
    'block:hud_number' : (__reader_block__hud_number_version_0,),
    'block:sound_looping' : (__reader_block__sound_looping_version_0,__reader_block__sound_looping_version_1,__reader_block__sound_looping_version_2,__reader_block__sound_looping_version_3),
    'block:looping_sound_track' : (__reader_block__looping_sound_track_version_0,__reader_block__looping_sound_track_version_1),
    'block:looping_sound_detail' : (__reader_block__looping_sound_detail_version_0,__reader_block__looping_sound_detail_version_1),
    'block:physics_model' : (__reader_block__physics_model_version_0,__reader_block__physics_model_version_1,__reader_block__physics_model_version_2),
    'block:rigid_bodies' : (__reader_block__rigid_bodies_version_0,__reader_block__rigid_bodies_version_1),
    'block:physics_model_material' : (__reader_block__physics_model_material_version_0,),
    'block:boxes' : (__reader_block__boxes_version_0,),
    'block:triangles' : (__reader_block__triangles_version_0,),
    'block:polyhedra' : (__reader_block__polyhedra_version_0,),
    'block:polyhedron_four_vectors' : (__reader_block__polyhedron_four_vectors_version_0,),
    'block:polyhedron_plane_equations' : (__reader_block__polyhedron_plane_equations_version_0,),
    'block:mass_distributions' : (__reader_block__mass_distributions_version_0,),
    'block:lists' : (__reader_block__lists_version_0,),
    'block:list_shapes' : (__reader_block__list_shapes_version_0,),
    'block:mopps' : (__reader_block__mopps_version_0,),
    'block:hinge_constraints' : (__reader_block__hinge_constraints_version_0,),
    'structure:constraint_bodies' : (__reader_structure__constraint_bodies_version_0,),
    'block:ragdoll_constraints' : (__reader_block__ragdoll_constraints_version_0,),
    'block:regions' : (__reader_block__regions_version_0,),
    'block:permutations' : (__reader_block__permutations_version_0,),
    'block:rigid_body_indices' : (__reader_block__rigid_body_indices_version_0,),
    'block:nodes' : (__reader_block__nodes_version_0,),
    'block:phantom_types' : (__reader_block__phantom_types_version_0,__reader_block__phantom_types_version_1),
    'block:physics_model_node_constraint_edge' : (__reader_block__physics_model_node_constraint_edge_version_0,),
    'block:physics_model_constraint_edge_constraint' : (__reader_block__physics_model_constraint_edge_constraint_version_0,),
    'block:multi_spheres' : (__reader_block__multi_spheres_version_0,),
    'block:point_to_path_curve' : (__reader_block__point_to_path_curve_version_0,),
    'block:point_to_path_curve_point' : (__reader_block__point_to_path_curve_point_version_0,),
    'block:limited_hinge_constraints' : (__reader_block__limited_hinge_constraints_version_0,),
    'block:ball_and_socket_constraints' : (__reader_block__ball_and_socket_constraints_version_0,),
    'block:stiff_spring_constraints' : (__reader_block__stiff_spring_constraints_version_0,),
    'block:prismatic_constraints' : (__reader_block__prismatic_constraints_version_0,),
    'block:phantoms' : (__reader_block__phantoms_version_0,),
    'block:dialogue' : (__reader_block__dialogue_version_0,__reader_block__dialogue_version_1),
    'block:sound_references' : (__reader_block__sound_references_version_0,__reader_block__sound_references_version_1),
    'block:scenario_weapons_resource' : (__reader_block__scenario_weapons_resource_version_0,),
    'block:bitmap' : (__reader_block__bitmap_version_0,),
    'block:bitmap_group_sequence' : (__reader_block__bitmap_group_sequence_version_0,),
    'block:bitmap_group_sprite' : (__reader_block__bitmap_group_sprite_version_0,),
    'block:bitmap_data' : (__reader_block__bitmap_data_version_0,__reader_block__bitmap_data_version_1,__reader_block__bitmap_data_version_2),
    'structure:bitmap_native_info' : (__reader_structure__bitmap_native_info_version_0,),
    'block:bitmap_native_mipmap_info' : (__reader_block__bitmap_native_mipmap_info_version_0,),
    'block:shader_pass' : (__reader_block__shader_pass_version_0,),
    'block:shader_pass_parameter' : (__reader_block__shader_pass_parameter_version_0,),
    'block:shader_pass_implementation' : (__reader_block__shader_pass_implementation_version_0,),
    'block:shader_pass_texture' : (__reader_block__shader_pass_texture_version_0,),
    'block:shader_texture_state_address_state' : (__reader_block__shader_texture_state_address_state_version_0,),
    'block:shader_texture_state_filter_state' : (__reader_block__shader_texture_state_filter_state_version_0,),
    'block:shader_texture_state_kill_state' : (__reader_block__shader_texture_state_kill_state_version_0,),
    'block:shader_texture_state_misc_state' : (__reader_block__shader_texture_state_misc_state_version_0,),
    'block:shader_texture_state_constant' : (__reader_block__shader_texture_state_constant_version_0,),
    'block:shader_pass_vertex_shader_constant' : (__reader_block__shader_pass_vertex_shader_constant_version_0,),
    'block:shader_state_channels_state' : (__reader_block__shader_state_channels_state_version_0,),
    'block:shader_state_alpha_blend_state' : (__reader_block__shader_state_alpha_blend_state_version_0,),
    'block:shader_state_alpha_test_state' : (__reader_block__shader_state_alpha_test_state_version_0,),
    'block:shader_state_depth_state' : (__reader_block__shader_state_depth_state_version_0,),
    'block:shader_state_cull_state' : (__reader_block__shader_state_cull_state_version_0,),
    'block:shader_state_fill_state' : (__reader_block__shader_state_fill_state_version_0,),
    'block:shader_state_misc_state' : (__reader_block__shader_state_misc_state_version_0,),
    'block:shader_state_constant' : (__reader_block__shader_state_constant_version_0,),
    'block:shader_pass_postprocess_definition_new' : (__reader_block__shader_pass_postprocess_definition_new_version_0,),
    'block:shader_pass_postprocess_implementation_new' : (__reader_block__shader_pass_postprocess_implementation_new_version_0,),
    'block:shader_postprocess_pixel_shader' : (__reader_block__shader_postprocess_pixel_shader_version_0,),
    'block:shader_postprocess_pixel_shader_constant_defaults' : (__reader_block__shader_postprocess_pixel_shader_constant_defaults_version_0,),
    'block:pixel_shader_extern_map' : (__reader_block__pixel_shader_extern_map_version_0,),
    'block:pixel_shader_index' : (__reader_block__pixel_shader_index_version_0,),
    'block:shader_pass_postprocess_texture_new' : (__reader_block__shader_pass_postprocess_texture_new_version_0,),
    'block:shader_pass_postprocess_texture_state' : (__reader_block__shader_pass_postprocess_texture_state_version_0,),
    'block:pixel_shader_fragment' : (__reader_block__pixel_shader_fragment_version_0,),
    'block:pixel_shader_permutation_new' : (__reader_block__pixel_shader_permutation_new_version_0,),
    'block:pixel_shader_combiner' : (__reader_block__pixel_shader_combiner_version_0,),
    'block:shader_pass_postprocess_extern_new' : (__reader_block__shader_pass_postprocess_extern_new_version_0,),
    'block:shader_pass_postprocess_constant_new' : (__reader_block__shader_pass_postprocess_constant_new_version_0,),
    'block:shader_pass_postprocess_constant_info_new' : (__reader_block__shader_pass_postprocess_constant_info_new_version_0,),
    'block:shader_pass_postprocess_implementation' : (__reader_block__shader_pass_postprocess_implementation_version_0,),
    'block:extern_reference' : (__reader_block__extern_reference_version_0,),
    'block:pixel_shader_permutation' : (__reader_block__pixel_shader_permutation_version_0,),
    'block:pixel_shader_constant' : (__reader_block__pixel_shader_constant_version_0,),
    'block:meter' : (__reader_block__meter_version_0,),
    'block:sound_mix' : (__reader_block__sound_mix_version_0,),
    'structure:sound_global_mix' : (__reader_structure__sound_global_mix_version_0,),
    'block:scenario_bipeds_resource' : (__reader_block__scenario_bipeds_resource_version_0,),
    'block:sky' : (__reader_block__sky_version_0,),
    'block:sky_cubemap' : (__reader_block__sky_cubemap_version_0,),
    'block:sky_atmospheric_fog' : (__reader_block__sky_atmospheric_fog_version_0,),
    'block:sky_fog' : (__reader_block__sky_fog_version_0,),
    'block:sky_patchy_fog' : (__reader_block__sky_patchy_fog_version_0,),
    'block:sky_light' : (__reader_block__sky_light_version_0,),
    'block:sky_light_fog' : (__reader_block__sky_light_fog_version_0,),
    'block:sky_radiosity_light' : (__reader_block__sky_radiosity_light_version_0,),
    'block:sky_shader_function' : (__reader_block__sky_shader_function_version_0,),
    'block:sky_animation' : (__reader_block__sky_animation_version_0,),
    'block:decorator_set' : (__reader_block__decorator_set_version_0,__reader_block__decorator_set_version_1),
    'block:decorator_shader_reference' : (__reader_block__decorator_shader_reference_version_0,),
    'block:decorator_classes' : (__reader_block__decorator_classes_version_0,),
    'block:decorator_permutations' : (__reader_block__decorator_permutations_version_0,),
    'block:decorator_models' : (__reader_block__decorator_models_version_0,),
    'block:decorator_model_vertices' : (__reader_block__decorator_model_vertices_version_0,),
    'block:decorator_model_indices' : (__reader_block__decorator_model_indices_version_0,),
    'block:decorator_set::cached_data' : (__reader_block__decorator_set____cached_data_version_0,),
    'block:device' : (__reader_block__device_version_0,),
    'block:hud_globals' : (__reader_block__hud_globals_version_0,),
    'block:hud_button_icon' : (__reader_block__hud_button_icon_version_0,),
    'block:hud_waypoint_arrow' : (__reader_block__hud_waypoint_arrow_version_0,),
    'structure:global_new_hud_globals' : (__reader_structure__global_new_hud_globals_version_0,),
    'block:hud_dashlights' : (__reader_block__hud_dashlights_version_0,),
    'block:new_hud_waypoint_arrow' : (__reader_block__new_hud_waypoint_arrow_version_0,),
    'block:hud_waypoint' : (__reader_block__hud_waypoint_version_0,),
    'block:new_hud_sound' : (__reader_block__new_hud_sound_version_0,),
    'block:player_training_entry_data' : (__reader_block__player_training_entry_data_version_0,),
    'structure:global_new_hud_globals_constants' : (__reader_structure__global_new_hud_globals_constants_version_0,),
    'block:scenario_structure_lightmap' : (__reader_block__scenario_structure_lightmap_version_0,),
    'block:structure_lightmap_group' : (__reader_block__structure_lightmap_group_version_0,),
    'block:structure_lightmap_palette_color' : (__reader_block__structure_lightmap_palette_color_version_0,),
    'block:lightmap_geometry_section' : (__reader_block__lightmap_geometry_section_version_0,),
    'block:lightmap_geometry_section_cache_data' : (__reader_block__lightmap_geometry_section_cache_data_version_0,),
    'block:lightmap_geometry_render_info' : (__reader_block__lightmap_geometry_render_info_version_0,),
    'block:structure_lightmap_lighting_environment' : (__reader_block__structure_lightmap_lighting_environment_version_0,),
    'block:lightmap_vertex_buffer_bucket' : (__reader_block__lightmap_vertex_buffer_bucket_version_0,),
    'block:lightmap_bucket_raw_vertex' : (__reader_block__lightmap_bucket_raw_vertex_version_0,),
    'block:lightmap_vertex_buffer_bucket_cache_data' : (__reader_block__lightmap_vertex_buffer_bucket_cache_data_version_0,),
    'block:lightmap_instance_bucket_reference' : (__reader_block__lightmap_instance_bucket_reference_version_0,),
    'block:lightmap_instance_bucket_section_offset' : (__reader_block__lightmap_instance_bucket_section_offset_version_0,),
    'block:lightmap_scenery_object_info' : (__reader_block__lightmap_scenery_object_info_version_0,),
    'block:stereo_system' : (__reader_block__stereo_system_version_0,),
    'block:scenario_cluster_data_resource' : (__reader_block__scenario_cluster_data_resource_version_0,),
    'block:point_physics' : (__reader_block__point_physics_version_0,),
    'block:scenario_sound_scenery_resource' : (__reader_block__scenario_sound_scenery_resource_version_0,),
    'block:multiplayer_variant_settings_interface_definition' : (__reader_block__multiplayer_variant_settings_interface_definition_version_0,),
    'block:variant_setting_edit_reference' : (__reader_block__variant_setting_edit_reference_version_0,),
    'block:text_value_pair' : (__reader_block__text_value_pair_version_0,),
    'block:null' : (__reader_block__null_version_0,),
    'block:g_default_variants' : (__reader_block__g_default_variants_version_0,),
    'block:default_variant_settings' : (__reader_block__default_variant_settings_version_0,),
    'structure:create_new_variant' : (__reader_structure__create_new_variant_version_0,),
    'block:device_machine' : (__reader_block__device_machine_version_0,),
    'block:light_volume' : (__reader_block__light_volume_version_0,),
    'block:light_volume_volume' : (__reader_block__light_volume_volume_version_0,),
    'block:light_volume_aspect' : (__reader_block__light_volume_aspect_version_0,),
    'block:light_volume_runtime_offset' : (__reader_block__light_volume_runtime_offset_version_0,),
    'block:scenery' : (__reader_block__scenery_version_0,__reader_block__scenery_version_1,__reader_block__scenery_version_2),
    'block:wind' : (__reader_block__wind_version_0,),
    'block:camera_track' : (__reader_block__camera_track_version_0,),
    'block:camera_track_control_point' : (__reader_block__camera_track_control_point_version_0,),
    'block:character' : (__reader_block__character_version_0,__reader_block__character_version_1,__reader_block__character_version_2),
    'block:character_general' : (__reader_block__character_general_version_0,),
    'block:character_placement' : (__reader_block__character_placement_version_0,),
    'block:character_vitality' : (__reader_block__character_vitality_version_0,),
    'block:character_perception' : (__reader_block__character_perception_version_0,),
    'block:character_retreat' : (__reader_block__character_retreat_version_0,),
    'block:character_look' : (__reader_block__character_look_version_0,),
    'block:character_movement' : (__reader_block__character_movement_version_0,),
    'block:character_engage' : (__reader_block__character_engage_version_0,),
    'block:character_evasion' : (__reader_block__character_evasion_version_0,),
    'block:character_cover' : (__reader_block__character_cover_version_0,),
    'block:character_search' : (__reader_block__character_search_version_0,),
    'block:character_presearch' : (__reader_block__character_presearch_version_0,__reader_block__character_presearch_version_1),
    'block:character_weapons' : (__reader_block__character_weapons_version_0,__reader_block__character_weapons_version_1),
    'block:character_firing_pattern' : (__reader_block__character_firing_pattern_version_0,),
    'block:character_grenades' : (__reader_block__character_grenades_version_0,),
    'block:character_charge' : (__reader_block__character_charge_version_0,__reader_block__character_charge_version_1,__reader_block__character_charge_version_2,__reader_block__character_charge_version_3),
    'block:character_ready' : (__reader_block__character_ready_version_0,),
    'block:character_vehicle' : (__reader_block__character_vehicle_version_0,__reader_block__character_vehicle_version_1),
    'block:character_idle' : (__reader_block__character_idle_version_0,),
    'block:character_swarm' : (__reader_block__character_swarm_version_0,),
    'block:character_vocalization' : (__reader_block__character_vocalization_version_0,),
    'block:character_firing_pattern_properties' : (__reader_block__character_firing_pattern_properties_version_0,),
    'block:character_variants' : (__reader_block__character_variants_version_0,),
    'block:character_boarding' : (__reader_block__character_boarding_version_0,),
    'block:character_boss' : (__reader_block__character_boss_version_0,),
    'block:campaign_metagame_bucket' : (__reader_block__campaign_metagame_bucket_version_0,),
    'block:vehicle' : (__reader_block__vehicle_version_0,),
    'block:gear' : (__reader_block__gear_version_0,),
    'structure:torque_curve' : (__reader_structure__torque_curve_version_0,),
    'structure:havok_vehicle_physics' : (__reader_structure__havok_vehicle_physics_version_0,),
    'block:anti_gravity_point_definition' : (__reader_block__anti_gravity_point_definition_version_0,),
    'block:friction_point_definition' : (__reader_block__friction_point_definition_version_0,),
    'block:vehicle_phantom_shape' : (__reader_block__vehicle_phantom_shape_version_0,),
    'block:new_hud_definition' : (__reader_block__new_hud_definition_version_0,),
    'block:hud_bitmap_widgets' : (__reader_block__hud_bitmap_widgets_version_0,),
    'structure:hud_widget_inputs' : (__reader_structure__hud_widget_inputs_version_0,__reader_structure__hud_widget_inputs_version_1),
    'structure:hud_widget_state_definition' : (__reader_structure__hud_widget_state_definition_version_0,),
    'block:hud_widget_effect' : (__reader_block__hud_widget_effect_version_0,),
    'structure:hud_widget_effect_function' : (__reader_structure__hud_widget_effect_function_version_0,),
    'block:hud_text_widgets' : (__reader_block__hud_text_widgets_version_0,),
    'structure:new_hud_dashlight_data' : (__reader_structure__new_hud_dashlight_data_version_0,),
    'block:hud_screen_effect_widgets' : (__reader_block__hud_screen_effect_widgets_version_0,),
    'structure:screen_effect_bonus' : (__reader_structure__screen_effect_bonus_version_0,__reader_structure__screen_effect_bonus_version_1),
    'block:cloth' : (__reader_block__cloth_version_0,),
    'structure:cloth_properties' : (__reader_structure__cloth_properties_version_0,),
    'block:cloth_vertices' : (__reader_block__cloth_vertices_version_0,),
    'block:cloth_indices' : (__reader_block__cloth_indices_version_0,),
    'block:cloth_links' : (__reader_block__cloth_links_version_0,),
    'block:material_physics' : (__reader_block__material_physics_version_0,),
    'block:cellular_automata' : (__reader_block__cellular_automata_version_0,),
    'block:object' : (__reader_block__object_version_0,),
    'block:object_ai_properties' : (__reader_block__object_ai_properties_version_0,),
    'block:object_function' : (__reader_block__object_function_version_0,),
    'block:object_attachment' : (__reader_block__object_attachment_version_0,),
    'block:object_widget' : (__reader_block__object_widget_version_0,),
    'block:old_object_function' : (__reader_block__old_object_function_version_0,),
    'block:object_change_colors' : (__reader_block__object_change_colors_version_0,),
    'block:object_change_color_initial_permutation' : (__reader_block__object_change_color_initial_permutation_version_0,),
    'block:object_change_color_function' : (__reader_block__object_change_color_function_version_0,),
    'block:sound_effect_collection' : (__reader_block__sound_effect_collection_version_0,),
    'block:platform_sound_playback' : (__reader_block__platform_sound_playback_version_0,),
    'structure:platform_sound_playback' : (__reader_structure__platform_sound_playback_version_0,),
    'block:scenario_ai_resource' : (__reader_block__scenario_ai_resource_version_0,),
    'block:breakable_surface' : (__reader_block__breakable_surface_version_0,),
    'block:multilingual_unicode_string_list' : (__reader_block__multilingual_unicode_string_list_version_0,),
    'block:multilingual_unicode_string_reference' : (__reader_block__multilingual_unicode_string_reference_version_0,),
    'block:colony' : (__reader_block__colony_version_0,),
    'block:liquid' : (__reader_block__liquid_version_0,),
    'block:liquid_arc' : (__reader_block__liquid_arc_version_0,),
    'block:liquid_core' : (__reader_block__liquid_core_version_0,),
    'block:render_model' : (__reader_block__render_model_version_0,),
    'block:render_model_region' : (__reader_block__render_model_region_version_0,),
    'block:render_model_permutation' : (__reader_block__render_model_permutation_version_0,),
    'block:render_model_section' : (__reader_block__render_model_section_version_0,),
    'block:render_model_section_data' : (__reader_block__render_model_section_data_version_0,__reader_block__render_model_section_data_version_1),
    'structure:global_geometry_point_data' : (__reader_structure__global_geometry_point_data_version_0,),
    'block:global_geometry_raw_point' : (__reader_block__global_geometry_raw_point_version_0,),
    'block:global_geometry_rigid_point_group' : (__reader_block__global_geometry_rigid_point_group_version_0,),
    'block:global_geometry_point_data_index' : (__reader_block__global_geometry_point_data_index_version_0,),
    'block:render_model_node_map' : (__reader_block__render_model_node_map_version_0,),
    'block:render_model_forward_shared_edge' : (__reader_block__render_model_forward_shared_edge_version_0,),
    'block:render_model_shared_edge_group' : (__reader_block__render_model_shared_edge_group_version_0,),
    'block:render_model_backward_shared_edge' : (__reader_block__render_model_backward_shared_edge_version_0,),
    'block:render_model_dsq_raw_vertex' : (__reader_block__render_model_dsq_raw_vertex_version_0,),
    'block:render_model_dsq_strip_index' : (__reader_block__render_model_dsq_strip_index_version_0,),
    'block:render_model_dsq_silhouette_quad' : (__reader_block__render_model_dsq_silhouette_quad_version_0,),
    'block:render_model_invalid_section_pairs' : (__reader_block__render_model_invalid_section_pairs_version_0,),
    'block:render_model_section_group' : (__reader_block__render_model_section_group_version_0,),
    'block:render_model_compound_node' : (__reader_block__render_model_compound_node_version_0,),
    'block:render_model_node' : (__reader_block__render_model_node_version_0,),
    'block:render_model_node_map_block_OLD' : (__reader_block__render_model_node_map_block_OLD_version_0,),
    'block:render_model_marker_group' : (__reader_block__render_model_marker_group_version_0,),
    'block:render_model_marker' : (__reader_block__render_model_marker_version_0,),
    'block:prt_info' : (__reader_block__prt_info_version_0,),
    'block:prt_lod_info' : (__reader_block__prt_lod_info_version_0,),
    'block:prt_section_info' : (__reader_block__prt_section_info_version_0,),
    'block:prt_cluster_basis' : (__reader_block__prt_cluster_basis_version_0,),
    'block:prt_raw_pca_data' : (__reader_block__prt_raw_pca_data_version_0,),
    'block:prt_vertex_buffers' : (__reader_block__prt_vertex_buffers_version_0,),
    'block:section_render_leaves' : (__reader_block__section_render_leaves_version_0,),
    'block:node_render_leaves' : (__reader_block__node_render_leaves_version_0,),
    'block:bsp_leaf' : (__reader_block__bsp_leaf_version_0,),
    'block:bsp_surface_reference' : (__reader_block__bsp_surface_reference_version_0,),
    'block:text_value_pair_definition' : (__reader_block__text_value_pair_definition_version_0,),
    'block:text_value_pair_reference' : (__reader_block__text_value_pair_reference_version_0,),
}
LAYOUT_VERSION = b'w\x02\xb9h\\\xbfq\xe6\xd84\x81\xfb \xd7\xd4p\xde\xc5\x17\xcd7\xf8i.\xeb)w\xc6S\x7f\xc9w'
