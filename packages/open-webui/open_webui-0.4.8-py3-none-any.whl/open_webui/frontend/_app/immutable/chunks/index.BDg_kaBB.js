import{b as c}from"./index.BMvSwtWT.js";const l=async(a="")=>{let e=null;const o=await fetch(`${c}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return o},p=async(a="",e)=>{let o=null;const n=await fetch(`${c}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return n},h=async(a,e)=>{let o=null;const n=await fetch(`${c}/models${typeof e=="number"?`/${e}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var i;return o=`OpenAI: ${((i=t==null?void 0:t.error)==null?void 0:i.message)??"Network Problem"}`,[]});if(o)throw o;return n},u=async(a="",e="https://api.openai.com/v1",o="")=>{let n=null;const t=await fetch(`${c}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({url:e,key:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var r;return n=`OpenAI: ${((r=i==null?void 0:i.error)==null?void 0:r.message)??"Network Problem"}`,[]});if(n)throw n;return t},f=async(a="",e,o=c)=>{const n=new AbortController;let t=null;const i=await fetch(`${o}/chat/completions`,{signal:n.signal,method:"POST",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(r=>(console.log(r),t=r,null));if(t)throw t;return[i,n]};export{l as a,h as b,f as g,p as u,u as v};
//# sourceMappingURL=index.BDg_kaBB.js.map
