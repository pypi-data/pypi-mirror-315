[build-system]
requires = ["setuptools == 69.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "pyzefir"
dynamic = ["version"]
authors = [
    {name = "Narodowe Centrum Badań Jądrowych", email = "office@idea.edu.pl"},
]
readme = "README.md"
license = {file = "LICENSE.txt"}
classifiers = [
   "Environment :: Console",
   "Intended Audience :: Science/Research",
   "License :: OSI Approved :: MIT License",
   "Natural Language :: English",
   "Operating System :: OS Independent",
   "Programming Language :: Python :: 3.11",
   "Topic :: Scientific/Engineering",
]

dependencies = [
    "numpy~=1.24.2",
    "pandas==2.0.1",
    "networkx~=3.0",
    "setuptools==67.8.0",
    "matplotlib~=3.7.1",
    "openpyxl==3.1.2",
    "gurobipy~=11.0.2",
    "bidict~=0.22.1",
    "scipy~=1.11.1",
    "click~=8.1.6",
    "sanitize-filename~=1.2.0",
    "XlsxWriter~=3.1.2",
    "linopy==0.3.13",
    "xarray~=2024.6.0",
    "GitPython==3.1.43",
    "pyarrow==17.0.0"
]


[project.optional-dependencies]
dev = [
    "flake8==7.0.0",
    "black==24.2.0",
    "pre-commit",
    "pytest==7.4.4",
    "pytest-cov~=4.0.0",
    "pytest-mock~=3.11.1",
    "pytest-lazy-fixture~=0.6.3",
    "pytest-xdist~=3.5.0",
    "pylama[radon,mypy,toml]",
    "tox",
    "sphinx"
]
gurobi = [
    "gurobipy~=11.0.2",
]
highs = [
    "highspy~=1.5.3",
]

[project.scripts]
pyzefir = "pyzefir.cli.runner:cli_run"
structure-creator = "pyzefir.structure_creator.cli.cli_wrapper:run_structure_creator_cli"

[tool.setuptools.dynamic]
version = {attr = "pyzefir.__version__"}

[tool.setuptools.packages.find]
include = ["pyzefir*"]
exclude = ["docs*", "tests*"]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false

[tool.coverage.report]
exclude_lines = [
	"if __name__ == .__main__.:",
	"raise AssertionError",
	"if TYPE_CHECKING:",
	"raise NotImplementedError",
   ]
omit = [
   "pyzefir/graph/**",
]

[tool.pylama.linter.pycodestyle]
max_line_length = 120
[tool.pylama.linter.pylint]
max_line_length = 120
[tool.pylama.linter.radon]
no_assert = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py311
    isolated_build = True

    [testenv]
    usedevelop = True
    deps = .[dev,gurobi,highs]

    [testenv:unit]
    commands =
            python -m pytest -vvv --cov=pyzefir --junitxml=report.xml tests/unit

    [testenv:fast_integration]
    commands =
            python -m pytest -vvv -m "not long_test" tests/integration

    [testenv:integration]
    commands =
            python -m pytest -vvv tests/integration

    [coverage]
    xml_report = true
    html_report = true
"""

[tool.pytest.ini_options]
addopts = "--cov-report term --cov-report xml:coverage.xml --numprocesses 10"
filterwarnings = [
#    "error",
    "ignore::pyzefir.model.network_elements.energy_source_types.generator_type.SumNotEqualToOneWarning",
]

[tool.bumpversion]
current_version = "0.5.0"
commit = true
tag = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\-(?P<release>[a-z]+)(?P<build>\\d+))?"
serialize = [
    "{major}.{minor}.{patch}",
    '{major}.{minor}.{patch}-{release}{build}',
]

[tool.bumpversion.part.release]
values = ["dev", "rc", "final"]
first_value = "dev"
optional_value = "final"

[tool.bumpversion.part.build]
first_value = 1


[[tool.bumpversion.files]]
filename = "pyzefir/__init__.py"
