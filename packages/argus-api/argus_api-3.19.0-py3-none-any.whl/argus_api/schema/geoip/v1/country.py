"""Autogenerated API schema"""
from argus_api import session


add_country = {'tags': ['development'], 'summary': 'Add new country (DEV)', 'description': '', 'operationId': 'addCountry', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'required': False, 'schema': {'type': 'object', 'required': ['countryCode', 'countryName'], 'properties': {'countryCode': {'type': 'str', 'position': 0, 'description': 'The two-letter country-code', 'minLength': 2, 'maxLength': 2}, 'countryName': {'type': 'str', 'position': 0, 'description': 'The name of the country', 'minLength': 0, 'maxLength': 100}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'countryName': {'type': 'str', 'position': 0, 'description': 'The name of the country.'}, 'countryCode': {'type': 'str', 'position': 0, 'description': 'The two-letter country-code.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this country was last updated.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'deleted']}}}, 'description': 'Contains basic data about a country.'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation failed'}}}
list_countries = {'tags': ['/geoip/v1'], 'summary': 'List GeoIP countries (INTERNAL)', 'description': '', 'operationId': 'listCountries', 'produces': ['application/json'], 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Max number of items to return', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'The amount of items to skip from the beginning', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, countryName, countryCode)", 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'fromID', 'in': 'query', 'description': 'Only return countries with numeric ID greater than or equal to this value', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'countryName': {'type': 'str', 'position': 0, 'description': 'The name of the country.'}, 'countryCode': {'type': 'str', 'position': 0, 'description': 'The two-letter country-code.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this country was last updated.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'deleted']}}}, 'description': 'Contains basic data about a country.'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation failed'}}}
search_countries = {'tags': ['/geoip/v1'], 'summary': 'Find GeoIP countries (INTERNAL)', 'description': '', 'operationId': 'searchCountries', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request', 'required': False, 'schema': {'type': 'object', 'properties': {'fromID': {'type': 'int', 'position': 0, 'description': 'Only return countries with IDs greater than or equal to this ID.', 'minimum': 0}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'A set of included enumerated flags of the searched countries.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'A set of excluded enumerated flags of the searched countries.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'If true, also include countries marked as deleted.'}, 'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.', 'minimum': 0}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.', 'minimum': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': "Fields to sort results by (without a sign is ascending, with '-' sign is descending).", 'items': {'type': 'str', 'enum': ['id', 'countryName', 'countryCode', '-id', '-countryName', '-countryCode']}}}, 'description': 'Request to search for countries'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'countryName': {'type': 'str', 'position': 0, 'description': 'The name of the country.'}, 'countryCode': {'type': 'str', 'position': 0, 'description': 'The two-letter country-code.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this country was last updated.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'deleted']}}}, 'description': 'Contains basic data about a country.'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation failed'}}}
update_country = {'tags': ['development'], 'summary': 'Update an existing country (DEV)', 'description': '', 'operationId': 'updateCountry', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Country ID', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'required': False, 'schema': {'type': 'object', 'required': ['countryName'], 'properties': {'countryName': {'type': 'str', 'position': 0, 'description': 'The name of the country', 'minLength': 0, 'maxLength': 100}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'countryName': {'type': 'str', 'position': 0, 'description': 'The name of the country.'}, 'countryCode': {'type': 'str', 'position': 0, 'description': 'The two-letter country-code.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this country was last updated.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'deleted']}}}, 'description': 'Contains basic data about a country.'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation failed'}}}