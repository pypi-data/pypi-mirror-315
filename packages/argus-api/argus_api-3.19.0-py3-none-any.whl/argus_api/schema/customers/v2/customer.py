"""Autogenerated API schema"""
from argus_api import session


get_customer = {'tags': ['customers/v2/customer'], 'summary': 'Returns a Customer identified by its ID or short name. (PUBLIC)', 'description': '', 'operationId': 'getBasicCustomer', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Customer ID or short name', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup short name (defaults to current users domain)', 'required': False, 'type': 'str'}, {'name': 'includeProperties', 'in': 'query', 'description': 'Return with properties', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'includePropertiesWithPrefix', 'in': 'query', 'description': 'Return with properties fetched by prefix', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Set of flags that are on/true for this customer.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'type': 'str', 'parentID': {'type': 'int', 'position': 0, 'description': 'Parent id, can be null, if the customer has no parent.'}, 'timeZone': {'type': 'str', 'position': 0, 'description': "Informs about the customer's time zone"}, 'language': {'type': 'str', 'position': 0, 'description': 'The users chosen language', 'enum': ['norwegian', 'english']}, 'properties': {'type': 'list', 'position': 0, 'description': 'List of properties, that the request specified are to be fetched with the customer object. If no properties were requested, null is returned', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Key of the property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Value of the property (in string format)'}, 'jsonValue': {'type': 'object'}, 'source': {'type': 'str', 'position': 0, 'description': 'Source of the property', 'enum': ['descriptor', 'customer', 'inherited']}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value from the descriptor'}, 'defaultJsonValue': {'type': 'object'}}, 'description': 'Property Descriptor with key, default value, type, and other data.'}}, 'options': ['group', 'leaf']}, 'description': 'Customer response object. Provides basic information about customer'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_customer_logo = {'tags': ['customers/v2/customer'], 'summary': 'Returns a Customer logo by customer shortName or id. (PUBLIC)', 'description': '', 'operationId': 'getBasicCustomerLogo', 'produces': ['image/*'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Customer ID or shortName', 'required': True, 'type': 'str'}, {'name': 'includeDefault', 'in': 'query', 'description': 'Include default logo', 'required': False, 'type': 'bool', 'default': True}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup shortName (defaults to current users domain)', 'required': False, 'type': 'str'}, {'name': 'size', 'in': 'query', 'description': 'The preferred size of the logo (small, medium, large, xlarge). Will resize the logo within the selected size, retaining aspect ratio.', 'required': False, 'type': 'str', 'enum': ['small', 'medium', 'large', 'xlarge']}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_customer_properties = {'tags': ['customers/v2/customer'], 'summary': 'Returns a set of properties for the customer id or shortName by property name. (PUBLIC)', 'description': '', 'operationId': 'getBasicCustomerProperties', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Customer ID or shortName', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup shortname (defaults to current users domain)', 'required': False, 'type': 'str'}, {'name': 'key', 'in': 'query', 'description': 'Filter for specific properties.', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'section', 'in': 'query', 'description': 'Filter for properties in specific sections.', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['general', 'sla', 'analysis', 'aer', 'ama', 'amq', 'ala', 'alc', 'irt', 'securedns', 'policy', 'integrations', 'notification', 'reporting', 'services', 'products', 'authentication', 'other', 'hidden']}, 'collectionFormat': 'multi'}, {'name': 'offset', 'in': 'query', 'description': 'By how many records to offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Key of the property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Value of the property (in string format)'}, 'jsonValue': {'type': 'object'}, 'source': {'type': 'str', 'position': 0, 'description': 'Source of the property', 'enum': ['descriptor', 'customer', 'inherited']}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value from the descriptor'}, 'defaultJsonValue': {'type': 'object'}}, 'description': 'Property Descriptor with key, default value, type, and other data.'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_customer_user_roles = {'tags': ['customers/v2/customer'], 'summary': 'Returns a set of User roles for the customer id or shortName. (PUBLIC)', 'description': '', 'operationId': 'getBasicCustomerUserRoles', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Customer ID or shortName', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Customer domain to lookup user (defaults to current users domain)', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'role': {'type': 'str', 'position': 0, 'description': 'The role for this user.', 'enum': ['technicalAccountManager', 'logManager', 'networkManager', 'tiManager', 'keyAccountManager', 'trsAccountManager', 'cvmAccountManager', 'msiAccountManager']}}, 'description': 'UserRole response object. Provides basic information about which users have important roles assigned.'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_customers = {'tags': ['customers/v2/customer'], 'summary': 'Returns customers defined by query parameters (PUBLIC)', 'description': '', 'operationId': 'listBasicCustomers', 'produces': ['application/json'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'By how many records to offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'parent', 'in': 'query', 'description': 'Search by parent id or shortName', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'includeProperties', 'in': 'query', 'description': 'Return with properties', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'includePropertiesWithPrefix', 'in': 'query', 'description': 'Return with properties fetched by prefix', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'relevance -id', '-name', '-shortName', '-relevance']}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Set of flags that are on/true for this customer.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'type': 'str', 'parentID': {'type': 'int', 'position': 0, 'description': 'Parent id, can be null, if the customer has no parent.'}, 'timeZone': {'type': 'str', 'position': 0, 'description': "Informs about the customer's time zone"}, 'language': {'type': 'str', 'position': 0, 'description': 'The users chosen language', 'enum': ['norwegian', 'english']}, 'properties': {'type': 'list', 'position': 0, 'description': 'List of properties, that the request specified are to be fetched with the customer object. If no properties were requested, null is returned', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Key of the property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Value of the property (in string format)'}, 'jsonValue': {'type': 'object'}, 'source': {'type': 'str', 'position': 0, 'description': 'Source of the property', 'enum': ['descriptor', 'customer', 'inherited']}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value from the descriptor'}, 'defaultJsonValue': {'type': 'object'}}, 'description': 'Property Descriptor with key, default value, type, and other data.'}}, 'options': ['group', 'leaf']}, 'description': 'Customer response object. Provides basic information about customer'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_customers = {'tags': ['customers/v2/customer'], 'summary': 'Returns customers defined by SearchBasicCustomerRequest (PUBLIC)', 'description': '', 'operationId': 'searchBasicCustomers', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Restrict search to specified customers.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ancestor': {'type': 'list', 'position': 0, 'description': 'Search for customers by ancestor customer id or shortname. Will return customers that descend from any of these parents.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'parent': {'type': 'list', 'position': 0, 'description': 'Search for customers by parent customer id or shortname. Will return customers that are direct children of any of these parents.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Search for customers in one of these domains (by domain id or name).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeProperties': {'type': 'list', 'position': 0, 'description': 'Include properties matching one of the specified keys. Only properties specified here, or by "includePropertiesWithPrefix" will be returned. (default null)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includePropertiesWithPrefix': {'type': 'list', 'position': 0, 'description': 'Include properties matching one of the prefixes specified. Only properties specified by prefix, or by "includeProperties" will be returned. (default null)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': "Only include objects which have includeFlags set. For 'deleted' use the dedicated field", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': "Exclude objects which have excludeFlags set. For 'deleted' use the dedicated field", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for customers by keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'type': {'type': 'list', 'position': 0, 'description': 'Search for customers by type.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['group', 'leaf']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'all']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Restrict search to specified customers.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ancestor': {'type': 'list', 'position': 0, 'description': 'Search for customers by ancestor customer id or shortname. Will return customers that descend from any of these parents.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'parent': {'type': 'list', 'position': 0, 'description': 'Search for customers by parent customer id or shortname. Will return customers that are direct children of any of these parents.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Search for customers in one of these domains (by domain id or name).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeProperties': {'type': 'list', 'position': 0, 'description': 'Include properties matching one of the specified keys. Only properties specified here, or by "includePropertiesWithPrefix" will be returned. (default null)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includePropertiesWithPrefix': {'type': 'list', 'position': 0, 'description': 'Include properties matching one of the prefixes specified. Only properties specified by prefix, or by "includeProperties" will be returned. (default null)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': "Only include objects which have includeFlags set. For 'deleted' use the dedicated field", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': "Exclude objects which have excludeFlags set. For 'deleted' use the dedicated field", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for customers by keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'type': 'list', 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'all']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Restrict search to specified customers.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ancestor': {'type': 'list', 'position': 0, 'description': 'Search for customers by ancestor customer id or shortname. Will return customers that descend from any of these parents.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'parent': {'type': 'list', 'position': 0, 'description': 'Search for customers by parent customer id or shortname. Will return customers that are direct children of any of these parents.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Search for customers in one of these domains (by domain id or name).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeProperties': {'type': 'list', 'position': 0, 'description': 'Include properties matching one of the specified keys. Only properties specified here, or by "includePropertiesWithPrefix" will be returned. (default null)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includePropertiesWithPrefix': {'type': 'list', 'position': 0, 'description': 'Include properties matching one of the prefixes specified. Only properties specified by prefix, or by "includeProperties" will be returned. (default null)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': "Only include objects which have includeFlags set. For 'deleted' use the dedicated field", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': "Exclude objects which have excludeFlags set. For 'deleted' use the dedicated field", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for customers by keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'type': 'list', 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields).', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'all']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria', 'uniqueItems': True, 'items': []}, 'required': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If true the search is AND-ed'}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If true the search is NOT-ed'}}, 'description': 'Request defining if sub-criteria should be included or excluded'}}, 'required': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If true the search is AND-ed'}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If true the search is NOT-ed'}}, 'description': 'Request defining if sub-criteria should be included or excluded'}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.', 'minimum': 0}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.', 'minimum': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field to sort result by, use - to sort in desc order. (default id)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'relevance', '-id', '-name', '-shortName', '-relevance']}}}, 'description': 'Main search request object defining limit and offset and sort options.'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Set of flags that are on/true for this customer.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['disabled', 'denySubmitForAnonymousUser', 'allowGlobalData', 'excludeFromProduction', 'networkBaseCustomer', 'singleNetworkDomain', 'customerDataDeleted', 'rootCustomerGroup']}}, 'type': 'str', 'parentID': {'type': 'int', 'position': 0, 'description': 'Parent id, can be null, if the customer has no parent.'}, 'timeZone': {'type': 'str', 'position': 0, 'description': "Informs about the customer's time zone"}, 'language': {'type': 'str', 'position': 0, 'description': 'The users chosen language', 'enum': ['norwegian', 'english']}, 'properties': {'type': 'list', 'position': 0, 'description': 'List of properties, that the request specified are to be fetched with the customer object. If no properties were requested, null is returned', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Key of the property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Value of the property (in string format)'}, 'jsonValue': {'type': 'object'}, 'source': {'type': 'str', 'position': 0, 'description': 'Source of the property', 'enum': ['descriptor', 'customer', 'inherited']}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value from the descriptor'}, 'defaultJsonValue': {'type': 'object'}}, 'description': 'Property Descriptor with key, default value, type, and other data.'}}, 'options': ['group', 'leaf']}, 'description': 'Customer response object. Provides basic information about customer'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}