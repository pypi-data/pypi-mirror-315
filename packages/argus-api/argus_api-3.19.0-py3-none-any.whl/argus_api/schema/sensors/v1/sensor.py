"""Autogenerated API schema"""
from argus_api import session


acknowledge_sensor = {'tags': ['sensors/v1'], 'summary': 'Acknowledge a sensor by its ID (INTERNAL)', 'description': '', 'operationId': 'acknowledgeSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to acknowledge', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Sensor acknowledgement request', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to acknowledge a single Sensor'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
acknowledge_sensors = {'tags': ['sensors/v1'], 'summary': 'Acknowledge Sensors by their ID Any comment will be applied to ALL specified sensors. (INTERNAL)', 'description': '', 'operationId': 'acknowledgeSensors', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'ID of sensors to acknowledge', 'required': True, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi', 'maxItems': 2147483647, 'minItems': 1}, {'in': 'body', 'name': 'body', 'description': 'Sensor acknowledge bulk request', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to bulk acknowledge Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
add_comment = {'tags': ['sensors/v1'], 'summary': 'Add comment to a sensor (INTERNAL)', 'description': '', 'operationId': 'addComment', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'SensorID', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'AddSensorCommentRequest', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comments to append to the request'}}, 'description': 'Request to add a comment to a single Sensor'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
bulk_cancel_sensor_downtime = {'tags': ['sensors/v1'], 'summary': 'Cancels downtime for supplied sensorIDs (INTERNAL)', 'description': '', 'operationId': 'bulkCancelSensorDowntime', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'Cancel downtime for these Sensor IDs', 'required': True, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi', 'maxItems': 2147483647, 'minItems': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
bulk_schedule_sensor_downtime = {'tags': ['sensors/v1'], 'summary': 'Schedules downtime for provided sensorIDs (INTERNAL)', 'description': '', 'operationId': 'bulkScheduleSensorDowntime', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Bulk downtime request for a set of Sensors.', 'required': False, 'schema': {'type': 'object', 'properties': {'fromTime': {'type': 'int', 'position': 0, 'description': 'Timestamp in epoch ms from which the requested change takes effect. (default now)', 'minimum': 0}, 'toTime': {'type': 'int', 'position': 0, 'description': 'Timestamp in epoch ms until which the requested change takes effect.', 'minimum': 0}, 'keepDowntimeOnUpdate': {'type': 'bool', 'position': 0, 'description': 'Flag to maintain existing downtime configurations. \nIf set, downtime will not automatically end when the Sensor registers a new event.'}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of the Sensors for which we want to schedule downtime.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}}, 'description': 'Request to schedule downtime for several Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
bulk_update_contractual_status = {'tags': ['sensors/v1'], 'summary': "Update Sensors' contractual statusAny comment will be applied to ALL specified sensors.The operation will only return Sensors that were actually updated. (INTERNAL)", 'description': '', 'operationId': 'bulkUpdateContractualStatus', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Sensor update initial tuning request', 'required': False, 'schema': {'type': 'object', 'required': ['contractual', 'sensorIDs'], 'properties': {'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors to remove acknowledgement.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}, 'contractual': {'type': 'bool', 'position': 0, 'description': "Whether to set or unset the Sensors' contractual status"}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': "Request to update multiple Sensors' contractual status"}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
bulk_update_expected_update_interval = {'tags': ['sensors/v1'], 'summary': "Update Sensors' expected update time intervals\nAny comment will be applied to ALL specified sensors.\n The operation will only return Sensors that were actually updated.\n (INTERNAL)", 'description': '', 'operationId': 'bulkUpdateExpectedUpdateInterval', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Sensor update expected update interval request', 'required': False, 'schema': {'type': 'object', 'required': ['sensorIDs'], 'properties': {'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors whose expected update time interval we want to update.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}, 'expectedUpdateTimeIntervalMillis': {'type': 'int', 'position': 0, 'description': 'The new expected update time interval in milliseconds', 'minimum': 1}, 'overrideUpdateTimeFlag': {'type': 'bool', 'position': 0, 'description': 'Whether to set the override update time flag on sensors lacking it in the request'}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comments to append to the request\nNB: Each Sensor specified in the request will receive the same comment.\nIf not specified the service will generate a generic one.\n => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': "Request to update multiple Sensors' expected update interval"}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
bulk_update_initial_tuning = {'tags': ['sensors/v1'], 'summary': 'Bulk updating initial tuning property for Sensors by their IDs. If provided any comment will be applied to ALL updated sensors. (INTERNAL)', 'description': '', 'operationId': 'bulkUpdateInitialTuning', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'ID of sensors to remove acknowledgement', 'required': True, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi', 'maxItems': 2147483647, 'minItems': 1}, {'name': 'initialTuning', 'in': 'query', 'description': 'Desired new Sensor initial tuning status', 'required': True, 'type': 'bool'}, {'in': 'body', 'name': 'body', 'description': 'Update initial tuning bulk request', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
cancel_sensor_downtime = {'tags': ['sensors/v1'], 'summary': 'Cancels downtime for supplied sensorID (INTERNAL)', 'description': '', 'operationId': 'cancelSensorDowntime', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
cluster_sensor = {'tags': ['sensors/v1'], 'summary': 'Cluster sensor (INTERNAL)', 'description': '', 'operationId': 'clusterSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to cluster', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Sensor cluster request', 'required': False, 'schema': {'type': 'object', 'required': ['clusterSensorID'], 'properties': {'clusterSensorID': {'type': 'int', 'position': 0, 'description': 'Sensor with which we want to cluster', 'minimum': 1}}, 'description': 'Request to cluster an existing Sensor with another one'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
create_sensor = {'tags': ['sensors/v1'], 'summary': 'Creates a Sensor (INTERNAL)', 'description': '', 'operationId': 'createSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Create request for Sensor', 'required': False, 'schema': {'type': 'object', 'required': ['application', 'customer', 'location'], 'properties': {'sslTerminating': {'type': 'boolean'}, 'location': {'type': 'str', 'position': 0, 'description': 'Sensor Location ID or short name. The Location must be Global or belong to the same Customer as this Sensor.'}, 'customer': {'type': 'str', 'position': 0, 'description': 'Sensor Customer ID or short name'}, 'application': {'type': 'str', 'position': 0, 'description': 'Sensor type ID or short name'}, 'clusterSensorID': {'type': 'int', 'position': 0, 'description': 'ID of the Sensor this new Sensor will be clustered with. 0 if unclustered. (default 0)', 'minimum': 0, 'default': 0}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': 'When the Sensor is expected to be updated, 0 if not known/never (default 0)', 'minimum': 0, 'default': 0}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': 'Time from which the Sensor will be offline, 0 if not scheduled (default 0)', 'minimum': 0, 'default': 0}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': 'Time until which the Sensor will be offline, 0 if not scheduled (default 0)', 'minimum': 0, 'default': 0}, 'information': {'type': 'str', 'position': 0, 'description': 'Sensor information'}, 'hostname': {'type': 'str', 'position': 0, 'description': "Sensor hostname. One of hostname or ipAddresss must be defined.\nAttempts to create a Sensor with a duplicate hostname for the same customer will be rejected.\nIf you need to make a Sensor with a duplicate hostname ensure the additional data field's contents are unique.\n => Sanitize by regex ([\\p{Alnum}\\._-]+)"}, 'ipAddress': {'type': 'str', 'position': 0, 'description': "Sensor's IP address, one of hostname or ipAddress must be assigned\nAttempts to create a Sensor with a duplicate IP address for the same customer will be rejected.\nIf you need to make a Sensor with a duplicate IP address ensure the additional data field's contents are unique.\n => format:ip"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Sensor active flag (default false)', 'default': False}, 'monitored': {'type': 'bool', 'position': 0, 'description': 'Sensor monitored flag (default false)', 'default': False}, 'monitoredOnlyDaytime': {'type': 'bool', 'position': 0, 'description': 'Sensor is monitored only daytime flag (default false)', 'default': False}, 'initialTuning': {'type': 'bool', 'position': 0, 'description': "Sensor's initial tuning status (default false)", 'default': False}, 'overrideDefaultUpdateTime': {'type': 'bool', 'position': 0, 'description': 'Override default update time (default false)', 'default': False}, 'sharedCustomerData': {'type': 'bool', 'position': 0, 'description': "Sensor's shared customer data flag (default false)", 'default': False}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "If specified overwrite the ReportingSeverity level for this Sensor's Application", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'contractual': {'type': 'bool', 'position': 0, 'description': "Whether the Sensor contributes to the customer's contractual Sensor limit (default false)", 'default': False}}, 'description': 'Request to create a new Sensor'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
create_sensor_interface = {'tags': ['sensors/v1'], 'summary': 'Adds an interface to a sensor (INTERNAL)', 'description': '', 'operationId': 'createSensorInterface', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to which we want to add the interface', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Add request for sensor interface', 'required': False, 'schema': {'type': 'object', 'required': ['interfaceName', 'location'], 'properties': {'interfaceName': {'type': 'str', 'position': 0, 'description': 'Name of the Sensor Interface. Must be unique per Sensor. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'location': {'type': 'str', 'position': 0, 'description': "Location ID or short name of the Sensor's Interface."}, 'active': {'type': 'bool', 'position': 0, 'description': 'Status of the Sensor Interface (default false)', 'default': False}, 'customer': {'type': 'str', 'position': 0, 'description': "Customer id or shortname of the Interface.If neither the Interface nor Sensor's Location is Global, the Interface and Sensor Customer must be the sameunless the shared data flag is set on the Sensor (default null)"}, 'comment': {'type': 'str', 'position': 0, 'description': 'Comment describing why the Interface was added'}, 'sslTerminating': {'type': 'bool', 'position': 0, 'description': "Interface's SSL terminating flag (default false)", 'default': False}}, 'description': 'Request to create a new Interface on an existing Sensor'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
decluster_sensor = {'tags': ['sensors/v1'], 'summary': 'Decluster sensor (INTERNAL)', 'description': '', 'operationId': 'declusterSensor', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to decluster', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_interface = {'tags': ['sensors/v1'], 'summary': "Deletes one of a Sensor's interfaces by its ID or name (INTERNAL)", 'description': '', 'operationId': 'deleteInterface', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to which the interface belongs', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'interface', 'in': 'path', 'description': 'ID of the interface', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Sensor, Interface, or Location not found'}, '412': {'description': 'Validation error'}}}
delete_sensor = {'tags': ['sensors/v1'], 'summary': 'Delete sensor by ID (INTERNAL)', 'description': '', 'operationId': 'deleteSensor', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to delete', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_sensor_comment = {'tags': ['sensors/v1'], 'summary': 'Deletes a comment (INTERNAL)', 'description': '', 'operationId': 'deleteSensorComment', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'Delete comment from this sensor', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'timestamp', 'in': 'path', 'description': 'Delete comment made at this timestamp', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_sensors = {'tags': ['sensors/v1'], 'summary': 'Delete sensors by ID (INTERNAL)', 'description': '', 'operationId': 'deleteSensors', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Sensor deletion bulk request', 'required': False, 'schema': {'type': 'object', 'required': ['sensorIDs'], 'properties': {'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors we want to update.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
disable_monitoring = {'tags': ['sensors/v1'], 'summary': 'Disable sensor monitoring (INTERNAL)', 'description': '', 'operationId': 'disableMonitoring', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID for sensor to disable monitoring', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
disable_monitoring_bulk = {'tags': ['sensors/v1'], 'summary': 'Bulk disable sensor monitoring (INTERNAL)', 'description': '', 'operationId': 'disableMonitoringBulk', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request containing list of sensorIDs to disable monitoring', 'required': False, 'schema': {'type': 'object', 'required': ['sensorIDs'], 'properties': {'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors whose monitoring we want to update.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to disable monitoring for several Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
disable_sensor = {'tags': ['sensors/v1'], 'summary': 'Deactivates a sensor (INTERNAL)', 'description': '', 'operationId': 'disableSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
disable_sensors = {'tags': ['sensors/v1'], 'summary': 'Bulk deactivation of Sensors (INTERNAL)', 'description': '', 'operationId': 'disableSensors', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Bulk deactivation request for a list of Sensors.', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors to deactivate.', 'uniqueItems': True, 'items': {'type': 'int'}}}, 'description': 'Request to bulk disable Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
enable_monitoring = {'tags': ['sensors/v1'], 'summary': "Enable sensor monitoring. To set daytime only monitoring use the 'daytime' queryParm. (INTERNAL)", 'description': '', 'operationId': 'enableMonitoring', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID for sensor to enable monitoring', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'daytime', 'in': 'query', 'description': 'Daytime only monitoring flag', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
enable_monitoring_bulk = {'tags': ['sensors/v1'], 'summary': "Bulk enable sensor monitoring. To set daytime only monitoring use the 'daytime' queryParm. (INTERNAL)", 'description': '', 'operationId': 'enableMonitoringBulk', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request containing list of sensorIDs to disable monitoring', 'required': False, 'schema': {'type': 'object', 'required': ['sensorIDs'], 'properties': {'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors whose monitoring we want to update.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to enable monitoring for several Sensors'}}, {'name': 'daytime', 'in': 'query', 'description': 'Daytime only monitoring flag', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
enable_sensor = {'tags': ['sensors/v1'], 'summary': 'Activates a sensor (INTERNAL)', 'description': '', 'operationId': 'enableSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
enable_sensors = {'tags': ['sensors/v1'], 'summary': 'Bulk activation of sensors (INTERNAL)', 'description': '', 'operationId': 'enableSensors', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Bulk activation request for a list of Sensors.', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors to activate.', 'uniqueItems': True, 'items': {'type': 'int'}}}, 'description': 'Request to bulk enable Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_interface = {'tags': ['sensors/v1'], 'summary': "Gets one of a Sensor's interfaces (INTERNAL)", 'description': '', 'operationId': 'getInterface', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to which the interface belongs', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'interfaceNameOrID', 'in': 'path', 'description': 'ID or name of the Interface', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Sensor or Interface not found'}, '412': {'description': 'Validation error'}}}
get_sensor = {'tags': ['sensors/v1'], 'summary': 'Fetch sensor by ID (INTERNAL)', 'description': '', 'operationId': 'getSensor', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to fetch', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_sensor_comment = {'tags': ['sensors/v1'], 'summary': 'Fetch comment by timestamp for sensor (INTERNAL)', 'description': '', 'operationId': 'getSensorComment', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'SensorID', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'timestamp', 'in': 'path', 'description': 'Timestamp', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_sensor_comments = {'tags': ['sensors/v1'], 'summary': 'Fetch sensor comments by sensor ID (INTERNAL)', 'description': '', 'operationId': 'getSensorComments', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to fetch comments for', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'deprecated': True, 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_sensor_status_by_sensor = {'tags': ['sensors/v1'], 'summary': 'Gets status for a sensor (INTERNAL)', 'description': '', 'operationId': 'getSensorStatusBySensor', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor whose status we want to fetch', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'lastEventTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp for the last event registered by the sensor.'}, 'lastUpdateTimestamp': {'type': 'int', 'position': 0, 'description': 'Latest timestamp when the sensor status was updated.'}, 'lastAnalyzedTimestamp': {'type': 'int', 'position': 0, 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.'}, 'messageRate': {'type': 'float', 'position': 0, 'description': 'Count per second of events throughput for the sensor (since last report).'}, 'lastAgentHost': {'type': 'str', 'position': 0, 'description': 'Host name/Container name of reporting sensor.'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['SENSOR_IS_REPORTING', 'CLUSTER_IS_REPORTING', 'CLOCK_OUT_OF_SYNC']}}}, 'description': "Sensor Status SPI model class for a Sensor's Status"}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}}}
get_sensors = {'tags': ['sensors/v1'], 'summary': 'List sensors (INTERNAL)', 'description': '', 'operationId': 'listSensors', 'produces': ['application/json', 'text/csv', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], 'parameters': [{'name': 'Accept', 'in': 'header', 'required': False, 'type': 'string'}, {'name': 'customerID', 'in': 'query', 'description': 'Limit search to these customer IDs', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'customer', 'in': 'query', 'description': 'Limit search to these customer ids or shortname', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'applicationName', 'in': 'query', 'description': 'Limit search to these applications by name', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Limit search by sensor hostname or IP address', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'minExpectedUpdateTime', 'in': 'query', 'description': 'Filter by sensors with expectedUpdateTime at least this value in millis', 'required': False, 'type': 'int'}, {'name': 'maxExpectedUpdateTime', 'in': 'query', 'description': 'Filter by sensors with expectedUpdateTime at most this value in millis', 'required': False, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_sensor_comments = {'tags': ['sensors/v1'], 'summary': 'Fetch comments for sensor (INTERNAL)', 'description': '', 'operationId': 'listSensorComments', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'SensorID', 'required': True, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_sensor_interfaces = {'tags': ['sensors/v1'], 'summary': "Gets a Sensor's interfaces (INTERNAL)", 'description': '', 'operationId': 'listSensorInterfaces', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the sensor to which the interface belongs', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Sensor not found'}, '412': {'description': 'Validation error'}}}
remove_acknowledgement_sensor = {'tags': ['sensors/v1'], 'summary': 'Remove acknowledgement for a sensor by its ID.  (INTERNAL)', 'description': '', 'operationId': 'removeAcknowledgementSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to remove acknowledgment', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Sensor remove acknowledgement request', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to un-acknowledge a single Sensor'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
remove_acknowledgement_sensors = {'tags': ['sensors/v1'], 'summary': 'Bulk remove acknowledgement for Sensors by their IDs. Any comment will be applied to ALL specified sensors. (INTERNAL)', 'description': '', 'operationId': 'removeAcknowledgementSensors', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'query', 'description': 'ID of sensors to remove acknowledgement', 'required': True, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi', 'maxItems': 2147483647, 'minItems': 1}, {'in': 'body', 'name': 'body', 'description': 'Sensor remove acknowledgement bulk request', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comments to append to the request. NB: Each Sensor specified in the request will receive the same comment. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to bulk un-acknowledge Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
restore_sensor = {'tags': ['sensors/v1'], 'summary': 'Restore sensor by ID (INTERNAL)', 'description': '', 'operationId': 'restoreSensor', 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to restore', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Sensor restoration request', 'required': False, 'schema': {'type': 'object', 'properties': {'enable': {'type': 'bool', 'position': 0, 'description': 'Whether to enable the Sensor at the same time as restoring it. (default false)', 'default': False}}, 'description': 'Request to restore an existing deleted Sensor'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
restore_sensors = {'tags': ['sensors/v1'], 'summary': 'Restore sensors by ID (INTERNAL)', 'description': '', 'operationId': 'restoreSensors', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Sensor restoration bulk request', 'required': False, 'schema': {'type': 'object', 'required': ['sensorIDs'], 'properties': {'sensorIDs': {'type': 'list', 'position': 0, 'description': 'IDs of Sensors we want to update.', 'uniqueItems': True, 'items': {'type': 'int'}, 'maxItems': 2147483647, 'minItems': 1}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'enable': {'type': 'bool', 'position': 0, 'description': 'Whether to enable the Sensors at the same time as restoring them. (default false)', 'default': False}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
schedule_sensor_downtime = {'tags': ['sensors/v1'], 'summary': 'Schedules downtime for supplied sensorID (INTERNAL)', 'description': '', 'operationId': 'scheduleSensorDowntime', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Downtime request for a single sensor.', 'required': False, 'schema': {'type': 'object', 'properties': {'fromTime': {'type': 'int', 'position': 0, 'description': 'Timestamp in epoch ms from which the requested change takes effect. (default now)', 'minimum': 0}, 'toTime': {'type': 'int', 'position': 0, 'description': 'Timestamp in epoch ms until which the requested change takes effect.', 'minimum': 0}, 'keepDowntimeOnUpdate': {'type': 'bool', 'position': 0, 'description': 'Flag to maintain existing downtime configurations. \nIf set, downtime will not automatically end when the Sensor registers a new event.'}, 'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to schedule downtime for a single Sensor'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_sensors = {'tags': ['sensors/v1'], 'summary': 'Search sensors (INTERNAL)', 'description': '', 'operationId': 'searchSensors', 'consumes': ['application/json'], 'produces': ['application/json', 'text/csv', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], 'parameters': [{'name': 'Accept', 'in': 'header', 'required': False, 'type': 'string'}, {'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'xml': {'attribute': True}, 'position': 0, 'description': 'Limit results'}, 'offset': {'type': 'int', 'xml': {'attribute': True}, 'position': 0, 'description': 'Offset results'}, 'includeDeleted': {'type': 'bool', 'xml': {'attribute': True}, 'position': 0, 'description': 'Also include deleted objects (where implemented)'}, 'customerID': {'type': 'list', 'xml': {'name': 'Customers', 'wrapped': True}, 'position': 0, 'description': 'Limit result to objects belonging to these customers', 'uniqueItems': True, 'items': {'type': 'int', 'xml': {'name': 'CustomerID'}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for sensors matching these hostnames or IP-addresses', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strictly different keywords should be matched (default match any keywords) (default any)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (defaults to all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'ipAddress', 'hostname', 'additionalData', 'id']}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Search for sensors belonging to customers identified by their ID or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['all', 'any']}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['scheduledDowntimeFromTime', 'scheduledDowntimeUntilTime', 'lastAcknowledgedTimestamp', 'lastUpdatedTimestamp', 'createdTimestamp', 'deletedTimestamp', 'all']}}, 'minExpectedUpdateTimeInterval': {'type': 'int', 'position': 0, 'description': 'Filter sensors by min expected update time interval in millis'}, 'maxExpectedUpdateTimeInterval': {'type': 'int', 'position': 0, 'description': 'Filter sensors by max expected update time interval in millis'}, 'startTimestamp': {'type': 'int', 'xml': {'attribute': True}, 'position': 0, 'description': 'Search objects from this timestamp'}, 'endTimestamp': {'type': 'int', 'xml': {'attribute': True}, 'position': 0, 'description': 'Search objects until this timestamp'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Order results by these properties (prefix with - to sort descending)', 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Search objects with these flags set', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects with these flags set', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'sensorID': {'type': 'list', 'position': 0, 'description': 'Search for specific sensors by ID', 'uniqueItems': True, 'items': {'type': 'int'}}, 'locationName': {'type': 'list', 'position': 0, 'description': 'DEPRECATED: Use location instead.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'applicationName': {'type': 'list', 'position': 0, 'description': 'Search for sensors by application type', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for Sensors'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
submit_sensor_status_bulk = {'tags': ['sensors/v1'], 'summary': 'Submit sensor status records in a bulk operation (INTERNAL)', 'description': '', 'operationId': 'submitSensorStatusBulk', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Sensor status bulk submission request', 'required': False, 'schema': {'type': 'object', 'required': ['records'], 'properties': {'records': {'type': 'list', 'position': 0, 'description': 'Sensor status records for submission', 'items': {'type': 'dict', 'required': ['sensorCustomer', 'sensorID'], 'properties': {'sensorID': {'type': 'int', 'position': 0, 'description': 'Sensor which the status belongs to.', 'minimum': 1}, 'sensorCustomer': {'type': 'str', 'position': 0, 'description': 'Customer of reporting sensor. Can be customer ID or shortName.'}, 'lastAgentHost': {'type': 'str', 'position': 0, 'description': 'Host name/Container name of reporting sensor.'}, 'lastEventTimestamp': {'type': 'int', 'position': 0, 'description': 'Latest event timestamp encountered by agents for the sensor.', 'minimum': 0}, 'lastUpdateTimestamp': {'type': 'int', 'position': 0, 'description': 'Latest timestamp when the sensor status was updated.', 'minimum': 0}, 'lastAnalyzedTimestamp': {'type': 'int', 'position': 0, 'description': 'Latest timestamp when the analyzer encountered an event for the sensor.', 'minimum': 0}, 'messageRate': {'type': 'float', 'position': 0, 'description': 'Count per second of events throughput for the sensor (since last report).', 'minimum': 0}, 'clockOutOfSync': {'type': 'bool', 'position': 0, 'description': 'Determines whether the event timestamp was in future when registered for the sensor status. (default false)', 'default': False}}}, 'maxItems': 2147483647, 'minItems': 1}, 'ignoreOnFailed': {'type': 'bool', 'position': 0, 'description': 'If set to true submitted records with errors will be discarded and all remaining records will be processed. If set to false errors will fail the whole request. (default false)', 'default': False}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'accepted': {'type': 'int', 'position': 0, 'description': 'Number of successfully submitted records.'}, 'rejected': {'type': 'int', 'position': 0, 'description': 'Number of records that failed validation.'}, 'errorInformationList': {'type': 'list', 'position': 0, 'description': 'Information regarding any records that were rejected during validation.', 'items': {'type': 'dict', 'properties': {'submissionIndex': {'type': 'int', 'position': 0, 'description': 'Index of the submission as it appears in the submission request.'}, 'errorMessages': {'type': 'list', 'position': 0, 'description': 'String message of error cause.', 'items': {'type': 'string'}}}}}}}}}}, '401': {'description': 'Authentication failed'}, '412': {'description': 'Validation failed'}}}
update_initial_tuning = {'tags': ['sensors/v1'], 'summary': 'Update initial tuning property for a Sensor. (INTERNAL)', 'description': '', 'operationId': 'updateInitialTuning', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to change initial tuning status', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'initialTuning', 'in': 'query', 'description': 'Desired new Sensor initial tuning status', 'required': True, 'type': 'bool'}, {'in': 'body', 'name': 'body', 'description': 'Sensor update initial tuning request', 'required': False, 'schema': {'type': 'object', 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Any comment to append to the request. If not specified the service will generate a generic one. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
update_interface = {'tags': ['sensors/v1'], 'summary': 'Update Interface by ID (INTERNAL)', 'description': '', 'operationId': 'updateInterface', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of the Sensor to which the Interface belongs', 'required': True, 'type': 'int', 'minimum': 1}, {'name': 'interface', 'in': 'path', 'description': 'ID of the Interface we want to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Interface update request', 'required': False, 'schema': {'type': 'object', 'properties': {'sslTerminating': {'type': 'boolean'}, 'newInterfaceName': {'type': 'str', 'position': 0, 'description': 'New name of the Sensor Interface. Must be unique per Sensor. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'location': {'type': 'str', 'position': 0, 'description': 'New Location ID or short name of the Sensor Interface.'}, 'active': {'type': 'bool', 'position': 0, 'description': 'New Status of the Sensor interface'}}, 'description': 'Request to update an existing Interface on an existing Sensor'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_sensor = {'tags': ['sensors/v1'], 'summary': 'Update sensor by ID (INTERNAL)', 'description': '', 'operationId': 'updateSensor', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'sensorID', 'in': 'path', 'description': 'ID of sensor to update', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Sensor update request', 'required': False, 'schema': {'type': 'object', 'properties': {'location': {'type': 'str', 'position': 0, 'description': "ID or shortname of the Sensor's location"}, 'clusterSensorID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Please use the dedicated clustering endpoint(s) instead.', 'minimum': 0}, 'information': {'type': 'str', 'position': 0, 'description': 'Sensor information'}, 'hostname': {'type': 'str', 'position': 0, 'description': "Sensor hostname.\nUnless the Sensor's additional data is unique the hostname must also be unique for its owning customer.\nIf removing the hostname the Sensor must have a valid IP address.\n => Sanitize by regex ([\\p{Alnum}\\._-]+)"}, 'ipAddress': {'type': 'str', 'position': 0, 'description': "Sensor's IP address.\nUnless the Sensor's additional data is unique the IP address must also be unique for its owning customer.\nIf removing the IP address the Sensor must have a valid IP address.\n => format:ip"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Additional identifier'}, 'application': {'type': 'str', 'position': 0, 'description': 'ID or shortname of Sensor type'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': 'Expected updated time, only set if overrideDefaultUpdateTime is true', 'minimum': 1}, 'initialTuning': {'type': 'bool', 'position': 0, 'description': "Sensor's initial tuning status (default null)", 'default': False}, 'overrideDefaultUpdateTime': {'type': 'bool', 'position': 0, 'description': "Sensor's override default update time flag (default null)", 'default': False}, 'sharedCustomerData': {'type': 'bool', 'position': 0, 'description': "Sensor's shared customer data flag (default null)", 'default': False}, 'sslTerminating': {'type': 'bool', 'position': 0, 'description': "Sensor's SSL terminating flag (default null)", 'default': False}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "If specified overwrite the ReportingSeverity level for this Sensor's Application", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'contractual': {'type': 'bool', 'position': 0, 'description': "Whether the Sensor contributes to the customer's contractual Sensor limit (default null)", 'default': False}}, 'description': 'Request to update an existing Sensor'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'inScheduledDowntime': {'type': 'boolean'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'clusterSensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'expectedUpdateTime': {'type': 'int', 'position': 0, 'description': "The Sensor's expected reporting interval"}, 'scheduledDowntimeFromTime': {'type': 'int', 'position': 0, 'description': "The start of the Sensor's scheduled downtime"}, 'scheduledDowntimeUntilTime': {'type': 'int', 'position': 0, 'description': "The end of the Sensor's scheduled downtime"}, 'information': {'type': 'str', 'position': 0, 'description': 'Any information about the Sensor'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's IP hostname, if available"}, 'additionalData': {'type': 'str', 'position': 0, 'description': 'Any additional data about the Sensor'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ACTIVE', 'MONITORED', 'DELETED', 'OVERRIDE_UPDATE_TIME', 'MONITORED_ONLY_DAYTIME', 'SHARED_CUSTOMER_DATA', 'ACKNOWLEDGED', 'KEEP_DOWNTIME_ON_UPDATE', 'CLOCK_OUT_OF_SYNC', 'INITIAL_TUNING', 'IN_SCHEDULED_DOWNTIME', 'SSL_TERMINATING', 'CONTRACTUAL']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last updated'}, 'lastAcknowledgedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was last acknowledged'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was created'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the Sensor was deleted'}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'Any active Interfaces attached to the Sensor', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': "The Interface's ID"}, 'interfaceName': {'type': 'str', 'position': 0, 'description': "The Interface's name, must be unique per Sensor"}, 'customerID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated. Use `customerInfo` instead.'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'active': {'type': 'bool', 'position': 0, 'description': 'Whether the Interface is active'}, 'flags': {'type': 'int', 'position': 0, 'description': 'Flags of the Interface'}, 'sensor': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'hostname': {'type': 'str', 'position': 0, 'description': "The Sensor's hostname, if available"}, 'application': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ipaddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'description': 'A simplified representation of a Sensor containing some basic information'}, 'location': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'timeZone': {'type': 'string'}}}}, 'description': 'Interface SPI model class for a Sensor Interface'}}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'The reporting severity of the Sensor, especially relevant for its Status', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Sensor SPI model class'}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
#: "list_sensors_1" is an alias for "get_sensors"
list_sensors_1 = get_sensors
#: "get_sensor_1" is an alias for "get_sensor"
get_sensor_1 = get_sensor
#: "get_comment" is an alias for "list_sensor_comments"
get_comment = list_sensor_comments
#: "get_comment_1" is an alias for "get_sensor_comment"
get_comment_1 = get_sensor_comment
#: "get_interface_1" is an alias for "get_interface"
get_interface_1 = get_interface
#: "get_sensor_status" is an alias for "get_sensor_status_by_sensor"
get_sensor_status = get_sensor_status_by_sensor