"""Autogenerated API schema"""
from argus_api import session


add_host_comment = {'tags': ['configurationadmin'], 'summary': 'Add a comment to configuration host (INTERNAL)', 'description': '', 'operationId': 'addHostComment', 'consumes': ['text/plain'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Comment', 'required': False, 'schema': {'type': 'string'}}, {'name': 'id', 'in': 'path', 'description': 'ID of host to comment', 'required': True, 'type': 'int'}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
configure_host_monitoring = {'tags': ['configurationadmin'], 'summary': 'Configure monitoring of configuration host. This operation does not add a new revision. (INTERNAL)', 'description': '', 'operationId': 'configureHostMonitoring', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or hostname of host to configure monitoring for', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Monitoring request', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'enabled': {'type': 'bool', 'position': 0, 'description': 'If set, enable or disable monitoring on this host.'}, 'daytimeOnly': {'type': 'bool', 'position': 0, 'description': 'If set, enable or disable the DAYTIME monitoring flag for this host. If monitoring is disabled, this flag has no effect.'}, 'comment': {'type': 'str', 'position': 0, 'description': 'Add a comment to the host object. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to specify monitoring settings on a host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
create_host = {'tags': ['configurationadmin'], 'summary': 'Create new configuration host (INTERNAL)', 'description': '', 'operationId': 'createHost', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Create request', 'required': False, 'schema': {'type': 'object', 'required': ['name'], 'properties': {'name': {'type': 'str', 'description': '[a-zA-Z0-9_:\\-\\.]*'}, 'information': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'str', 'position': 0, 'description': 'Name or ID of the agent user to associate to this host.'}, 'preprod': {'type': 'bool', 'position': 0, 'description': 'If true, mark this host as a PREPROD host. (default false)', 'default': False}, 'daytimeMonitored': {'type': 'bool', 'position': 0, 'description': 'If true, mark this host as a DAYTIME_MONITORED host. (default false)', 'default': False}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels to add to this host', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'str', 'position': 0, 'description': 'ID or shortname of customer to bind this host to. If not set, this host will not be bound to a customer.'}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_host = {'tags': ['configurationadmin'], 'summary': 'Delete configuration host (INTERNAL)', 'description': '', 'operationId': 'deleteHost', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to delete', 'required': True, 'type': 'int'}, {'name': 'deleteInstances', 'in': 'query', 'description': 'If true, force deletion of instances for this host first', 'required': False, 'type': 'bool'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
disable_host_monitoring = {'tags': ['configurationadmin'], 'summary': 'Disable monitoring of configuration host. This endpoint is deprecated, use PUT /host/{id}/monitoring instead. (INTERNAL)', 'description': '', 'operationId': 'disableHostMonitoring', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to disable monitoring on', 'required': True, 'type': 'int'}, {'name': 'comment', 'in': 'formData', 'description': 'Reason for disabling monitoring', 'required': True, 'type': 'string'}], 'deprecated': True, 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
disable_host_monitoring_request = {'tags': ['configurationadmin'], 'summary': 'Disable monitoring of configuration host. (INTERNAL)', 'description': '', 'operationId': 'disableHostMonitoringRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID or hostName of host to disable monitoring on', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request to disable host monitoring', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Add a comment to the host object. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to disable monitoring on a host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
duplicate_host = {'tags': ['configurationadmin'], 'summary': 'Duplicate a configuration host (INTERNAL)', 'description': '', 'operationId': 'duplicateHost', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [{'name': 'sourceID', 'in': 'path', 'description': 'ID of host to duplicate', 'required': True, 'type': 'int'}, {'name': 'newHostName', 'in': 'formData', 'description': 'New name of duplicate host', 'required': True, 'type': 'string'}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
duplicate_host_request = {'tags': ['configurationadmin'], 'summary': 'Duplicate a configuration host (INTERNAL)', 'description': '', 'operationId': 'duplicateHostRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID or host name of host to duplicate', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request to duplicate host', 'required': False, 'schema': {'type': 'object', 'required': ['newHostName'], 'properties': {'newHostName': {'type': 'str', 'position': 0, 'description': 'New name of duplicate host => [a-zA-Z0-9_:\\-\\.]*'}}, 'description': 'Request to duplicate a host'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
enable_host_monitoring = {'tags': ['configurationadmin'], 'summary': 'Enable monitoring of configuration host. This endpoint is deprecated, use PUT /host/{id}/monitoring instead. (INTERNAL)', 'description': '', 'operationId': 'enableHostMonitoring', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to enable monitoring on', 'required': True, 'type': 'int'}], 'deprecated': True, 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_hosts = {'tags': ['configurationadmin'], 'summary': 'List configuration hosts (INTERNAL)', 'description': '', 'operationId': 'listHosts', 'produces': ['application/json'], 'parameters': [{'name': 'search', 'in': 'query', 'description': 'Limit results to hosts matching this searchstring', 'required': False, 'type': 'str'}, {'name': 'includeComments', 'in': 'query', 'description': 'Include comments in output', 'required': False, 'type': 'bool', 'default': False}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted hosts in results', 'required': False, 'type': 'bool', 'default': False}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'orderBy', 'in': 'query', 'description': 'Sort results', 'required': False, 'type': 'str', 'default': 'name', 'enum': ['id', 'name']}, {'name': 'orderDesc', 'in': 'query', 'description': 'Sort results descending', 'required': False, 'type': 'bool'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
move_configration_host = {'tags': ['configurationadmin'], 'summary': 'Move a configuration host to another customer. Requires move permission for both source and target customer.\nDomain to lookup host is an optional query parameter.\nIf the agent does not have permission for the target customer, the move will be aborted and a 412 error code returned.\n (INTERNAL)', 'description': '', 'operationId': 'moveConfigrationHost', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or hostname of host to move', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Domain to lookup host', 'required': False, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Move request', 'required': False, 'schema': {'type': 'object', 'required': ['customer'], 'properties': {'customer': {'type': 'str', 'position': 0, 'description': 'Shortname or id of customer to move to. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'agentUser': {'type': 'str', 'position': 0, 'description': 'Shortname or id of agent to use. If empty the current agent of the host will be used'}}, 'description': 'Request to move configuration host.'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
schedule_host_monitoring = {'tags': ['configurationadmin'], 'summary': 'Schedule downtime for configuration host (INTERNAL)', 'description': '', 'operationId': 'scheduleHostMonitoring', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to schedule downtime for', 'required': True, 'type': 'int'}, {'name': 'from', 'in': 'formData', 'description': 'Timestamp to schedule downtime from', 'required': False, 'type': 'integer', 'format': 'int64'}, {'name': 'to', 'in': 'formData', 'description': 'Timestamp to schedule downtime to', 'required': False, 'type': 'integer', 'format': 'int64'}, {'name': 'comment', 'in': 'formData', 'description': 'Reason for scheduling downtime', 'required': True, 'type': 'string'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
schedule_host_monitoring_request = {'tags': ['configurationadmin'], 'summary': 'Schedule downtime for configuration host (INTERNAL)', 'description': '', 'operationId': 'scheduleHostMonitoringRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID of host to schedule downtime for', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request to schedule downtime for configuration host', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'from': {'type': 'int', 'position': 0, 'description': 'Timestamp to schedule downtime from', 'minimum': 0}, 'to': {'type': 'int', 'position': 0, 'description': 'Timestamp to schedule downtime to', 'minimum': 0}, 'comment': {'type': 'str', 'position': 0, 'description': 'Reason for scheduling downtime => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to schedule downtime for configuration host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_hosts = {'tags': ['configurationadmin'], 'summary': 'Search configuration hosts (INTERNAL)', 'description': '', 'operationId': 'searchHosts', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR.', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR.', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'keywords': {'type': 'list', 'position': 0, 'description': 'If set, filter hosts matching these keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeComments': {'type': 'bool', 'position': 0, 'description': 'If true, include comments on returned host configuration objects (default false)', 'default': False}, 'includeProperties': {'type': 'bool', 'position': 0, 'description': 'If true, include properties on returned host configuration objects (default true)', 'default': True}, 'agentUser': {'type': 'list', 'position': 0, 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'labels': {'type': 'list', 'position': 0, 'description': 'If set, limit the search result to hosts having any of these labels', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, filter hosts by ID or hostname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'inDowntime': {'type': 'bool', 'position': 0, 'description': 'If true, only return hosts which are in scheduled downtime. If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'keywords': {'type': 'list', 'position': 0, 'description': 'If set, filter hosts matching these keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeComments': {'type': 'bool', 'position': 0, 'description': 'If true, include comments on returned host configuration objects (default false)', 'default': False}, 'includeProperties': {'type': 'bool', 'position': 0, 'description': 'If true, include properties on returned host configuration objects (default true)', 'default': True}, 'agentUser': {'type': 'list', 'position': 0, 'description': 'If set, limit the search result to hosts which are bound to these agents (id or username)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'If set, limit the search result to hosts which are bound to these customers (id or username)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'labels': {'type': 'list', 'position': 0, 'description': 'If set, limit the search result to hosts having any of these labels', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, filter hosts by ID or hostname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'inDowntime': {'type': 'bool', 'position': 0, 'description': 'If true, only return hosts which are in scheduled downtime. If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'enum': ['id', 'name', '-id', '-name']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
setup_default_configuration = {'tags': ['configurationadmin'], 'summary': 'Create default instances on configuration host (INTERNAL)', 'description': '', 'operationId': 'setupDefaultConfiguration', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to add instances to', 'required': True, 'type': 'int'}, {'name': 'packagename', 'in': 'formData', 'description': 'Instance package names', 'required': False, 'type': 'string', 'enum': ['processingStack']}], 'responses': {'200': {'description': 'successful operation', 'schema': {'type': 'object'}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
setup_default_configuration_request = {'tags': ['configurationadmin'], 'summary': 'Create default instances on configuration host (INTERNAL)', 'description': '', 'operationId': 'setupDefaultConfigurationRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID or host name of host to add instances to', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request to create default instances on configuration host', 'required': False, 'schema': {'type': 'object', 'required': ['packageName'], 'properties': {'packageName': {'type': 'str', 'position': 0, 'description': 'Instance package names => Sanitize by regex processingStack'}}, 'description': 'Request to create default instances on configuration host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'type': 'object'}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_host = {'tags': ['configurationadmin'], 'summary': 'Update configuration host (INTERNAL)', 'description': '', 'operationId': 'updateHost', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Update request', 'required': False, 'schema': {'type': 'object', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'description': '[a-zA-Z0-9_:\\-\\.]*'}, 'information': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'str', 'position': 0, 'description': 'Name or ID of the agent user to associate to this host. If not set, do not change.'}, 'preprod': {'type': 'bool', 'position': 0, 'description': 'If set, change the PREPROD flag on this host'}, 'daytimeMonitored': {'type': 'bool', 'position': 0, 'description': 'If set, change the DAYTIME_MONITORED flag on this host'}, 'setLabels': {'type': 'list', 'position': 0, 'description': 'Labels to set on this host (overwrite existing)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'addLabels': {'type': 'list', 'position': 0, 'description': 'Labels to add to this host (in addition to existing, will ignore existing labels)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'removeLabels': {'type': 'list', 'position': 0, 'description': 'Labels to remove from this host (will ignore labels not set)', 'uniqueItems': True, 'items': {'type': 'string'}}}}}, {'name': 'hostID', 'in': 'path', 'description': 'ID of host to update', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_host_properties = {'tags': ['configurationadmin'], 'summary': 'Update configuration host properties (INTERNAL)', 'description': '', 'operationId': 'updateHostProperties', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Update properties request', 'required': False, 'schema': {'type': 'object', 'required': ['properties'], 'properties': {'properties': {'type': 'dict', 'position': 0, 'description': 'The host properties to update to, null value will clear the property', 'additionalProperties': {'type': 'string'}}}, 'description': 'Request to update properties on a specified host'}}, {'name': 'id', 'in': 'path', 'description': 'ID of the host to update properties on', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Name of this property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Set value of this property'}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value of this property'}, 'source': {'type': 'str', 'position': 0, 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
view_host = {'tags': ['configurationadmin'], 'summary': 'Fetch configuration host (INTERNAL)', 'description': '', 'operationId': 'viewHost', 'produces': ['application/json'], 'parameters': [{'name': 'idOrHostName', 'in': 'path', 'description': 'ID of host to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
#: "add_comment" is an alias for "add_host_comment"
add_comment = add_host_comment
#: "create_2" is an alias for "create_host"
create_2 = create_host
#: "delete_1" is an alias for "delete_host"
delete_1 = delete_host
#: "disable_monitoring" is an alias for "disable_host_monitoring"
disable_monitoring = disable_host_monitoring
#: "duplicate_1" is an alias for "duplicate_host"
duplicate_1 = duplicate_host
#: "duplicate_2" is an alias for "setup_default_configuration"
duplicate_2 = setup_default_configuration
#: "enable_monitoring" is an alias for "enable_host_monitoring"
enable_monitoring = enable_host_monitoring
#: "list_2" is an alias for "list_hosts"
list_2 = list_hosts
#: "schedule_monitoring" is an alias for "schedule_host_monitoring"
schedule_monitoring = schedule_host_monitoring
#: "search_2" is an alias for "search_hosts"
search_2 = search_hosts
#: "update_1" is an alias for "update_host"
update_1 = update_host
#: "view" is an alias for "view_host"
view = view_host