"""Autogenerated API schema"""
from argus_api import session


get_host_by_agent_user = {'tags': ['configurationadmin'], 'summary': 'Fetch configuration host by agent user (INTERNAL)', 'description': '', 'operationId': 'getHostByAgentUser', 'produces': ['application/json'], 'parameters': [{'name': 'user', 'in': 'path', 'description': 'Username or ID of agent user to fetch host for', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'ID or name of domain to lookup user in. Defaults to current users domain', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name'}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the host (and all its instances) is scheduled for downtime until this timestamp. If current time has passed this timestamp, the host is no longer scheduled in downtime.'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this host was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Information text (plain text, default sanitation).'}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this host', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set on this host', 'additionalProperties': {'type': 'string'}}, 'agentUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'encodedFlags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'PREPROD', 'DAYTIME_MONITORED']}}}, 'description': 'Represents a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_instances_by_agent_user = {'tags': ['configurationadmin'], 'summary': 'List configuration instances by agent user (fetching instances bound to the host associated with the agent) (INTERNAL)', 'description': '', 'operationId': 'listInstancesByAgentUser', 'produces': ['application/json'], 'parameters': [{'name': 'user', 'in': 'path', 'description': 'Agent user ID or username', 'required': True, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int'}, {'name': 'includeProperties', 'in': 'query', 'description': 'Include properties', 'required': False, 'type': 'bool'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}