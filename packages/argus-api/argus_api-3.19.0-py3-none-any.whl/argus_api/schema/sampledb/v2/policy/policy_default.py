"""Autogenerated API schema"""
from argus_api import session


add_default_analysis_rule = {'tags': ['development'], 'summary': 'Endpoint for registering a new analysis policy rule (DEV)', 'description': '', 'operationId': 'addAnalysisRule', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Add request', 'required': False, 'schema': {'type': 'object', 'required': ['action', 'description', 'match', 'name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Name of the custom analysis rule to add'}, 'description': {'type': 'str', 'position': 0, 'description': 'Longer description of the custom rule'}, 'match': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'required': ['customerOrGroup'], 'properties': {'customerOrGroup': {'type': 'list', 'position': 0, 'description': 'The customers or groups being matched. Specify id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}}, 'description': 'Clause to match by customer or group'}, 'classification': {'type': 'dict', 'properties': {'type': 'list', 'superType': {'type': 'list', 'position': 0, 'description': 'The classification supertype being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by classification'}, 'submission': {'type': 'dict', 'required': ['metaDataKey', 'metaDataValue'], 'properties': {'metaDataKey': {'type': 'list', 'position': 0, 'description': 'The submission meta data key being matched', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}, 'metaDataValue': {'type': 'list', 'position': 0, 'description': 'The submission meta data value being matched', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}}, 'description': 'Clause to match by submission'}}, 'description': 'The clause the custom rule is matching. A rule can only have one match, either customer, classification or submission'}, 'action': {'type': 'dict', 'properties': {'workers': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'The id or shortName of the workers to add to the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'The id or shortName of the workers to remove from the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'The id or shortName of the workers to set to the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The action applied to workers'}, 'options': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['key', 'value'], 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the options of the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['key', 'value'], 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'The actions applied to options'}}, 'description': 'The actions which are performed when a custom rule matches. A rule can change both workers and options'}}, 'description': 'Request to add an Analysis rule'}}], 'responses': {'201': {'description': 'Successfully registered new analysis rule'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_default_analysis_rule = {'tags': ['development'], 'summary': 'Deletes a custom analysis policy rule by id (DEV)', 'description': '', 'operationId': 'deleteAnalysisRule', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Id of the analysis policy rule to delete', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Unique ID of the custom rule'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the custom rule'}, 'description': {'type': 'str', 'position': 0, 'description': 'Longer description of the custom rule'}, 'match': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'The customers or groups being matched', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}}}, 'description': 'Clause to match by customer or group'}, 'classification': {'type': 'dict', 'properties': {'type': 'list', 'superType': {'type': 'list', 'position': 0, 'description': 'The classification supertype being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by classification'}, 'submission': {'type': 'dict', 'properties': {'metaDataKey': {'type': 'list', 'position': 0, 'description': 'The submission meta data key being matched', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaDataValue': {'type': 'list', 'position': 0, 'description': 'The submission meta data value being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by submission'}}, 'description': 'The clause the custom rule is matching. A rule can only have one match, either customer, classification or submission'}, 'action': {'type': 'dict', 'properties': {'workers': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}}, 'description': 'The action applied to workers'}, 'options': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the options of the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'The actions applied to options'}}, 'description': 'The actions which are performed when a custom rule matches. A rule can change both workers and options'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the analysis policy rule', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Custom policy rule defining the actions and options for the analysis workers'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_default_analysis_policy = {'tags': ['development'], 'summary': 'Fetch the default analysis policy (DEV)', 'description': '', 'operationId': 'getAnalysisPolicy', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'workers': {'type': 'list', 'position': 0, 'description': 'Workers executed during analysis of a sample', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'options': {'type': 'list', 'position': 0, 'description': 'Parameters workers should respect during analysis', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}}, 'description': 'Policy defining which workers to execute during analysis of a sample'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_default_analysis_policy_rule = {'tags': ['development'], 'summary': 'Fetch the analysis policy rule by id (DEV)', 'description': '', 'operationId': 'getAnalysisPolicyRule', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Id of the analysis policy rule to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Unique ID of the custom rule'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the custom rule'}, 'description': {'type': 'str', 'position': 0, 'description': 'Longer description of the custom rule'}, 'match': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'The customers or groups being matched', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}}}, 'description': 'Clause to match by customer or group'}, 'classification': {'type': 'dict', 'properties': {'type': 'list', 'superType': {'type': 'list', 'position': 0, 'description': 'The classification supertype being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by classification'}, 'submission': {'type': 'dict', 'properties': {'metaDataKey': {'type': 'list', 'position': 0, 'description': 'The submission meta data key being matched', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaDataValue': {'type': 'list', 'position': 0, 'description': 'The submission meta data value being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by submission'}}, 'description': 'The clause the custom rule is matching. A rule can only have one match, either customer, classification or submission'}, 'action': {'type': 'dict', 'properties': {'workers': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}}, 'description': 'The action applied to workers'}, 'options': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the options of the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'The actions applied to options'}}, 'description': 'The actions which are performed when a custom rule matches. A rule can change both workers and options'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the analysis policy rule', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Custom policy rule defining the actions and options for the analysis workers'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_default_analysis_rules = {'tags': ['development'], 'summary': 'List custom analysis policy rules (DEV)', 'description': '', 'operationId': 'searchAnalysisRules', 'produces': ['application/json'], 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted analysis policy rules', 'required': False, 'type': 'bool', 'default': False, 'enum': ['true', 'false']}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Unique ID of the custom rule'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the custom rule'}, 'description': {'type': 'str', 'position': 0, 'description': 'Longer description of the custom rule'}, 'match': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'The customers or groups being matched', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}}}, 'description': 'Clause to match by customer or group'}, 'classification': {'type': 'dict', 'properties': {'type': 'list', 'superType': {'type': 'list', 'position': 0, 'description': 'The classification supertype being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by classification'}, 'submission': {'type': 'dict', 'properties': {'metaDataKey': {'type': 'list', 'position': 0, 'description': 'The submission meta data key being matched', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaDataValue': {'type': 'list', 'position': 0, 'description': 'The submission meta data value being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by submission'}}, 'description': 'The clause the custom rule is matching. A rule can only have one match, either customer, classification or submission'}, 'action': {'type': 'dict', 'properties': {'workers': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}}, 'description': 'The action applied to workers'}, 'options': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the options of the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'The actions applied to options'}}, 'description': 'The actions which are performed when a custom rule matches. A rule can change both workers and options'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the analysis policy rule', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Custom policy rule defining the actions and options for the analysis workers'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_default_analysis_policy = {'tags': ['development'], 'summary': 'Update the default analysis policy (DEV)', 'description': '', 'operationId': 'updateAnalysisPolicy', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request to update the default analysis policy', 'required': False, 'schema': {'type': 'object', 'properties': {'workers': {'type': 'list', 'position': 0, 'description': 'Workers executed during analysis of a sample (identified by id-or-shortName). All (and at least one) workers must be specified and will overwrite the existing list.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'options': {'type': 'list', 'position': 0, 'description': 'Parameters workers should respect during analysis. All parameters must be specified and will overwrite the existing list. There can only exist one parameter for a given key (no duplicated keys).', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['key', 'value'], 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'Update the default analysis policy'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'workers': {'type': 'list', 'position': 0, 'description': 'Workers executed during analysis of a sample', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'options': {'type': 'list', 'position': 0, 'description': 'Parameters workers should respect during analysis', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}}, 'description': 'Policy defining which workers to execute during analysis of a sample'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_default_analysis_rule = {'tags': ['development'], 'summary': 'Update an existing custom rule (DEV)', 'description': '', 'operationId': 'updateAnalysisRule', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Id of the custom analysis rule to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request to update an existing analysis rule ', 'required': False, 'schema': {'type': 'object', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'If set change the name of the custom rule'}, 'description': {'type': 'str', 'position': 0, 'description': 'If set change the description of the custom rule'}, 'match': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'required': ['customerOrGroup'], 'properties': {'customerOrGroup': {'type': 'list', 'position': 0, 'description': 'The customers or groups being matched. Specify id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}}, 'description': 'Clause to match by customer or group'}, 'classification': {'type': 'dict', 'properties': {'type': 'list', 'superType': {'type': 'list', 'position': 0, 'description': 'The classification supertype being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by classification'}, 'submission': {'type': 'dict', 'required': ['metaDataKey', 'metaDataValue'], 'properties': {'metaDataKey': {'type': 'list', 'position': 0, 'description': 'The submission meta data key being matched', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}, 'metaDataValue': {'type': 'list', 'position': 0, 'description': 'The submission meta data value being matched', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}}, 'description': 'Clause to match by submission'}}, 'description': 'The clause the custom rule is matching. A rule can only have one match, either customer, classification or submission'}, 'action': {'type': 'dict', 'properties': {'workers': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'The id or shortName of the workers to add to the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'The id or shortName of the workers to remove from the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'The id or shortName of the workers to set to the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The action applied to workers'}, 'options': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['key', 'value'], 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the options of the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['key', 'value'], 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'The actions applied to options'}}, 'description': 'The actions which are performed when a custom rule matches. A rule can change both workers and options'}}, 'description': 'Request to update an existing custom rule'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Unique ID of the custom rule'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the custom rule'}, 'description': {'type': 'str', 'position': 0, 'description': 'Longer description of the custom rule'}, 'match': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'The customers or groups being matched', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}}}, 'description': 'Clause to match by customer or group'}, 'classification': {'type': 'dict', 'properties': {'type': 'list', 'superType': {'type': 'list', 'position': 0, 'description': 'The classification supertype being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by classification'}, 'submission': {'type': 'dict', 'properties': {'metaDataKey': {'type': 'list', 'position': 0, 'description': 'The submission meta data key being matched', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaDataValue': {'type': 'list', 'position': 0, 'description': 'The submission meta data value being matched', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Clause to match by submission'}}, 'description': 'The clause the custom rule is matching. A rule can only have one match, either customer, classification or submission'}, 'action': {'type': 'dict', 'properties': {'workers': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the workers of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the analysis worker'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Unique short name of the analysis worker'}, 'localizedName': {'type': 'str', 'position': 0, 'description': "Display name of the analysis worker in the current user's language"}}, 'description': 'Configuration of a worker in the analysis pipeline - info object'}}}, 'description': 'The action applied to workers'}, 'options': {'type': 'dict', 'properties': {'add': {'type': 'list', 'position': 0, 'description': 'Add to the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}, 'remove': {'type': 'list', 'position': 0, 'description': 'Remove from the options of the default policy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'set': {'type': 'list', 'position': 0, 'description': 'Overwrite the options of the default policy', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'Unique key of the option, e.g. meta.sampledb.allowInternetAccess.'}, 'value': {'type': 'str', 'position': 0, 'description': 'Stringified value of the option.'}}, 'description': 'Parameter sent to a worker in the analysis pipeline'}}}, 'description': 'The actions applied to options'}}, 'description': 'The actions which are performed when a custom rule matches. A rule can change both workers and options'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the analysis policy rule was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the analysis policy rule', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Custom policy rule defining the actions and options for the analysis workers'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}