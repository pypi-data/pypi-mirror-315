"""Autogenerated API schema"""
from argus_api import session


get_case_template = {'tags': ['cases/v2/templates'], 'summary': 'Fetch template details (PUBLIC)', 'description': '', 'operationId': 'getCaseTemplate', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'If set, populate template with sections for this customer', 'required': False, 'type': 'str'}, {'name': 'id', 'in': 'path', 'description': 'The ID of the template to fetch', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'variables': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'label': {'type': 'string'}, 'argusVariable': {'type': 'string'}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_case_templates = {'tags': ['cases/v2/templates'], 'summary': 'List available templates (PUBLIC)', 'description': '', 'operationId': 'listCaseTemplates', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'If set, select templates for this customer', 'required': False, 'type': 'str'}, {'name': 'language', 'in': 'query', 'description': 'If set, select templates for this language', 'required': False, 'type': 'str', 'default': 'english', 'enum': ['english', 'norwegian']}, {'name': 'keywords', 'in': 'query', 'description': 'If set, filter templates by keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'category': {'type': 'string'}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'title': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
render_case_template = {'tags': ['cases/v2/templates'], 'summary': 'Fetch completed template using requested variables (PUBLIC)', 'description': '', 'operationId': 'fetchCompletedCaseTemplate', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'The ID of the template to fetch', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Request details for filling the template', 'required': False, 'schema': {'type': 'object', 'properties': {'customer': {'type': 'str', 'position': 0, 'description': 'If set, return template with sections for this customer (by id or shortname).'}, 'variables': {'type': 'list', 'position': 0, 'description': 'The variables to use when filling out the template', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'value': {'type': 'string'}}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the filled out template'}, 'subject': {'type': 'str', 'position': 0, 'description': 'The completed subject template'}, 'sections': {'type': 'list', 'position': 0, 'description': 'The completed sections for this template', 'items': {'type': 'dict', 'properties': {'title': {'type': 'string'}, 'content': {'type': 'string'}}}}}, 'description': 'A completed case template'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}