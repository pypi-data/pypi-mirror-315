"""Autogenerated API schema"""
from argus_api import session


search_notifications = {'tags': ['development'], 'summary': "Returns a list of current user's notifications matching the search criteria (DEV)", 'description': '', 'operationId': 'searchNotifications', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'NotificationSearch request', 'required': False, 'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'position': 0, 'description': 'Limit number of returning notifications. (default 25)', 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Offset notifications (default 0)', 'default': 0}, 'user': {'type': 'list', 'position': 0, 'description': 'Restrict search to return notifications generated by specified users. Can be shortnames or userIds.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Restrict search to return notifications created after the timestamp. Defaults to no restrictions.'}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'Restrict search to return notifications created before the timestamp. Defaults to now.'}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict search to return notifications which have the specified flags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['seen', 'suppressed']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict search to return notifications which have the specified flags unset.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['seen', 'suppressed']}}, 'service': {'type': 'list', 'position': 0, 'description': 'Limit to notifications generated by the specified Argus services.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['caseService']}}, 'operation': {'type': 'list', 'position': 0, 'description': 'Limit to notifications generated by the specified Argus operations', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'casePriorityChange', 'caseAddAttachment', 'caseAddComment']}}, 'objectID': {'type': 'list', 'position': 0, 'description': 'Limit to notification generated by the specified set of Argus objects by their IDs', 'uniqueItems': True, 'items': {'type': 'string'}}, 'objectCustomer': {'type': 'list', 'position': 0, 'description': 'Limit to notifications generated by the specified customers. Can be a list of shortnames and/or customerIDs', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeContext': {'type': 'bool', 'position': 0, 'description': 'Specify if service specific notification context should be included (default false)', 'default': False}}, 'description': 'Allows current user to search for received notifications.'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Unique identifier for this notification.'}, 'transactionID': {'type': 'str', 'position': 0, 'description': 'Unique identifier for the parent transaction which generated this notification.'}, 'transactionUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'objectCustomer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'objectID': {'type': 'str', 'position': 0, 'description': 'The identifier for the object for which the notification transaction was generated'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Set of flags for the notification. Tells if the notification is seen or was suppressed.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['seen', 'suppressed']}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp for when the notification was created.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp for when the notification was first seen by the receiving user.'}, 'service': {'type': 'str', 'position': 0, 'description': 'What service generated the notification', 'enum': ['caseService']}, 'operation': {'type': 'str', 'position': 0, 'description': 'What operation generated the notification', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'casePriorityChange', 'caseAddAttachment', 'caseAddComment']}, 'channels': {'type': 'list', 'position': 0, 'description': 'Which notification channels will/was the receiving user attempted to be notified through.', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'type': 'str', 'success': {'type': 'bool', 'position': 0, 'description': 'Did we succeed in notifying the user through the channel.'}, 'options': ['sms', 'email', 'app']}, 'description': 'Specifies the notification channel and whether it was a success.'}}, 'context': {'type': 'object'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}