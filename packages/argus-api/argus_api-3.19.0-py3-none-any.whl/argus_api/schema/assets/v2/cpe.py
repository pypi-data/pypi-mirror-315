"""Autogenerated API schema"""
from argus_api import session


get_asset_cpes = {'tags': ['assets/v2/cpe'], 'summary': 'Get CPE by ID or WFN (INTERNAL)', 'description': '', 'operationId': 'getAssetCPE', 'produces': ['application/json'], 'parameters': [{'name': 'idOrWFN', 'in': 'path', 'description': 'CPE ID or WFN', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'name': {'type': 'string'}, 'part': {'type': 'str', 'enum': ['a', 'h', 'o']}, 'product': {'type': 'string'}, 'vendor': {'type': 'string'}, 'version': {'type': 'string'}, 'wfn': {'type': 'string'}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'deprecates': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}}, 'deprecatedBy': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_asset_cpes = {'tags': ['assets/v2/cpe'], 'summary': 'Basic CPE search. (INTERNAL)', 'description': '', 'operationId': 'listAssetCPEs', 'produces': ['application/json'], 'parameters': [{'name': 'keywords', 'in': 'query', 'description': 'Match keywords against all available CPE keyword fields', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'vendor', 'in': 'query', 'description': 'CPE Vendor', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'product', 'in': 'query', 'description': 'CPE Product', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'version', 'in': 'query', 'description': 'CPE Version', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Lower bound timestamp filter value against all available CPE timestamp fields', 'required': False, 'type': 'str', 'default': '0'}, {'name': 'endTimestamp', 'in': 'query', 'description': 'Upper bound timestamp filter value against all available CPE timestamp fields', 'required': False, 'type': 'str', 'default': '0'}, {'name': 'includeDeprecated', 'in': 'query', 'description': 'Whether to include deprecated CPEs in the results', 'required': False, 'type': 'bool', 'default': False}, {'name': 'limit', 'in': 'query', 'description': 'Limit result set', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset result set', 'required': False, 'type': 'int', 'default': 0}, {'name': 'sortBy', 'in': 'query', 'description': 'Field(s) to sort by - refer to the search POST endpoint to see which fields are permitted', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'name': {'type': 'string'}, 'part': {'type': 'str', 'enum': ['a', 'h', 'o']}, 'product': {'type': 'string'}, 'vendor': {'type': 'string'}, 'version': {'type': 'string'}, 'wfn': {'type': 'string'}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'deprecates': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}}, 'deprecatedBy': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'name': {'type': 'string'}, 'wfn': {'type': 'string'}}}}}}}}}}}}
search_cpes = {'tags': ['assets/v2/cpe'], 'summary': 'Search CPEs (INTERNAL)', 'description': '', 'operationId': 'searchCPEs', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'Accept', 'in': 'header', 'required': False, 'type': 'string'}, {'in': 'body', 'name': 'body', 'description': 'Asset search request', 'required': False, 'schema': {'type': 'object', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'name', 'vendor', 'product', 'wfn']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match any keywords) (default any)', 'enum': ['any', 'all']}, 'cpe': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these WFN or ID values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'part': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these part values', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['a', 'h', 'o']}}, 'vendor': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these vendors values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'product': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these products values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'version': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these versions values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp). (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp). (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'deprecates': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN', 'uniqueItems': True, 'items': {'type': 'string'}}, 'deprecatedBy': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly search for CPEs that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out CPEs that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'name', 'vendor', 'product', 'wfn']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match any keywords) (default any)', 'enum': ['any', 'all']}, 'cpe': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these WFN or ID values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'part': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these part values', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['a', 'h', 'o']}}, 'vendor': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these vendors values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'product': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these products values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'version': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these versions values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp). (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp). (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'deprecates': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN', 'uniqueItems': True, 'items': {'type': 'string'}}, 'deprecatedBy': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly search for CPEs that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out CPEs that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'name', 'vendor', 'product', 'wfn']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match any keywords) (default any)', 'enum': ['any', 'all']}, 'cpe': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these WFN or ID values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'part': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these part values', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['a', 'h', 'o']}}, 'vendor': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these vendors values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'product': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these products values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'version': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs matching one of these versions values', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp). (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp). (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'deprecates': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs that deprecate at least one of these CPEs identified by ID or WFN', 'uniqueItems': True, 'items': {'type': 'string'}}, 'deprecatedBy': {'type': 'list', 'position': 0, 'description': 'Filter for CPEs deprecated by at least one of these CPEs identified by ID or WFN', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly search for CPEs that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out CPEs that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deprecated']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Asset CPEs'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Asset CPEs'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the results to the specified amount (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip specified amount of results (default 0)', 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field(s) by which to sort the results', 'items': {'type': 'str', 'enum': ['vendor', 'product', 'version', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', '-vendor', '-product', '-version', '-name', '-createdTimestamp', '-lastUpdatedTimestamp']}}, 'includeDeprecated': {'type': 'bool', 'position': 0, 'description': 'Whether to include deprecated CPEs (default false)', 'default': False}}}}], 'responses': {'200': {'description': 'Search result'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}