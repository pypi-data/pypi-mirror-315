"""Autogenerated API schema"""
from argus_api import session


prepare_notification_transaction = {'tags': ['development'], 'summary': 'Prepare a new notification transaction. This endpoint is NOT meant for users, only for applications on behalf of a user. (DEV)', 'description': '', 'operationId': 'prepareNotificationTransaction', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Notification request', 'required': False, 'schema': {'type': 'object', 'required': ['operation', 'recipients', 'requestContext', 'service'], 'properties': {'recipients': {'type': 'list', 'position': 0, 'description': 'List of user and email recipients to notify.', 'uniqueItems': True, 'items': {'type': 'object'}, 'maxItems': 2147483647, 'minItems': 1}, 'objectCustomer': {'type': 'str', 'position': 0, 'description': 'Id or shortname for customer of the object this notification is related to.If notification is not customer relevant, this may not be set.'}, 'objectID': {'type': 'str', 'position': 0, 'description': 'Which Argus object (case, document, sensor, asset, etc.) generated the notification. Is not required, as some operations will not have a corresponding Argus object.'}, 'service': {'type': 'str', 'position': 0, 'description': 'What service generated the notification.', 'enum': ['caseService']}, 'operation': {'type': 'str', 'position': 0, 'description': 'What operation generated the notification.', 'enum': ['caseUpdate', 'caseCreate', 'caseClosed', 'casePriorityChange', 'caseAddAttachment', 'caseAddComment']}, 'requestContext': {'type': 'object'}}, 'description': 'Interface to be used by other services to generate notifications..'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'transactionID': {'type': 'str'}, 'records': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'notificationID': {'type': 'str', 'position': 0, 'description': 'The ID of the notification entity stored for this notification. May be null (for non-user notifications)'}, 'recipient': {'type': 'object'}, 'channels': {'type': 'list', 'position': 0, 'description': 'The channel description describing how this recipient was notified', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['sms', 'email', 'app', 'notificationCenter']}}}}}}, 'description': 'Describes the prepared notification transaction'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}