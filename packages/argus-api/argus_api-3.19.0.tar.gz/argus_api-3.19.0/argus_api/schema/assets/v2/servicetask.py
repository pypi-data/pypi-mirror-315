"""Autogenerated API schema"""
from argus_api import session


abort_task = {'tags': ['development'], 'summary': 'Abort a running or pending task (DEV)', 'description': '', 'operationId': 'abortTask', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'taskID', 'in': 'path', 'description': 'ID of task to abort', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'correlationID': {'type': 'str', 'position': 0, 'description': 'The correlationID of this task. The correlationID is set by the requesting client, to allow lookup based on a pre-selected value. If not requested, this value is null.'}, 'operation': {'type': 'str', 'position': 0, 'description': 'The name of the operation of this task. The operation names are service dependant.'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}, 'parentTask': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags for this task', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['hasSubtasks', 'hasFailedSubtasks', 'hasFinalizationStage']}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was created/enqueued'}, 'executionTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task started executing, or 0 if not started'}, 'finishedTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was finished/aborted/failed, or 0 if not finished'}, 'workerHost': {'type': 'str', 'position': 0, 'description': 'Name of host where task was executed'}, 'responseMessages': {'type': 'list', 'position': 0, 'description': 'Response messages from worker', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this message was added'}, 'message': {'type': 'str', 'position': 0, 'description': 'The message added by the worker'}}}}, 'responseContext': {'type': 'dict', 'position': 0, 'description': 'Response context map, filled out by worker', 'additionalProperties': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation failed'}}}
get_task = {'tags': ['development'], 'summary': 'List status for service tasks (DEV)', 'description': '', 'operationId': 'getTask', 'produces': ['application/json'], 'parameters': [{'name': 'taskID', 'in': 'path', 'description': 'ID of task to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'correlationID': {'type': 'str', 'position': 0, 'description': 'The correlationID of this task. The correlationID is set by the requesting client, to allow lookup based on a pre-selected value. If not requested, this value is null.'}, 'operation': {'type': 'str', 'position': 0, 'description': 'The name of the operation of this task. The operation names are service dependant.'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}, 'parentTask': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags for this task', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['hasSubtasks', 'hasFailedSubtasks', 'hasFinalizationStage']}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was created/enqueued'}, 'executionTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task started executing, or 0 if not started'}, 'finishedTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was finished/aborted/failed, or 0 if not finished'}, 'workerHost': {'type': 'str', 'position': 0, 'description': 'Name of host where task was executed'}, 'responseMessages': {'type': 'list', 'position': 0, 'description': 'Response messages from worker', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this message was added'}, 'message': {'type': 'str', 'position': 0, 'description': 'The message added by the worker'}}}}, 'responseContext': {'type': 'dict', 'position': 0, 'description': 'Response context map, filled out by worker', 'additionalProperties': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation failed'}}}
list_tasks = {'tags': ['development'], 'summary': 'List status for service tasks (DEV)', 'description': '', 'operationId': 'listTasks', 'produces': ['application/json'], 'parameters': [{'name': 'state', 'in': 'query', 'description': 'Filter results by state', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}, 'collectionFormat': 'multi'}, {'name': 'operation', 'in': 'query', 'description': 'Filter results by operation (service dependant)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'user', 'in': 'query', 'description': 'Filter results by user (id or shortname)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'parentTask', 'in': 'query', 'description': 'Filter results by parent task ID', 'required': False, 'type': 'list', 'items': {'type': 'str'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'correlationID': {'type': 'str', 'position': 0, 'description': 'The correlationID of this task. The correlationID is set by the requesting client, to allow lookup based on a pre-selected value. If not requested, this value is null.'}, 'operation': {'type': 'str', 'position': 0, 'description': 'The name of the operation of this task. The operation names are service dependant.'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}, 'parentTask': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags for this task', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['hasSubtasks', 'hasFailedSubtasks', 'hasFinalizationStage']}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was created/enqueued'}, 'executionTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task started executing, or 0 if not started'}, 'finishedTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was finished/aborted/failed, or 0 if not finished'}, 'workerHost': {'type': 'str', 'position': 0, 'description': 'Name of host where task was executed'}, 'responseMessages': {'type': 'list', 'position': 0, 'description': 'Response messages from worker', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this message was added'}, 'message': {'type': 'str', 'position': 0, 'description': 'The message added by the worker'}}}}, 'responseContext': {'type': 'dict', 'position': 0, 'description': 'Response context map, filled out by worker', 'additionalProperties': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation failed'}}}
search_tasks = {'tags': ['development'], 'summary': 'List status for service tasks (DEV)', 'description': '', 'operationId': 'searchTasks', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request', 'required': False, 'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'minimum': 0}, 'offset': {'type': 'int', 'minimum': 0}, 'operation': {'type': 'list', 'position': 0, 'description': 'Filter tasks by operation name. Valid operations are service dependant.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'Filter tasks by state.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Filter tasks by creating user (id or shortname).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'parentTask': {'type': 'list', 'position': 0, 'description': 'Filter tasks by parent task ID', 'uniqueItems': True, 'items': {'type': 'str'}}, 'correlationID': {'type': 'list', 'position': 0, 'description': 'Filter tasks by task correlation ID', 'uniqueItems': True, 'items': {'type': 'str'}}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Filter tasks with selected time fields after this timestamp.'}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'Filter tasks with selected time fields before this timestamp.'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Select which time fields to use for time search. Defaults to 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdTimestamp', 'executionTimestamp', 'finishedTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': "Select if any or all time fields must match time search. Defaults to 'any'.", 'enum': ['any', 'all']}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'correlationID': {'type': 'str', 'position': 0, 'description': 'The correlationID of this task. The correlationID is set by the requesting client, to allow lookup based on a pre-selected value. If not requested, this value is null.'}, 'operation': {'type': 'str', 'position': 0, 'description': 'The name of the operation of this task. The operation names are service dependant.'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}, 'parentTask': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The ID of this task'}, 'state': {'type': 'str', 'position': 0, 'description': 'The current state of this task', 'enum': ['pending', 'running', 'waitingForSubtasks', 'done', 'failed', 'aborted']}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags for this task', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['hasSubtasks', 'hasFailedSubtasks', 'hasFinalizationStage']}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was created/enqueued'}, 'executionTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task started executing, or 0 if not started'}, 'finishedTimestamp': {'type': 'int', 'position': 0, 'description': 'Time when task was finished/aborted/failed, or 0 if not finished'}, 'workerHost': {'type': 'str', 'position': 0, 'description': 'Name of host where task was executed'}, 'responseMessages': {'type': 'list', 'position': 0, 'description': 'Response messages from worker', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this message was added'}, 'message': {'type': 'str', 'position': 0, 'description': 'The message added by the worker'}}}}, 'responseContext': {'type': 'dict', 'position': 0, 'description': 'Response context map, filled out by worker', 'additionalProperties': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation failed'}}}