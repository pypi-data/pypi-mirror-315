"""Autogenerated API schema"""
from argus_api import session


add_vulnerability = {'tags': ['assets/v2/vulnerability'], 'summary': 'Creates a new vulnerability instance (PUBLIC)', 'description': '', 'operationId': 'addVulnerability', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Vulnerability add request', 'required': False, 'schema': {'type': 'object', 'required': ['asset', 'vulnerability'], 'properties': {'customer': {'type': 'str', 'position': 0, 'description': "ID or short name of customer, if not specified then current user's customer will be assigned."}, 'dataSource': {'type': 'str', 'position': 0, 'description': 'ID or short name of the Data Source'}, 'asset': {'type': 'str', 'position': 0, 'description': 'ID or short name of asset. If short name is specified, then the asset is looked up from the customer.'}, 'vulnerability': {'type': 'str', 'position': 0, 'description': 'Either vulnerability definition ID (UUID) or vulnerability identifier (e.g. CVE-2015-3429). First the value will be used to lookup vulnerability definition (UUID will only be supported for vulnerability definition lookup). If vulnerability definition exists, then associate this vulnerability instance to it, and require read permission on vulnerability source of the definition. Otherwise create vulnerability instance with vulnerability identifier. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'components': {'type': 'list', 'position': 0, 'description': 'Specify components to be added with the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'value'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'ID or short name of component definition, it should exist within asset definition for the owning asset'}, 'value': {'type': 'str', 'position': 0, 'description': "Value for the vulnerability component, type of value should match component definition's requirement"}, 'ttl': {'type': 'int', 'position': 0, 'description': "Time to live duration of this component since last seen, 0 means won't expire.", 'minimum': 0}}, 'description': 'Request to add component(s) to a vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS score of vulnerability (range from 0 to 10). Setting this field will overwrite\nvulnerability definition settings and the value will not be updated when CVSS or Severity\nin the definition changes.', 'minimum': 0, 'maximum': 10}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity level of vulnerability. If not provided, then severity will be calculated based on CVSS value.\nSetting this field will overwrite vulnerability definition settings and the value will not be updated\nwhen CVSS or Severity in the definition changes.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan. Will be sanitized as html.'}, 'ttl': {'type': 'int', 'position': 0, 'description': "Time to live duration of this vulnerability since last seen, 0 means won't expire.", 'minimum': 0}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this vulnerability. May contain customer specific data. Will be sanitized as HTML. '}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this vulnerability e.g. internal URLs. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Request to create a Vulnerability'}}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh making the new vulnerability immediately searchable.', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
add_vulnerability_definition = {'tags': ['assets/v2/vulnerability/definition'], 'summary': 'Creates a new vulnerability definition also require to have read & write permission of vulnerability source that the definition is belonging to. (INTERNAL)', 'description': '', 'operationId': 'addVulnerabilityDefinition', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Vulnerability definition add request', 'required': False, 'schema': {'type': 'object', 'required': ['cvss', 'vulnerabilityID', 'vulnerabilitySource'], 'properties': {'vulnerabilitySource': {'type': 'str', 'position': 0, 'description': 'Define vulnerability source by source ID or short name.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner). Needs to be unique. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability. Will be sanitized as text.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability. Will be sanitized as html.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability. Will be sanitized as html.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability. Will be sanitized as html.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number). Will be sanitized as html.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailable': {'type': 'bool', 'position': 0, 'description': 'Set if an exploit is available for the vulnerability.'}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': "Set the timestamp when the exploit became available. Setting this value also expects setting exploitAvailable to 'true' with this request. Setting/leaving it to 0 will use current timestamp. (default 0)", 'default': 0}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity level of vulnerability definition. If not provided, then severity will be calculated based on CVSS value.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS score of vulnerability definition (range from 0 to 10). (default 0.0)', 'minimum': 0, 'maximum': 10, 'default': 0.0}}, 'description': 'Request to create a Vulnerability Definition'}}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh making the new vulnerability definition immediately searchable.', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
add_vulnerability_source = {'tags': ['assets/v2/vulnerability/source'], 'summary': 'Creates a new VulnerabilitySource (INTERNAL)', 'description': '', 'operationId': 'addVulnerabilitySource', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'VulnerabilitySource add request', 'required': False, 'schema': {'type': 'object', 'required': ['name', 'readPermission', 'shortName', 'writePermission'], 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'Vulnerability source short name, required and unique => [a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of source => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'readPermission': {'type': 'str', 'position': 0, 'description': 'Permission required to allow read access of source & vulnerability definition belong to this source => [a-zA-Z0-9_:\\-\\.]*'}, 'writePermission': {'type': 'str', 'position': 0, 'description': 'Permission required to allow write access (create/update/delete) source & of vulnerability definition belong to this source => [a-zA-Z0-9_:\\-\\.]*'}}, 'description': 'Request to create a Vulnerability Source'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}, 'readPermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'writePermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of vulnerability source', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'The source of observed Vulnerabilities and their Definitions e.g. a scanner'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
bulk_recast_observations = {'tags': ['assets/v2/vulnerability'], 'summary': 'Bulk recasts a set of observations. (PUBLIC)', 'description': '', 'operationId': 'bulkRecastObservations', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Observations bulk recast request', 'required': False, 'schema': {'type': 'object', 'required': ['observations', 'severity'], 'properties': {'observations': {'type': 'list', 'position': 0, 'description': "The observations' unique ids", 'uniqueItems': True, 'items': {'type': 'str'}, 'maxItems': 1000, 'minItems': 1}, 'severity': {'type': 'str', 'position': 0, 'description': 'New Severity.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'New CVSS score (range from 0 to 10).', 'minimum': 0, 'maximum': 10}}, 'description': "Request to bulk recast Observations. 'No update' ids will be skipped."}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the created ServiceTask.'}}, 'description': 'Bulk recast service task id and metadata.'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
bulk_resolve_vulnerabilities = {'tags': ['assets/v2/vulnerability'], 'summary': 'Bulk resolves a set of vulnerabilities. (PUBLIC)', 'description': '', 'operationId': 'bulkResolveVulnerabilities', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Vulnerability bulk resolve request', 'required': False, 'schema': {'type': 'object', 'required': ['resolution'], 'properties': {'observations': {'type': 'list', 'position': 0, 'description': "The observations' unique ids", 'uniqueItems': True, 'items': {'type': 'str'}, 'maxItems': 1000, 'minItems': 1}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Specify resolution reason.', 'enum': ['accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionExpiryTimestamp': {'type': 'str', 'position': 0, 'description': 'When will the current resolution expire (0 means no expiry). Allows unix timestamp (milliseconds), ISO timestamp, or relative time values. See https://docs.mnemonic.no/x/AQDXAQ (default 0)'}, 'comment': {'type': 'str', 'position': 0, 'description': 'Comment on why the vulnerability is resolved. If present will apply to all vulnerabilities in the request. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'ignoreResolved': {'type': 'bool', 'position': 0, 'description': 'Whether to reject the entire request if any of the observations are already resolved. (default false)', 'default': False}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_vulnerability = {'tags': ['assets/v2/vulnerability'], 'summary': 'Delete vulnerability (PUBLIC)', 'description': '', 'operationId': 'deleteVulnerability', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'vulnerability ID', 'required': True, 'type': 'str'}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh such that updates to the Vulnerability are immediately searchable', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_vulnerability_definition = {'tags': ['assets/v2/vulnerability/definition'], 'summary': 'Delete Vulnerability definition, also require to have read & write permission of vulnerability source that the definition is belonging to. (INTERNAL)', 'description': '', 'operationId': 'deleteVulnerabilityDefinition', 'produces': ['application/json'], 'parameters': [{'name': 'idOrVulnerabilityID', 'in': 'path', 'description': 'Vulnerability definition ID or identifier of vulnerability', 'required': True, 'type': 'str'}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh such that updates to the VulnerabilityDefinition are immediately searchable.', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_vulnerability_source = {'tags': ['assets/v2/vulnerability/source'], 'summary': 'Marks a VulnerabilitySource as deleted (INTERNAL)', 'description': '', 'operationId': 'deleteVulnerabilitySource', 'produces': ['application/json'], 'parameters': [{'name': 'source', 'in': 'path', 'description': 'VulnerabilitySource ID or short name', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}, 'readPermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'writePermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of vulnerability source', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'The source of observed Vulnerabilities and their Definitions e.g. a scanner'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_observations_by_vulnerability_compact_view = {'tags': ['development'], 'summary': "Search for observations and group them by their vulnerability along with each vulnerability's observation count.\nThis differs from the stats endpoint in that it supports sorting and pagination of the resulting collapsed vulnerability results.\n (DEV)", 'description': '', 'operationId': 'getObservationsByVulnerabilityCompactView', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Group observations by vulnerability request', 'required': False, 'schema': {'type': 'object', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerabilities'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerabilities'}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field(s) by which to sort the results (default -count)', 'items': {'type': 'str', 'enum': ['count', 'severity', '-count', '-severity']}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the results to the specified amount. (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip specified amount of results. (default 0)', 'minimum': 0, 'default': 0}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether to include deleted Vulnerabilities (default false)', 'default': False}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'count': {'type': 'int'}, 'definition': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
get_vulnerability_by_id = {'tags': ['assets/v2/vulnerability'], 'summary': 'Get Vulnerability by ID. (PUBLIC)', 'description': '', 'operationId': 'getVulnerabilityByID', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Vulnerability ID (UUID)', 'required': True, 'type': 'str'}, {'name': 'includeRawOutput', 'in': 'query', 'description': 'Whether include raw output, default not include', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_vulnerability_definition = {'tags': ['assets/v2/vulnerability/definition'], 'summary': 'Get Vulnerability definition, also require to have read permission of vulnerability source that the definition is belonging to. (PUBLIC)', 'description': '', 'operationId': 'getVulnerabilityDefinition', 'produces': ['application/json'], 'parameters': [{'name': 'idOrVulnerabilityID', 'in': 'path', 'description': 'Vulnerability definition ID or identifier of vulnerability', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_vulnerability_source = {'tags': ['assets/v2/vulnerability/source'], 'summary': 'Get VulnerabilitySource (INTERNAL)', 'description': '', 'operationId': 'getVulnerabilitySource', 'produces': ['application/json'], 'parameters': [{'name': 'source', 'in': 'path', 'description': 'VulnerabilitySource ID or short name', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}, 'readPermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'writePermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of vulnerability source', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'The source of observed Vulnerabilities and their Definitions e.g. a scanner'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_vulnerability_statistics = {'tags': ['development'], 'summary': 'Generate the requested statistics for Vulnerabilities matching the provided search criteria. (DEV)', 'description': '', 'operationId': 'getVulnerabilityStatistics', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Vulnerability Statistics Request', 'required': False, 'schema': {'type': 'object', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerabilities'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerabilities'}}, 'fieldAggregation': {'type': 'list', 'position': 0, 'description': '  The fields by which to group statistics.\n  The order of fieldAggregations in the request will determine the hierarchy of the aggregations and their buckets.\n', 'items': {'type': 'dict', 'required': ['field', 'limit'], 'properties': {'field': {'type': 'str', 'position': 0, 'description': 'The field by which to group vulnerabilities when generating statistics.', 'enum': ['customer', 'assetGroup', 'asset', 'vulnerabilityDefinition', 'severity', 'resolution']}, 'limit': {'type': 'int', 'position': 0, 'description': 'The maximum number of distinct categories for the given group field for which to generate statistics (default 25)', 'minimum': 1, 'default': 25}}, 'description': 'Request to instruct the service by which field(s) to group Vulnerability statistics'}}, 'rangeMetric': {'type': 'list', 'position': 0, 'description': 'The timestamp fields for which to generate statistics.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['field', 'name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The name for this aggregation. Must be unique for the parent statistics request. => [a-zA-Z0-9_:\\-\\.]*'}, 'field': {'type': 'str', 'position': 0, 'description': 'The timestamp field against which to filter', 'enum': ['created', 'deleted', 'lastSeen', 'lastUpdated', 'resolved', 'resolutionExpiry', 'timeToResolve']}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Filter the by this min value. Defaults to 0 i.e. 1970-01-01. (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Filter by this max value. Defaults to NOW'}, 'resolution': {'type': 'str', 'position': 0, 'description': 'If set, the temporal resolution by which to sub-aggregate the range metric i.e. by hour, day, week, month, or year', 'enum': ['day', 'hour', 'week', 'month', 'year']}, 'includeEmpty': {'type': 'bool', 'position': 0, 'description': 'Whether to return temporal buckets for the entire range regardless of whether they contain valuesMust be used with resolution. (default false)', 'default': False}}, 'description': 'Request for statistics for Vulnerability Observations filtered by a time range'}}, 'statisticsMetric': {'type': 'list', 'position': 0, 'description': 'The numerical fields for which to generate metrics.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['field'], 'properties': {'field': {'type': 'str', 'position': 0, 'description': 'The Vulnerability field for which we want statistics', 'enum': ['cvss', 'resolutionTime']}}, 'description': "Request for statistics for a set of Vulnerability Observations' numerical fields"}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether to include deleted Vulnerabilities (default false)', 'default': False}}, 'description': 'Parent request for statistics for a set of Vulnerability Observations'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'metadata': {'type': 'dict', 'properties': {'identifier': {'type': 'str', 'position': 0, 'description': "The aggregation container's identifier e.g. id or enum value"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The aggregation container's shortName. Depending on the type of metadata can also be used to retrieve the full object."}, 'name': {'type': 'str', 'position': 0, 'description': "The aggregation container's name."}, 'type': 'str', 'options': ['asset', 'customer', 'assetGroup', 'assetDefinition', 'vulnerabilityDefinition', 'vulnerabilitySeverity', 'resolution']}, 'description': 'Metadata for a stats aggregation container'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents contained within this record sharing the same metadata'}, 'buckets': {'type': 'list', 'position': 0, 'description': 'Metric buckets below this level, contains MetricRecords.', 'items': {'type': 'dict', 'properties': {'metadata': {'type': 'dict', 'properties': {'identifier': {'type': 'str', 'position': 0, 'description': "The aggregation container's identifier e.g. id or enum value"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The aggregation container's shortName. Depending on the type of metadata can also be used to retrieve the full object."}, 'name': {'type': 'str', 'position': 0, 'description': "The aggregation container's name."}, 'type': 'str', 'options': ['asset', 'customer', 'assetGroup', 'assetDefinition', 'vulnerabilityDefinition', 'vulnerabilitySeverity', 'resolution']}, 'description': 'Metadata for a stats aggregation container'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents contained within this record sharing the same metadata'}, 'buckets': {'type': 'list', 'position': 0, 'description': 'Metric buckets below this level, contains MetricRecords.', 'items': []}, 'rangeMetrics': {'type': 'list', 'position': 0, 'description': 'Range metrics for the requested fields. Only ever found at the bottom of the bucket hierarchy.', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric. Corresponds to the key defined in the StatisticsMetricRequest'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents whose field was used to calculate these metrics'}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'The min for the filter used when calculating the range metric. Corresponds to the startTimestamp defined in the RangeMetricRequest'}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'The max for the filter used when calculating the range metric. Corresponds to the endTimestamp defined in the RangeMetricRequest'}, 'resolution': {'type': 'str', 'position': 0, 'description': 'The temporal resolution by which to sub aggregate matching documents e.g. hour, day, week, month, year', 'enum': ['day', 'hour', 'week', 'month', 'year']}, 'dateHistogramBuckets': {'type': 'list', 'position': 0, 'description': 'If Resolution is defined in the request, this contains the resulting temporal groupings', 'items': {'type': 'dict', 'properties': {'key': {'type': 'string'}, 'count': {'type': 'int'}}, 'description': 'A date histogram bucket'}}}, 'description': 'Metric representing the number of documents that matched the timestamp filter for a given time field e.g. assets created within the last 2 weeks'}}, 'statisticsMetrics': {'type': 'list', 'position': 0, 'description': 'Statistics metrics for the requested fields. Only ever found at the bottom of the bucket hierarchy.', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric. Corresponds to the key defined in the StatisticsMetricRequest'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents whose field was used to calculate these metrics'}, 'min': {'type': 'float', 'position': 0, 'description': 'The minimum field value amongst the documents used to calculate these metrics'}, 'max': {'type': 'float', 'position': 0, 'description': 'The maximum field value amongst the documents used to calculate these metrics'}, 'avg': {'type': 'float', 'position': 0, 'description': 'The average field value of all the documents used to calculate these metrics'}, 'sum': {'type': 'float', 'position': 0, 'description': 'The total field value of all the documents used to calculate these metrics'}}, 'description': 'Statistics for a given numerical field for a set of matching documents'}}}, 'description': 'Container for statistics on data stored by the Asset Service'}}, 'rangeMetrics': {'type': 'list', 'position': 0, 'description': 'Range metrics for the requested fields. Only ever found at the bottom of the bucket hierarchy.', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric. Corresponds to the key defined in the StatisticsMetricRequest'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents whose field was used to calculate these metrics'}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'The min for the filter used when calculating the range metric. Corresponds to the startTimestamp defined in the RangeMetricRequest'}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'The max for the filter used when calculating the range metric. Corresponds to the endTimestamp defined in the RangeMetricRequest'}, 'resolution': {'type': 'str', 'position': 0, 'description': 'The temporal resolution by which to sub aggregate matching documents e.g. hour, day, week, month, year', 'enum': ['day', 'hour', 'week', 'month', 'year']}, 'dateHistogramBuckets': {'type': 'list', 'position': 0, 'description': 'If Resolution is defined in the request, this contains the resulting temporal groupings', 'items': {'type': 'dict', 'properties': {'key': {'type': 'string'}, 'count': {'type': 'int'}}, 'description': 'A date histogram bucket'}}}, 'description': 'Metric representing the number of documents that matched the timestamp filter for a given time field e.g. assets created within the last 2 weeks'}}, 'statisticsMetrics': {'type': 'list', 'position': 0, 'description': 'Statistics metrics for the requested fields. Only ever found at the bottom of the bucket hierarchy.', 'items': {'type': 'dict', 'properties': {'key': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric. Corresponds to the key defined in the StatisticsMetricRequest'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents whose field was used to calculate these metrics'}, 'min': {'type': 'float', 'position': 0, 'description': 'The minimum field value amongst the documents used to calculate these metrics'}, 'max': {'type': 'float', 'position': 0, 'description': 'The maximum field value amongst the documents used to calculate these metrics'}, 'avg': {'type': 'float', 'position': 0, 'description': 'The average field value of all the documents used to calculate these metrics'}, 'sum': {'type': 'float', 'position': 0, 'description': 'The total field value of all the documents used to calculate these metrics'}}, 'description': 'Statistics for a given numerical field for a set of matching documents'}}}, 'description': 'Container for statistics on data stored by the Asset Service'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_vulnerabilities = {'tags': ['assets/v2/vulnerability'], 'summary': 'Basic Vulnerability search. Will not return vulnerabilities seen more than 31 days ago.\nPlease use advanced search to return older vulnerabilities.\nIf start/end timestamps are present, the range must be valid\nfor at least one of the time stamp fields.\nCheck the documentation for the TimestampFieldStrategy field for more details. (PUBLIC)', 'description': '', 'operationId': 'listVulnerabilities', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Customer ids or short names', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'asset', 'in': 'query', 'description': 'Asset ids or short names. Will resolve with the provided customers, or those the current user has access to if none are provided', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'dataSource', 'in': 'query', 'description': 'Data source, identified by id or shortname, that detected the Vulnerability', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'vulnerabilityID', 'in': 'query', 'description': 'Vulnerability external ID', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'severity', 'in': 'query', 'description': 'Vulnerability Severity', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'collectionFormat': 'multi'}, {'name': 'resolution', 'in': 'query', 'description': 'Vulnerability Resolution', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': "Limit results. The sum of limit and offset must be <= 10'000 when not streaming", 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': "Offset results. The sum of limit and offset must be <= 10'000 when not streaming", 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted', 'required': False, 'type': 'bool', 'default': False}, {'name': 'includeRawOutput', 'in': 'query', 'description': 'Include raw output from scanner', 'required': False, 'type': 'bool', 'default': False}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Lower bound timestamp filter value', 'required': False, 'type': 'str', 'default': '0'}, {'name': 'endTimestamp', 'in': 'query', 'description': 'Upper bound timestamp filter value', 'required': False, 'type': 'str', 'default': '0'}, {'name': 'timeFieldStrategy', 'in': 'query', 'description': 'Which time field(s) to filter by timestamp start/end', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'all', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Field(s) to sort by - refer to the search POST endpoint to see which fields are permitted', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_vulnerability_definitions = {'tags': ['assets/v2/vulnerability/definition'], 'summary': 'Basic Vulnerability Definition search. (PUBLIC)', 'description': '', 'operationId': 'listVulnerabilityDefinitions', 'produces': ['application/json'], 'parameters': [{'name': 'vulnerabilityID', 'in': 'query', 'description': 'External Vulnerability ID', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': "Limit results. The sum of limit and offset must be <= 10'000 when not streaming", 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': "Offset results. The sum of limit and offset must be <= 10'000 when not streaming", 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted', 'required': False, 'type': 'bool', 'default': False}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Lower bound timestamp filter value', 'required': False, 'type': 'str', 'default': '0', 'minimum': 0}, {'name': 'endTimestamp', 'in': 'query', 'description': 'Upper bound timestamp filter value', 'required': False, 'type': 'str', 'default': '0', 'minimum': 0}, {'name': 'keywords', 'in': 'query', 'description': "Keywords to search by. Will return matches in any field defined by the 'all' KeywordFieldStrategy", 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Field(s) to sort by - refer to the search POST endpoint to see which fields are permitted', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
reopen_vulnerability = {'tags': ['assets/v2/vulnerability'], 'summary': 'Reopens a vulnerability, marking it as unresolved. (PUBLIC)', 'description': '', 'operationId': 'reopenVulnerability', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Vulnerability ID', 'required': True, 'type': 'str'}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh such that the reopened vulnerability is immediately searchable.', 'required': False, 'type': 'bool', 'default': False}, {'in': 'body', 'name': 'body', 'description': 'Vulnerability reopen request', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Comment describing why the vulnerability should be reopened'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
resolve_vulnerability = {'tags': ['assets/v2/vulnerability'], 'summary': 'Resolves a vulnerability. (PUBLIC)', 'description': '', 'operationId': 'resolveVulnerability', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Vulnerability ID', 'required': True, 'type': 'str'}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh such that the resolved vulnerability is immediately searchable.', 'required': False, 'type': 'bool', 'default': False}, {'in': 'body', 'name': 'body', 'description': 'Vulnerability resolve request', 'required': False, 'schema': {'type': 'object', 'required': ['comment', 'resolution'], 'properties': {'resolution': {'type': 'str', 'position': 0, 'description': 'Specify resolution reason.', 'enum': ['accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionExpiryTimestamp': {'type': 'str', 'position': 0, 'description': 'When will the current resolution expire (0 means no expiry). Allows unix timestamp (milliseconds), ISO timestamp, or relative time values. See https://docs.mnemonic.no/x/AQDXAQ (default 0)'}, 'comment': {'type': 'str', 'position': 0, 'description': 'Comment on why the vulnerability is resolved. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_vulnerabilities = {'tags': ['assets/v2/vulnerability'], 'summary': 'Search Vulnerabilities (PUBLIC)', 'description': '', 'operationId': 'searchVulnerabilities', 'consumes': ['application/json'], 'produces': ['application/json', 'text/csv', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], 'parameters': [{'name': 'Accept', 'in': 'header', 'required': False, 'type': 'string'}, {'name': 'exportFields', 'in': 'query', 'description': 'Select order of and fields to export.', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['vulnerabilityId', 'severity', 'cvss', 'definitionName', 'definitionFlags', 'assetName', 'customerName', 'resolution', 'resolutionExpiryTimestamp', 'createdTimestamp', 'createdByUserName', 'lastUpdatedTimestamp', 'lastUpdatedByUserName', 'resolutionTimestamp', 'resolvedByUserName', 'firstSeenTimestamp', 'firstSeenByUserName', 'lastSeenTimestamp', 'lastSeenByUserName', 'deletedTimestamp', 'deletedByUserName', 'resolutionComment', 'components', 'definitionExploitAvailable', 'references']}, 'collectionFormat': 'multi'}, {'name': 'exportComponents', 'in': 'query', 'description': 'Select which component values to include in the export.', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'in': 'body', 'name': 'body', 'description': 'Vulnerability search request', 'required': False, 'schema': {'type': 'object', 'properties': {'order': {'type': 'list', 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by their definition keywords against definition text fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be queried for keywords (defaults to all observation fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'observationAll', 'definitionAll', 'name', 'description', 'observationDescription', 'solution', 'conclusion', 'references', 'observationReferences', 'vulnerabilityID', 'assetName']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'references': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their definition references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities by exact matches in their references', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastSeenTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'expireTimestamp', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailable']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields will be filtered with user ids or shortnames (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'resolvedByUser', 'firstSeenByUser', 'lastSeenByUser', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by these users, identified by their id or username', 'uniqueItems': True, 'items': {'type': 'string'}}, 'asset': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on these assets by asset id or shortNames. As assets are customer specific we will resolve the assets for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'assetGroup': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities detected on assets who are members or descendants of these groups identified by id or shortNames. As asset groups are customer specific we will resolve the groups for the customers provided in the criteria, if any. If none are provided, we attempt to use the customers the current user has access to.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by their vulnerability definition id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities by Customer id or name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these severities', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'resolution': {'type': 'list', 'position': 0, 'description': 'Retrieve vulnerabilities with these resolutions', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}}, 'dataSource': {'type': 'list', 'position': 0, 'description': 'Search for vulnerabilities detected and reported by these data sources, identified by id or shortName', 'uniqueItems': True, 'items': {'type': 'string'}}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at least this CVSS score', 'minimum': 0, 'maximum': 10}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Retrieve Vulnerabilities with at most this CVSS score', 'minimum': 0, 'maximum': 10}, 'component': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities with these components', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Search criteria for searching for vulnerabilities by their components'}}, 'assetComponent': {'type': 'list', 'position': 0, 'description': 'Search for Vulnerabilities observed on Assets containing these components using AND search mode i.e. all criteria must match.<br />If you want different behaviour try using subcriteria', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'The ComponentDefinition ID or shortName'}, 'value': {'type': 'list', 'position': 0, 'description': "Restrict to components with field value matching any of the specified values. If the value is of the wrong type for the component's definition the search will fail.", 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': "Search criteria for searching for Assets by their Components' properties"}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly retrieve Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out Vulnerabilities that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'exploitAvailable']}}, 'includeRawOutput': {'type': 'bool', 'position': 0, 'description': 'Whether to include raw output in the result objects (default false)', 'default': False}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerabilities'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerabilities'}}, 'limit': {'type': 'int', 'position': 0, 'description': "Limit the results to the specified amount. If the sum of offset and limit is greater than 10'000 the results will likely be incomplete as 10'000 exceeds the search engine's maximum result window. (default 25)", 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': "Skip specified amount of results. If the sum of offset and limit is greater than 10'000 the results will likely be incomplete as 10'000 exceeds the search engine's maximum result window. (default 0)", 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field(s) by which to sort the results', 'items': {'type': 'str', 'enum': ['vulnerabilityID', 'cvss', 'severity', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'firstSeenTimestamp', 'lastSeenTimestamp', 'resolutionTimestamp', 'resolutionExpiryTimestamp', 'expireTimestamp', 'socketComponent', '-vulnerabilityID', '-cvss', '-severity', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp', '-firstSeenTimestamp', '-lastSeenTimestamp', '-resolutionTimestamp', '-resolutionExpiryTimestamp', '-expireTimestamp', '-socketComponent']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether to include deleted Vulnerabilities (default false)', 'default': False}, 'indexStartTimestamp': {'type': 'str', 'position': 0, 'description': 'Limit search to indices created on or after this timestamp. Must be in the range [12 months ago - today].'}, 'indexEndTimestamp': {'type': 'str', 'position': 0, 'description': 'Limit search to indices created on or before this timestamp. Must be in the range [12 months ago - today].'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_vulnerability_definitions = {'tags': ['assets/v2/vulnerability/definition'], 'summary': 'Search Vulnerability Definitions (PUBLIC)', 'description': '', 'operationId': 'searchVulnerabilityDefinitions', 'consumes': ['application/json'], 'produces': ['application/json', 'text/csv', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], 'parameters': [{'name': 'Accept', 'in': 'header', 'required': False, 'type': 'string'}, {'name': 'exportFields', 'in': 'query', 'description': 'Select order of and fields to export.', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['references', 'definitionName', 'definitionExploitAvailable', 'definitionExploitPublished', 'sourceName', 'createdTimestamp', 'lastUpdatedTimestamp']}, 'collectionFormat': 'multi'}, {'in': 'body', 'name': 'body', 'description': 'Vulnerability Definition search request', 'required': False, 'schema': {'type': 'object', 'properties': {'order': {'type': 'list', 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'name', 'description', 'solution', 'conclusion', 'references', 'vulnerabilityID']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'vulnerabilitySource': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their source ID or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their internal db ID or vulnerabilityID', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailableTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields to filter with the submitted user value(s) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Search for VulnerabilityDefinitions by associated user IDs or short names defined by the UserFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly search for VulnerabilityDefinitions that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out VulnerabilityDefinitions that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by Severity.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by CVSS lower or equal than.', 'minimum': 0, 'maximum': 10}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by CVSS higher or equal than.', 'minimum': 0, 'maximum': 10}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'name', 'description', 'solution', 'conclusion', 'references', 'vulnerabilityID']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'vulnerabilitySource': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their source ID or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their internal db ID or vulnerabilityID', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailableTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields to filter with the submitted user value(s) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Search for VulnerabilityDefinitions by associated user IDs or short names defined by the UserFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly search for VulnerabilityDefinitions that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out VulnerabilityDefinitions that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by Severity.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by CVSS lower or equal than.', 'minimum': 0, 'maximum': 10}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by CVSS higher or equal than.', 'minimum': 0, 'maximum': 10}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by a KeywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'name', 'description', 'solution', 'conclusion', 'references', 'vulnerabilityID']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default any)', 'enum': ['any', 'all']}, 'vulnerabilitySource': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their source ID or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their external ID e.g. CVE-XXXX', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityDefinition': {'type': 'list', 'position': 0, 'description': 'Retrieve definitions by their internal db ID or vulnerabilityID', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps fields will be filtered with start/endTimestamp (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailableTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'userFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which user fields to filter with the submitted user value(s) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'createdByUser', 'lastUpdatedByUser', 'deletedByUser']}}, 'user': {'type': 'list', 'position': 0, 'description': 'Search for VulnerabilityDefinitions by associated user IDs or short names defined by the UserFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly search for VulnerabilityDefinitions that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Explicitly filter out VulnerabilityDefinitions that contain these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'list', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by Severity.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['info', 'low', 'medium', 'high', 'critical']}}, 'maximumCvss': {'type': 'float', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by CVSS lower or equal than.', 'minimum': 0, 'maximum': 10}, 'minimumCvss': {'type': 'float', 'position': 0, 'description': 'Filter VulnerabilityDefinitions by CVSS higher or equal than.', 'minimum': 0, 'maximum': 10}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria that are applied with logical OR by default', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerability Definitions'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching these criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerability Definitions'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the results to the specified amount (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip specified amount of results (default 0)', 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field(s) by which to sort the results', 'items': {'type': 'str', 'enum': ['name', 'vulnerabilityID', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'exploitAvailableTimestamp', '-name', '-vulnerabilityID', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp', '-exploitAvailableTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether to include deleted Vulnerability Definitions (default false)', 'default': False}}, 'description': 'Search criteria for searching for Vulnerability Definitions'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_vulnerability_sources = {'tags': ['assets/v2/vulnerability/source'], 'summary': 'Search VulnerabilitySource with specified criteria (INTERNAL)', 'description': '', 'operationId': 'searchVulnerabilitySources', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request', 'required': False, 'schema': {'type': 'object', 'properties': {'source': {'type': 'list', 'position': 0, 'description': 'Restrict to specified Vulnerability source (ID or short name)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by keywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['shortName', 'name', 'all']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default all)', 'enum': ['any', 'all']}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp) (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria which are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'source': {'type': 'list', 'position': 0, 'description': 'Restrict to specified Vulnerability source (ID or short name)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by keywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['shortName', 'name', 'all']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default all)', 'enum': ['any', 'all']}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp) (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria which are applied with logical OR by default', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'source': {'type': 'list', 'position': 0, 'description': 'Restrict to specified Vulnerability source (ID or short name)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Search for keywords against fields defined by keywordFieldStrategy', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields) (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['shortName', 'name', 'all']}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict different keywords should be matched (default match all keywords) (default all)', 'enum': ['any', 'all']}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)'}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp) (default lastUpdatedTimestamp)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) (default any)', 'enum': ['any', 'all']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria which are applied with logical OR by default', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerability Sources'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this criteria will be excluded (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this criteria are required (logical AND-ed together with parent criteria) (default false)', 'default': False}}, 'description': 'Search sub-criteria for searching for Vulnerability Sources'}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether include deleted results (default false)', 'default': False}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit maximum amount of results (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip specified amount of results (default 0)', 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field(s) by which to sort the results', 'items': {'type': 'str', 'enum': ['shortName', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-shortName', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}, 'readPermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'writePermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of vulnerability source', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'The source of observed Vulnerabilities and their Definitions e.g. a scanner'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_vulnerability_sources_simplified = {'tags': ['assets/v2/vulnerability/source'], 'summary': 'Search VulnerabilitySources with specified query parameters (INTERNAL)', 'description': '', 'operationId': 'searchVulnerabilitySourcesSimplified', 'produces': ['application/json'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywordField', 'in': 'query', 'description': 'Set field strategy for keyword search', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'all', 'enum': ['shortName', 'name', 'all']}, 'collectionFormat': 'multi'}, {'name': 'keywordMatch', 'in': 'query', 'description': 'Set match strategy for keyword search', 'required': False, 'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, {'name': 'startTimestamp', 'in': 'query', 'description': 'Start timestamp for time range search', 'required': False, 'type': 'str', 'default': '0'}, {'name': 'endTimestamp', 'in': 'query', 'description': 'End timestamp for time range search', 'required': False, 'type': 'str', 'default': '0'}, {'name': 'timeField', 'in': 'query', 'description': 'Set field strategy for time range search', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'lastUpdatedTimestamp', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', 'all']}, 'collectionFormat': 'multi'}, {'name': 'timeMatch', 'in': 'query', 'description': 'Set match strategy for time range search', 'required': False, 'type': 'str', 'default': 'any', 'enum': ['any', 'all']}, {'name': 'source', 'in': 'query', 'description': 'Search by sources (ID or short name)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}, 'readPermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'writePermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of vulnerability source', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'The source of observed Vulnerabilities and their Definitions e.g. a scanner'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_vulnerability = {'tags': ['assets/v2/vulnerability'], 'summary': 'Updates an existing Vulnerability (PUBLIC)', 'description': '', 'operationId': 'updateVulnerability', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'vulnerability ID', 'required': True, 'type': 'str'}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh such that changes to the vulnerability are immediately searchable.', 'required': False, 'type': 'bool', 'default': False}, {'name': 'updateLastSeen', 'in': 'query', 'description': 'Temporary field added to make updating lastSeenTimestamp/UserId easier. ', 'required': False, 'type': 'bool', 'default': False}, {'in': 'body', 'name': 'body', 'description': 'Vulnerability update request', 'required': False, 'schema': {'type': 'object', 'properties': {'vulnerabilityDefinition': {'type': 'str', 'position': 0, 'description': 'Assign vulnerability definition. Only allowed when there was no vulnerability definition assigned.'}, 'addComponents': {'type': 'list', 'position': 0, 'description': 'Specify components to be added with the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'value'], 'properties': {'componentDefinition': {'type': 'str', 'position': 0, 'description': 'ID or short name of component definition, it should exist within asset definition for the owning asset'}, 'value': {'type': 'str', 'position': 0, 'description': "Value for the vulnerability component, type of value should match component definition's requirement"}, 'ttl': {'type': 'int', 'position': 0, 'description': "Time to live duration of this component since last seen, 0 means won't expire.", 'minimum': 0}}, 'description': 'Request to add component(s) to a vulnerability'}}, 'deleteComponents': {'type': 'list', 'position': 0, 'description': 'Specify IDs of the components to be deleted from the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'Update CVSS score of vulnerability (range from 0 to 10).', 'minimum': 0, 'maximum': 10}, 'severity': {'type': 'str', 'position': 0, 'description': 'Update severity level of vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Update raw output from vulnerability scan. Will be sanitized as html.'}, 'ttl': {'type': 'int', 'position': 0, 'description': "Time to live duration of this vulnerability since last seen, 0 means won't expire.", 'minimum': 0}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this vulnerability. May contain customer specific data. Will be sanitized as HTML.'}, 'addObservationReferences': {'type': 'list', 'position': 0, 'description': 'Add references specific to this vulnerability e.g. internal URLs. May contain customer specific data. Will be sanitized as HTML.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'deleteObservationReferences': {'type': 'list', 'position': 0, 'description': 'Delete references specific to this vulnerability. Will be sanitized as HTML first before checking against existing references.', 'uniqueItems': True, 'items': {'type': 'string'}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['asset', 'customer', 'cvss', 'resolution', 'severity', 'vulnerabilityID'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'asset': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'dataSourceID': {'type': 'str', 'position': 0, 'description': 'ID of the Data Source that reported this asset'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of the asset'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset'}}, 'description': "Compact representation of an Asset's metadata"}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'vulnerabilityDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}}, 'description': "Compact representation of a Vulnerability Definition's metadata"}, 'observationDescription': {'type': 'str', 'position': 0, 'description': 'Description specific to this observed vulnerability. May contain customer specific data.'}, 'observationReferences': {'type': 'list', 'position': 0, 'description': 'References specific to this observed vulnerability e.g. internal URLS. May contain customer specific data.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'components': {'type': 'list', 'position': 0, 'description': 'Components of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['componentDefinition', 'type'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'componentDefinition': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of component definition'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of component definition'}, 'type': 'str', 'visibility': {'type': 'str', 'position': 0, 'description': 'Whether this Component Definition is appropriate for Assets, Vulnerabilities, or both', 'enum': ['any', 'asset', 'vulnerability']}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': "Compact representation of a Component Definition's metadata"}, 'type': 'str', 'value': {'type': 'dict', 'position': 0, 'description': 'Value of the component, depends on type the presentation could be different.'}, 'dataSource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of data source'}}, 'description': "Compact representation of a Data Source's metadata"}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was seen the last time'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the component was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the component.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'options': ['booleanType', 'intType', 'longType', 'doubleType', 'stringType', 'fullTextType', 'ipType', 'socketType', 'domainType', 'cpeType', 'userType', 'assetType', 'dateType']}, 'description': 'An Vulnerability Component is a piece of information, whose validity can potentially be quantified and expired, describing an aspect of a Vulnerability'}}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability.'}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'Resolution of the vulnerability.', 'enum': ['unresolved', 'accepted', 'temporarilyAccepted', 'falsePositive', 'serviceNotAvailable', 'noLongerVulnerable']}, 'resolutionTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was resolved.'}, 'resolutionExpiryTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the resolution will expire (0 means no expiry).'}, 'resolvedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'resolutionComment': {'type': 'str', 'position': 0, 'description': 'Comment for the vulnerability resolution.'}, 'rawOutput': {'type': 'str', 'position': 0, 'description': 'Raw output from vulnerability scan.'}, 'firstSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the first time.'}, 'lastSeenTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was seen the last time.'}, 'firstSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastSeenByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'ttl': {'type': 'int', 'position': 0, 'description': 'Time to live duration of this vulnerability'}, 'expireTimestamp': {'type': 'int', 'position': 0, 'description': "When would the vulnerability be expired, determined by 'lastSeenTimestamp + ttl'"}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability was deleted. If 0 it is undeleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'controlledVersion', 'createdByCVM', 'updatedByCVM', 'detectedByCVM', 'missingFromCVM', 'deletedFromCVM', 'definitionMissing', 'overwrittenDefinitionCVSS', 'overwrittenDefinitionSeverity']}}}, 'description': 'A Vulnerability observed on an Asset'}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_vulnerability_definition = {'tags': ['assets/v2/vulnerability/definition'], 'summary': 'Updates an existing Vulnerability definition, also require to have read & write permission of vulnerability source that the definition is belonging to. (INTERNAL)', 'description': '', 'operationId': 'updateVulnerabilityDefinition', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrVulnerabilityID', 'in': 'path', 'description': 'Vulnerability definition ID or identifier of vulnerability', 'required': True, 'type': 'str'}, {'name': 'forceIndex', 'in': 'query', 'description': 'Whether to force an Elasticsearch index refresh such that changes to the VulnerabilityDefinition are immediately searchable.', 'required': False, 'type': 'bool', 'default': False}, {'in': 'body', 'name': 'body', 'description': 'Vulnerability definition update request', 'required': False, 'schema': {'type': 'object', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Update name of the vulnerability definition. Will be sanitized as text.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Update description of the vulnerability definition. Will be sanitized as html.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'Update how to fix the vulnerability. Will be sanitized as html.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Update short summary of the vulnerability. Will be sanitized as html.'}, 'addReferences': {'type': 'list', 'position': 0, 'description': 'Add references to the vulnerability definition (e.g. CVE number). Will be sanitized as html.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'deleteReferences': {'type': 'list', 'position': 0, 'description': 'Delete references from the vulnerability definition. Will be sanitized as html first before check against existing references.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailable': {'type': 'bool', 'position': 0, 'description': 'Update whether an exploit is available for the vulnerability.'}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': "Set or update the timestamp when the exploit became available. Setting this value also expects having exploitAvailable as 'true' or setting it with this request. If it hasn't been set before, then setting/leaving it to 0 will use current timestamp. (default 0)", 'default': 0}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS score of vulnerability (range from 0 to 10).', 'minimum': 0, 'maximum': 10}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity level of vulnerability. If not provided, then severity will be calculated based on CVSS value.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'updateObservations': {'type': 'bool', 'position': 0, 'description': 'If true this will trigger updating all active (non-deleted with resolution status: unresolved,\naccepted or temp_accepted) Observations thus overwriting their current Severity/CVSS values. Unless\nthe values were previously overwritten manually. (default false)', 'default': False}}, 'description': 'Request to update a Vulnerability Definition'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['vulnerabilityID', 'vulnerabilitySource'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'vulnerabilitySource': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}}, 'description': "Compact representation of a Vulnerability Sources's metadata"}, 'vulnerabilityID': {'type': 'str', 'position': 0, 'description': 'Identifier of vulnerability (e.g. plug-in ID from vulnerability scanner).'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability.'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of vulnerability.'}, 'solution': {'type': 'str', 'position': 0, 'description': 'How to fix vulnerability.'}, 'conclusion': {'type': 'str', 'position': 0, 'description': 'Short summary of vulnerability.'}, 'references': {'type': 'list', 'position': 0, 'description': 'References to vulnerability (e.g. CVE number).', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exploitAvailableTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the exploit became available.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was created.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability definition was deleted.'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of the vulnerability definition.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'exploitAvailable']}}, 'severity': {'type': 'str', 'position': 0, 'description': 'Severity of the vulnerability definition.', 'enum': ['info', 'low', 'medium', 'high', 'critical']}, 'cvss': {'type': 'float', 'position': 0, 'description': 'CVSS of the vulnerability definition (scale 0-10).'}}, 'description': 'A Vulnerability Definition determines what kind of components may be attached to Vulnerabilities of this type and contains qualitative informationdescribing the Vulnerability and eventual mitigation/resolution procedures'}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_vulnerability_source = {'tags': ['assets/v2/vulnerability/source'], 'summary': 'Updates an existing VulnerabilitySource (INTERNAL)', 'description': '', 'operationId': 'updateVulnerabilitySource', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'source', 'in': 'path', 'description': 'VulnerabilitySource ID or short name', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'VulnerabilitySource update request', 'required': False, 'schema': {'type': 'object', 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'Update short name of vulnerability source => [a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'Update name of vulnerability source => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'readPermission': {'type': 'str', 'position': 0, 'description': 'Update the permission required to allow read access of source & vulnerability definition belong to the source => [a-zA-Z0-9_:\\-\\.]*'}, 'writePermission': {'type': 'str', 'position': 0, 'description': 'Update the permission required to allow write access (create/update/delete) of source & vulnerability definition belong to the source => [a-zA-Z0-9_:\\-\\.]*'}}, 'description': 'Request to update a Vulnerability Source'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of vulnerability source'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of vulnerability source'}, 'readPermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'writePermission': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was last updated'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the vulnerability source was deleted'}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags of vulnerability source', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'The source of observed Vulnerabilities and their Definitions e.g. a scanner'}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}