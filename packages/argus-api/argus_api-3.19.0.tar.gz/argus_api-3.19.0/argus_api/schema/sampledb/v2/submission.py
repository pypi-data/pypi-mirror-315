"""Autogenerated API schema"""
from argus_api import session


submission_advanced_search = {'tags': ['development'], 'summary': 'Advanced search for submissions (DEV)', 'description': '', 'operationId': 'submissionAdvancedSearch', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Submission search request', 'required': False, 'schema': {'type': 'object', 'properties': {'id': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the IDs defined', 'uniqueItems': True, 'items': {'type': 'str'}}, 'sampleSha256': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'userAgent': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the user agents defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'version': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined versions', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined names', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The user agent request used in sample search'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['red', 'amber', 'green', 'clear']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp) (default any)', 'enum': ['all', 'any']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Search sub criteria', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the IDs defined', 'uniqueItems': True, 'items': {'type': 'str'}}, 'sampleSha256': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'userAgent': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the user agents defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'version': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined versions', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined names', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The user agent request used in sample search'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['red', 'amber', 'green', 'clear']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp) (default any)', 'enum': ['all', 'any']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Search sub criteria', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the IDs defined', 'uniqueItems': True, 'items': {'type': 'str'}}, 'sampleSha256': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'userAgent': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the user agents defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'version': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined versions', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined names', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The user agent request used in sample search'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['red', 'amber', 'green', 'clear']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp) (default any)', 'enum': ['all', 'any']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Search sub criteria', 'uniqueItems': True, 'items': []}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'mimeType': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the mime types defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaData': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'path': {'type': 'str', 'position': 0, 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'value': {'type': 'list', 'position': 0, 'description': "Values to match against the field pointed to by 'path'", 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria is a requirement'}}, 'description': 'Request used to search for sample metadata'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords to search for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match one or more of the keywords (default all)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Restrict to search only in the selected keyword fields (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions not containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'fileName': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the file names defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria should be excluded from search results (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria is a requirement (default false)', 'default': False}}, 'description': 'Request used for submission sub criteria search'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'mimeType': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the mime types defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaData': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'path': {'type': 'str', 'position': 0, 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'value': {'type': 'list', 'position': 0, 'description': "Values to match against the field pointed to by 'path'", 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria is a requirement'}}, 'description': 'Request used to search for sample metadata'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords to search for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match one or more of the keywords (default all)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Restrict to search only in the selected keyword fields (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions not containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'fileName': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the file names defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria should be excluded from search results (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria is a requirement (default false)', 'default': False}}, 'description': 'Request used for submission sub criteria search'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'mimeType': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the mime types defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaData': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'path': {'type': 'str', 'position': 0, 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'value': {'type': 'list', 'position': 0, 'description': "Values to match against the field pointed to by 'path'", 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria is a requirement'}}, 'description': 'Request used to search for sample metadata'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords to search for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match one or more of the keywords (default all)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Restrict to search only in the selected keyword fields (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions not containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'fileName': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the file names defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip a number of search results (default 0)', 'minimum': 0, 'maximum': 10000, 'default': 0}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the number of search results (default 25)', 'minimum': 0, 'maximum': 10000, 'default': 25}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Specify sort ordering for returned submissions (default -submittedTimestamp)', 'items': {'type': 'str', 'enum': ['fileName', 'mimeType', 'expiryTimestamp', 'observedTimestamp', 'submittedTimestamp', '-fileName', '-mimeType', '-expiryTimestamp', '-observedTimestamp', '-submittedTimestamp']}}, 'indexStartTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search (default now - 1 month)'}, 'indexEndTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search (default now)'}}, 'description': 'Request used for submission search'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'sampleSha256': {'type': 'str', 'position': 0, 'description': 'The sample this submission belongs to'}, 'fileName': {'type': 'str', 'position': 0, 'description': 'The filename of the sample'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'observedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp for when the sample was observed'}, 'submittedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp for when the submission was added'}, 'mimeType': {'type': 'str', 'position': 0, 'description': 'The sample mime type'}, 'metaData': {'type': 'dict', 'position': 0, 'description': 'Meta data about the sample', 'additionalProperties': {'type': 'string'}}, 'tlp': {'type': 'str', 'position': 0, 'description': 'TLP color of the submission', 'enum': ['red', 'amber', 'green', 'clear']}, 'acl': {'type': 'list', 'position': 0, 'description': 'List of access controls that describe explicit access given to users or groups for this submission', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'subject': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI SubjectInfo'}, 'grantedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'grantedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time at which the explicit access was granted'}}, 'description': 'Response model for access control'}}, 'userAgent': {'type': 'dict', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The name of the user agent'}, 'version': {'type': 'str', 'position': 0, 'description': 'The version of the user agent'}}, 'description': 'Model used for representing a user agent'}, 'expiryTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the submission will be deleted'}, 'flags': {'type': 'list', 'position': 0, 'description': 'The flags set on this submission', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}}, 'description': 'A submission for a sample. Represents the observation of a sample at a customer site'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
submission_simple_search = {'tags': ['development'], 'summary': 'Simple search for submissions (DEV)', 'description': '', 'operationId': 'submissionSimpleSearch', 'produces': ['application/json'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Number of results to skip', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': "Fields to sort the results by. Prefix with '-' to sort descending", 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': '-observedTimestamp', 'enum': ['fileName', 'mimeType', 'expiryTimestamp', 'observedTimestamp', 'submittedTimestamp', '-fileName', '-mimeType', '-expiryTimestamp', '-observedTimestamp', '-submittedTimestamp']}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'A set of keywords to search for', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywordFieldStrategy', 'in': 'query', 'description': 'Which fields to search on', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'all', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}, 'collectionFormat': 'multi'}, {'name': 'keywordMatchStrategy', 'in': 'query', 'description': 'Whether the keywords must match all or any of the keyword fields', 'required': False, 'type': 'str', 'default': 'any', 'enum': ['all', 'any']}, {'name': 'indexStartTimestamp', 'in': 'query', 'description': 'Restrict search to data after this time. Timestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp. See the general integration guide for more details', 'required': False, 'type': 'str', 'default': 'now - 1 month'}, {'name': 'indexEndTimestamp', 'in': 'query', 'description': 'Restrict search to data before this time. Timestamps can be milliseconds since epoch, ISO8601 timestamp, or a string with a relative timestamp. See the general integration guide for more details', 'required': False, 'type': 'str', 'default': 'now'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object.'}, 'sampleSha256': {'type': 'str', 'position': 0, 'description': 'The sample this submission belongs to'}, 'fileName': {'type': 'str', 'position': 0, 'description': 'The filename of the sample'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'observedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp for when the sample was observed'}, 'submittedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp for when the submission was added'}, 'mimeType': {'type': 'str', 'position': 0, 'description': 'The sample mime type'}, 'metaData': {'type': 'dict', 'position': 0, 'description': 'Meta data about the sample', 'additionalProperties': {'type': 'string'}}, 'tlp': {'type': 'str', 'position': 0, 'description': 'TLP color of the submission', 'enum': ['red', 'amber', 'green', 'clear']}, 'acl': {'type': 'list', 'position': 0, 'description': 'List of access controls that describe explicit access given to users or groups for this submission', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'subject': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI SubjectInfo'}, 'grantedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'grantedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time at which the explicit access was granted'}}, 'description': 'Response model for access control'}}, 'userAgent': {'type': 'dict', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The name of the user agent'}, 'version': {'type': 'str', 'position': 0, 'description': 'The version of the user agent'}}, 'description': 'Model used for representing a user agent'}, 'expiryTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the submission will be deleted'}, 'flags': {'type': 'list', 'position': 0, 'description': 'The flags set on this submission', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}}, 'description': 'A submission for a sample. Represents the observation of a sample at a customer site'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
submission_statistics = {'tags': ['development'], 'summary': 'Aggregation for Submission statistics (DEV)', 'description': '', 'operationId': 'submissionStatistics', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Submission statistics request', 'required': False, 'schema': {'type': 'object', 'properties': {'id': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the IDs defined', 'uniqueItems': True, 'items': {'type': 'str'}}, 'sampleSha256': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'userAgent': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the user agents defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'version': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined versions', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined names', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The user agent request used in sample search'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['red', 'amber', 'green', 'clear']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp) (default any)', 'enum': ['all', 'any']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Search sub criteria', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the IDs defined', 'uniqueItems': True, 'items': {'type': 'str'}}, 'sampleSha256': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'userAgent': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the user agents defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'version': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined versions', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined names', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The user agent request used in sample search'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['red', 'amber', 'green', 'clear']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp) (default any)', 'enum': ['all', 'any']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Search sub criteria', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the IDs defined', 'uniqueItems': True, 'items': {'type': 'str'}}, 'sampleSha256': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the sample sha256s defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'userAgent': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the user agents defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'version': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined versions', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'list', 'position': 0, 'description': 'Restrict the search to user agents with either of the defined names', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'The user agent request used in sample search'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions where it must contain any of the defined TLPs', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['red', 'amber', 'green', 'clear']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': "Restrict the search by timestamp (indicated by startTimestamp and endTimestamp) to these fields. Default is 'all'", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match the time period (indicated by startTimestamp and endTimestamp) (default any)', 'enum': ['all', 'any']}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Search sub criteria', 'uniqueItems': True, 'items': []}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'mimeType': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the mime types defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaData': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'path': {'type': 'str', 'position': 0, 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'value': {'type': 'list', 'position': 0, 'description': "Values to match against the field pointed to by 'path'", 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria is a requirement'}}, 'description': 'Request used to search for sample metadata'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords to search for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match one or more of the keywords (default all)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Restrict to search only in the selected keyword fields (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions not containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'fileName': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the file names defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria should be excluded from search results (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria is a requirement (default false)', 'default': False}}, 'description': 'Request used for submission sub criteria search'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'mimeType': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the mime types defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaData': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'path': {'type': 'str', 'position': 0, 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'value': {'type': 'list', 'position': 0, 'description': "Values to match against the field pointed to by 'path'", 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria is a requirement'}}, 'description': 'Request used to search for sample metadata'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords to search for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match one or more of the keywords (default all)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Restrict to search only in the selected keyword fields (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions not containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'fileName': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the file names defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria should be excluded from search results (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this sub-criteria is a requirement (default false)', 'default': False}}, 'description': 'Request used for submission sub criteria search'}}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis). Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/api/general_integration_guide/08-time_fields.html#api-iguide-general-time-search'}, 'mimeType': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the mime types defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'metaData': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the meta data properties defined', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'path': {'type': 'str', 'position': 0, 'description': 'The path (dot-notation) to the field to match the value against. May not contain spaces'}, 'value': {'type': 'list', 'position': 0, 'description': "Values to match against the field pointed to by 'path'", 'uniqueItems': True, 'items': {'type': 'string'}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria should be excluded from search results'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Whether documents matching this criteria is a requirement'}}, 'description': 'Request used to search for sample metadata'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords to search for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Whether all or any (default) of the fields must match one or more of the keywords (default all)', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Restrict to search only in the selected keyword fields (default all)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['all', 'id', 'sampleSha256', 'fileName', 'mimeType', 'metaData', 'tlp', 'userAgent']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions not containing any of the specified flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['trustedAgent', 'eventGeneratedNormal', 'eventGeneratedAlerted', 'eventGeneratedAlertedFlood']}}, 'fileName': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions with any of the file names defined', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict the search to submissions owned by certain customers identified by id or shortname', 'uniqueItems': True, 'items': {'type': 'string'}}, 'indexStartTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. (default now - 1 month)'}, 'indexEndTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis)Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. (default now)'}, 'groupBy': {'type': 'list', 'position': 0, 'description': 'The fields by which to group statistics', 'items': {'type': 'dict', 'required': ['field', 'limit'], 'properties': {'field': {'type': 'str', 'position': 0, 'description': 'The field by which to group Submissions when generating statistics', 'enum': ['customer', 'fileName', 'sampleSha256', 'mimeType', 'tlp', 'metaData']}, 'limit': {'type': 'int', 'position': 0, 'description': 'The maximum number of distinct categories for the given group field for which to generate statistics (default 25)', 'minimum': 1, 'default': 25}, 'metaDataField': {'type': 'str', 'position': 0, 'description': "If the statistics should be grouped by a MetaData-related field, the that metadata subfield needs to be specified here. This metadata-field is ignored if the GroupByField is not set to 'metadata'"}}, 'description': 'Request to instruct the service by which field(s) to group Submission statistics'}}, 'statistics': {'type': 'list', 'position': 0, 'description': 'The numerical fields for which to generate metrics', 'items': {'type': 'dict', 'required': ['field', 'name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The name for this aggregation. Must be unique for the parent statistics request => Sanitize by regex ^[a-zA-Z0-9_-]+$'}, 'field': {'type': 'str', 'position': 0, 'description': 'The Submission field for which we want statistics', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}}, 'description': "Request for statistics for a set of Submission's numerical fields"}}, 'timeline': {'type': 'list', 'position': 0, 'description': 'The timestamp fields for which to generate statistics', 'items': {'type': 'dict', 'required': ['field', 'name', 'resolution'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The name for this aggregation. Must be unique for the parent statistics request => Sanitize by regex ^[a-zA-Z0-9_-]+$'}, 'field': {'type': 'str', 'position': 0, 'description': 'The timestamp field against which to filter', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'resolution': {'type': 'str', 'position': 0, 'description': 'If set, the temporal resolution by which to sub-aggregate the range metric i.e. by hour, day, week, month, or year', 'enum': ['hour', 'day', 'week', 'month', 'quarter']}, 'includeEmpty': {'type': 'bool', 'position': 0, 'description': 'Whether to return temporal buckets for the entire range regardless of whether they contain values (default false)', 'default': False}}, 'description': 'Request for statistics for Submissions that will be used for creating a histogram by resolution'}}}, 'description': 'Parent request for statistics for a set of Submissions'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'group': {'type': 'dict', 'properties': {'type': 'str', 'shortName': {'type': 'str', 'position': 0, 'description': "The aggregation container's shortName, like customer short name. Populating with 'identifier' if there's no short name."}, 'displayName': {'type': 'str', 'position': 0, 'description': "The aggregation container's displayName, like customer name.Populate with 'identifier' if there's no display name."}, 'identifier': {'type': 'str', 'position': 0, 'description': "The aggregation container's ID, e.g. customer ID or sample SHA256."}, 'metaDataField': {'type': 'str', 'position': 0, 'description': 'If the aggregation is grouped by metaDataField, this is used to show which field was used'}, 'options': ['customer', 'fileName', 'sampleSha256', 'mimeType', 'tlp', 'metaData']}, 'description': 'Metadata for submission statistics aggregation container'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents contained within this record sharing the same data'}, 'buckets': {'type': 'list', 'position': 0, 'description': 'Submission metric buckets below this level, contains SubmissionMetricRecords', 'items': {'type': 'dict', 'properties': {'group': {'type': 'dict', 'properties': {'type': 'str', 'shortName': {'type': 'str', 'position': 0, 'description': "The aggregation container's shortName, like customer short name. Populating with 'identifier' if there's no short name."}, 'displayName': {'type': 'str', 'position': 0, 'description': "The aggregation container's displayName, like customer name.Populate with 'identifier' if there's no display name."}, 'identifier': {'type': 'str', 'position': 0, 'description': "The aggregation container's ID, e.g. customer ID or sample SHA256."}, 'metaDataField': {'type': 'str', 'position': 0, 'description': 'If the aggregation is grouped by metaDataField, this is used to show which field was used'}, 'options': ['customer', 'fileName', 'sampleSha256', 'mimeType', 'tlp', 'metaData']}, 'description': 'Metadata for submission statistics aggregation container'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents contained within this record sharing the same data'}, 'buckets': {'type': 'list', 'position': 0, 'description': 'Submission metric buckets below this level, contains SubmissionMetricRecords', 'items': []}, 'statistics': {'type': 'list', 'position': 0, 'description': 'Statistics metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'dict', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric as submitted in the request'}, 'field': {'type': 'str', 'position': 0, 'description': 'The field for the metrics we want statistics for, as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'min': {'type': 'int', 'position': 0, 'description': 'The minimum field value amongst the documents used to calculate these metrics'}, 'max': {'type': 'int', 'position': 0, 'description': 'The maximum field value amongst the documents used to calculate these metrics'}}, 'description': 'Statistics for a given numerical field for set of matching documents'}}, 'timeline': {'type': 'list', 'position': 0, 'description': 'Timestamp metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'dict', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric as submitted in the request'}, 'field': {'type': 'str', 'position': 0, 'description': 'The timestamp field against which to filter as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'buckets': {'type': 'list', 'position': 0, 'description': 'Buckets are sorted in ascending order based on the timestamp field', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp for the histogram bucket'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents whose field was used for this bucket'}}, 'description': 'A timestamp histogram bucket'}}}, 'description': 'Metric representing the statistics for Submission that will be used for creating a histogram'}}}, 'description': 'Container for submission statistics on data stored by the Sample Service'}}, 'statistics': {'type': 'list', 'position': 0, 'description': 'Statistics metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'dict', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric as submitted in the request'}, 'field': {'type': 'str', 'position': 0, 'description': 'The field for the metrics we want statistics for, as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'min': {'type': 'int', 'position': 0, 'description': 'The minimum field value amongst the documents used to calculate these metrics'}, 'max': {'type': 'int', 'position': 0, 'description': 'The maximum field value amongst the documents used to calculate these metrics'}}, 'description': 'Statistics for a given numerical field for set of matching documents'}}, 'timeline': {'type': 'list', 'position': 0, 'description': 'Timestamp metrics for the requested fields. Will only be populated in leafs', 'items': {'type': 'dict', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'The unique identifying name for this metric as submitted in the request'}, 'field': {'type': 'str', 'position': 0, 'description': 'The timestamp field against which to filter as submitted in the request', 'enum': ['submittedTimestamp', 'observedTimestamp', 'expiryTimestamp']}, 'buckets': {'type': 'list', 'position': 0, 'description': 'Buckets are sorted in ascending order based on the timestamp field', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp for the histogram bucket'}, 'count': {'type': 'int', 'position': 0, 'description': 'The number of documents whose field was used for this bucket'}}, 'description': 'A timestamp histogram bucket'}}}, 'description': 'Metric representing the statistics for Submission that will be used for creating a histogram'}}}, 'description': 'Container for submission statistics on data stored by the Sample Service'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}