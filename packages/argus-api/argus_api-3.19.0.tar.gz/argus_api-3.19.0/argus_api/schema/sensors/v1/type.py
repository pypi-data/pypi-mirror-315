"""Autogenerated API schema"""
from argus_api import session


add_sensor_type = {'tags': ['sensors/v1'], 'summary': 'Create a new sensor type (INTERNAL)', 'description': '', 'operationId': 'addSensorType', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Sensor type add request', 'required': False, 'schema': {'type': 'object', 'required': ['name', 'shortName'], 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'Short name of Sensor Type, needs to be unique => [a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of sensor type => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'url': {'type': 'str', 'position': 0, 'description': 'URL of sensor type => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'Expected maximum update time duration in millis of sensor which belong to the type (default 0)', 'minimum': 0, 'default': 0}, 'department': {'type': 'str', 'position': 0, 'description': 'Department that the sensor type belongs to (default none)', 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'monitorCollectionOnly': {'type': 'bool', 'position': 0, 'description': 'Flag to determine whether sensors of this type are monitored by analysis or only by collection (default false)', 'default': False}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'Flag to determine escalation workflow for Sensors of this type (default medium)', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Request to create a new Sensor Type'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_sensor_type = {'tags': ['sensors/v1'], 'summary': 'Delete a sensor type and update existing Sensors of that type to a new sensor type (INTERNAL)', 'description': '', 'operationId': 'deleteSensorType', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Sensor type ID or short name', 'required': True, 'type': 'str'}, {'name': 'newType', 'in': 'query', 'description': 'Sensor type delete request', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_sensor_type = {'tags': ['sensors/v1'], 'summary': 'Get sensor type by ID or short name (INTERNAL)', 'description': '', 'operationId': 'getSensorType', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Sensor type ID or short name', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_sensor_types = {'tags': ['sensors/v1'], 'summary': 'Get all sensor types (INTERNAL)', 'description': '', 'operationId': 'getSensorTypes', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_sensor_type = {'tags': ['sensors/v1'], 'summary': 'Update a sensor type (INTERNAL)', 'description': '', 'operationId': 'updateSensorType', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortName', 'in': 'path', 'description': 'Sensor type ID or short name', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Sensor type update request', 'required': False, 'schema': {'type': 'object', 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'New unique short name of the Sensor Type. => [a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'New name of the Sensor Type => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'url': {'type': 'str', 'position': 0, 'description': 'New URL of the Sensor Type => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'Update expected Sensor update time for the Sensor Type', 'minimum': 0}, 'department': {'type': 'str', 'position': 0, 'description': 'Update department of the Sensor Type', 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'monitorCollectionOnly': {'type': 'bool', 'position': 0, 'description': 'Flag to determine whether Sensors of this Type are monitored by analysis or only by collection'}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': 'Flag to determine escalation workflow for Sensors of this type', 'enum': ['internal', 'low', 'medium', 'high', 'critical']}}, 'description': 'Request to update an existing new Sensor Type'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the Application'}, 'name': {'type': 'str', 'position': 0, 'description': "The Application's display name"}, 'shortName': {'type': 'str', 'position': 0, 'description': "The Application's unique short name"}, 'url': {'type': 'str', 'position': 0, 'description': "The Application's URL"}, 'expectedSensorUpdateTime': {'type': 'int', 'position': 0, 'description': 'The expected update time for Sensors using this Application'}, 'department': {'type': 'str', 'position': 0, 'description': "The Application's Department", 'enum': ['none', 'nsa', 'ti', 'log', 'infrastructure']}, 'reportingSeverity': {'type': 'str', 'position': 0, 'description': "The Application's reporting severity", 'enum': ['internal', 'low', 'medium', 'high', 'critical']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'MONITOR_COLLECTION_ONLY']}}}, 'description': "Application SPI model class for a Sensor's Application"}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}