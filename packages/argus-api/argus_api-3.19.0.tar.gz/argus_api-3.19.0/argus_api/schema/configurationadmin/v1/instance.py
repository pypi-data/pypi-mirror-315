"""Autogenerated API schema"""
from argus_api import session


add_instance_comment = {'tags': ['configurationadmin'], 'summary': 'Add a comment to configuration instance (INTERNAL)', 'description': '', 'operationId': 'addInstanceComment', 'consumes': ['text/plain'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Comment', 'required': False, 'schema': {'type': 'string'}}, {'name': 'id', 'in': 'path', 'description': 'ID of instance to comment', 'required': True, 'type': 'int'}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
create_instance = {'tags': ['configurationadmin'], 'summary': 'Create new configuration instance (INTERNAL)', 'description': '', 'operationId': 'createInstance', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Create request', 'required': False, 'schema': {'type': 'object', 'properties': {'templateID': {'type': 'int', 'position': 0, 'description': 'The ID of the template to use for this instance', 'minimum': 1}, 'hostID': {'type': 'int', 'position': 0, 'description': 'The ID of the host to run this instance on', 'minimum': 1}, 'parentID': {'type': 'int', 'position': 0, 'description': 'If set, define a parent instance ID which this instance should run below.', 'minimum': 0}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'If set, pin this instance to the specified template revision. Revision 0 means use latest revision.', 'minimum': 0}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text. Will be default sanitized. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties to set for this instance. Will override any conflicting properties set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Identifiers to set for this instance. Use this to differentiate between multiple instances of the same template on the same host.', 'additionalProperties': {'type': 'string'}}, 'codeProfile': {'type': 'str', 'position': 0, 'description': 'The code profile to use for this instance. => [a-zA-Z0-9_:\\-\\.]*'}, 'daytimeMonitored': {'type': 'bool', 'position': 0, 'description': 'If true, mark this instance as a DAYTIME_MONITORED host. (default false)', 'default': False}}, 'description': 'A request to define a new instance'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_instance = {'tags': ['configurationadmin'], 'summary': 'Delete configuration instance (INTERNAL)', 'description': '', 'operationId': 'deleteInstance', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to delete', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
disable_instance_monitoring = {'tags': ['configurationadmin'], 'summary': 'Disable monitoring of configuration instance (INTERNAL)', 'description': '', 'operationId': 'disableInstanceMonitoring', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to disable monitoring on', 'required': True, 'type': 'int'}, {'name': 'comment', 'in': 'formData', 'description': 'Reason for disabling monitoring', 'required': True, 'type': 'string'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
disable_instance_monitoring_request = {'tags': ['configurationadmin'], 'summary': 'Disable monitoring of configuration instance (INTERNAL)', 'description': '', 'operationId': 'disableInstanceMonitoringRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to disable monitoring on', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Request to disable instance monitoring', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'comment': {'type': 'str', 'position': 0, 'description': 'Reason for disabling monitoring => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to disable monitoring of configuration instance'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
duplicate_instance = {'tags': ['configurationadmin'], 'summary': 'Duplicate a configuration instance (INTERNAL) (INTERNAL)', 'description': '', 'operationId': 'duplicateInstanceRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to duplicate', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Optional body with parameters.', 'required': False, 'schema': {'type': 'object', 'properties': {'hostID': {'type': 'int', 'position': 0, 'description': 'If set, duplicate the instance onto the specified host'}}, 'description': 'Request to duplicate an existing configuration instance'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
enable_instance_monitoring = {'tags': ['configurationadmin'], 'summary': 'Enable monitoring of configuration instance (INTERNAL)', 'description': '', 'operationId': 'enableInstanceMonitoring', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to enable monitoring on', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_instance_configuration_data = {'tags': ['configurationadmin'], 'summary': 'Fetch configuration data which is active for this configuration instance (INTERNAL)', 'description': '', 'operationId': 'getInstanceConfigurationData', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID or shortname of template', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'templateID': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['referenced', 'inline']}}, 'data': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_instance_properties = {'tags': ['configurationadmin'], 'summary': 'Fetch configuration instance properties (INTERNAL)', 'description': '', 'operationId': 'getInstanceProperties', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Name of this property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Set value of this property'}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value of this property'}, 'source': {'type': 'str', 'position': 0, 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
instance_revisions = {'tags': ['configurationadmin'], 'summary': 'List configuration instance revisions (INTERNAL)', 'description': '', 'operationId': 'instanceRevisions', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to fetch revisions for', 'required': True, 'type': 'int'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_instances = {'tags': ['configurationadmin'], 'summary': 'List configuration instances (INTERNAL)', 'description': '', 'operationId': 'listInstances', 'produces': ['application/json'], 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int'}, {'name': 'search', 'in': 'query', 'description': 'Limit results to instances matching this searchstring', 'required': False, 'type': 'str'}, {'name': 'includeComments', 'in': 'query', 'description': 'Include comments in output', 'required': False, 'type': 'bool'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted instances', 'required': False, 'type': 'bool'}, {'name': 'templateID', 'in': 'query', 'description': 'Limit results to instances with these templates', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'hostID', 'in': 'query', 'description': 'Limit results to instances on these hosts', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
move_instance = {'tags': ['configurationadmin'], 'summary': 'Move a configuration instance to another host (INTERNAL)', 'description': '', 'operationId': 'moveInstance', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to move', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Request object', 'required': False, 'schema': {'type': 'object', 'properties': {'hostID': {'type': 'int', 'position': 0, 'description': 'Host to move the instance to', 'minimum': 1}}, 'description': 'Request to move an existing configuration instance to another host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
schedule_instance_monitoring = {'tags': ['configurationadmin'], 'summary': 'Schedule downtime for configuration instance (INTERNAL)', 'description': '', 'operationId': 'scheduleInstanceMonitoring', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to schedule downtime for', 'required': True, 'type': 'int'}, {'name': 'from', 'in': 'formData', 'description': 'Timestamp to schedule downtime from', 'required': False, 'type': 'integer', 'format': 'int64'}, {'name': 'to', 'in': 'formData', 'description': 'Timestamp to schedule downtime to', 'required': False, 'type': 'integer', 'format': 'int64'}, {'name': 'comment', 'in': 'formData', 'description': 'Reason for scheduling downtime', 'required': True, 'type': 'string'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
schedule_instance_monitoring_request = {'tags': ['configurationadmin'], 'summary': 'Schedule downtime for configuration instance (INTERNAL)', 'description': '', 'operationId': 'scheduleInstanceMonitoringRequest', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to schedule downtime for', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Request to schedule downtime for configuration instance', 'required': False, 'schema': {'type': 'object', 'required': ['comment'], 'properties': {'from': {'type': 'int', 'position': 0, 'description': 'Timestamp to schedule downtime from', 'minimum': 0}, 'to': {'type': 'int', 'position': 0, 'description': 'Timestamp to schedule downtime to', 'minimum': 0}, 'comment': {'type': 'str', 'position': 0, 'description': 'Reason for scheduling downtime => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}}, 'description': 'Request to schedule downtime for configuration instance'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_instances = {'tags': ['configurationadmin'], 'summary': 'Search configuration instances (INTERNAL)', 'description': '', 'operationId': 'searchInstances', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'required': False, 'schema': {'type': 'object', 'properties': {'instanceID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'int'}}, 'templateID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'int'}}, 'hostID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'int'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR.', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'instanceID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'int'}}, 'templateID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'int'}}, 'hostID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'int'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR.', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'includeComments': {'type': 'bool', 'position': 0, 'description': 'If true, include comments in output. (default false)', 'default': False}, 'includeProperties': {'type': 'bool', 'position': 0, 'description': 'If true, include properties in output. (default true)', 'default': True}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by template ID or shortname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by host customer ID or shortname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'instance': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by ID.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by host ID or hostname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'parentID': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by parent instance ID.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'codeProfile': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by active code profile.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'If set, filter instances matching these keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If set, only include instance revisions of given master. If not set, revisions are excluded.'}, 'codeProfileOverride': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances with overridden code profile. If false, exclude. If not set, do not filter.'}, 'monitoringDisabled': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances with disabled monitoring, or whose host has disabled monitoring. If false, exclude. If not set, do not filter.'}, 'inDowntime': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances which are in scheduled downtime, or whose host is in downtime. If false, exclude. If not set, do not filter.'}, 'daytimeMonitored': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances which are daytime monitored (either set on the instance, or parent host/instance). If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'enum': ['id', 'startupIndex', 'hostID', 'hostName', 'templateID', 'templateShortName', 'created', 'lastUpdated', 'revision', '-id', '-startupIndex', '-hostID', '-hostName', '-templateID', '-templateShortName', '-created', '-lastUpdated', '-revision']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'includeComments': {'type': 'bool', 'position': 0, 'description': 'If true, include comments in output. (default false)', 'default': False}, 'includeProperties': {'type': 'bool', 'position': 0, 'description': 'If true, include properties in output. (default true)', 'default': True}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by template ID or shortname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by host customer ID or shortname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'instance': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by ID.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by host ID or hostname.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'parentID': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by parent instance ID.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'codeProfile': {'type': 'list', 'position': 0, 'description': 'If set, filter instances by active code profile.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'If set, filter instances matching these keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If set, only include instance revisions of given master. If not set, revisions are excluded.'}, 'codeProfileOverride': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances with overridden code profile. If false, exclude. If not set, do not filter.'}, 'monitoringDisabled': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances with disabled monitoring, or whose host has disabled monitoring. If false, exclude. If not set, do not filter.'}, 'inDowntime': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances which are in scheduled downtime, or whose host is in downtime. If false, exclude. If not set, do not filter.'}, 'daytimeMonitored': {'type': 'bool', 'position': 0, 'description': 'If true, only return instances which are daytime monitored (either set on the instance, or parent host/instance). If false, exclude. If not set, do not filter.'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'enum': ['id', 'startupIndex', 'hostID', 'hostName', 'templateID', 'templateShortName', 'created', 'lastUpdated', 'revision', '-id', '-startupIndex', '-hostID', '-hostName', '-templateID', '-templateShortName', '-created', '-lastUpdated', '-revision']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DISABLED_MONITORING', 'DAYTIME_MONITORED']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_instance = {'tags': ['configurationadmin'], 'summary': 'Update configuration instance (INTERNAL)', 'description': '', 'operationId': 'updateInstance', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'update request', 'required': False, 'schema': {'type': 'object', 'properties': {'configurationID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated option, it is not allowed to change the template of an existing instance.', 'minimum': 0}, 'hostID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated option. Use the /move endpoint to move instance to another host.', 'minimum': 0}, 'parentID': {'type': 'int', 'position': 0, 'description': 'DEPRECATED: Deprecated option, it is not allowed to change the parent of an existing instance.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'If set, pin this instance to the specified template revision. Revision 0 means use latest revision.'}, 'information': {'type': 'str', 'position': 0, 'description': 'If set, change information field for instance. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'daytimeMonitored': {'type': 'bool', 'position': 0, 'description': 'If set, change the DAYTIME_MONITORED flag on this instance'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'If set, set these properties for instance. Property with null value will delete existing property.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'If set, set these identifiers for instance. Identifier with null value will delete existing identifier.', 'additionalProperties': {'type': 'string'}}, 'codeProfile': {'type': 'str', 'position': 0, 'description': 'Name of code profile to use. If null, do not change. If blank, reset to template profile. => [a-zA-Z0-9_:\\-\\.]*'}}, 'description': 'Request to update an instance'}}, {'name': 'id', 'in': 'path', 'description': 'ID of instance to update', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
update_instance_properties = {'tags': ['configurationadmin'], 'summary': 'Update configuration instance properties (INTERNAL)', 'description': '', 'operationId': 'updateInstanceProperties', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Update properties request', 'required': False, 'schema': {'type': 'object', 'required': ['properties'], 'properties': {'properties': {'type': 'dict', 'position': 0, 'description': 'The properties to update to, null value will clear the property', 'additionalProperties': {'type': 'string'}}}, 'description': 'Request to update properties on a specified instance'}}, {'name': 'id', 'in': 'path', 'description': 'ID of instance to update properties on', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Name of this property'}, 'value': {'type': 'str', 'position': 0, 'description': 'Set value of this property'}, 'defaultValue': {'type': 'str', 'position': 0, 'description': 'Default value of this property'}, 'source': {'type': 'str', 'position': 0, 'description': 'The origin of this property (the source of the current value)', 'enum': ['config', 'template', 'host', 'instance']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
view_instance = {'tags': ['configurationadmin'], 'summary': 'Fetch configuration instance (INTERNAL)', 'description': '', 'operationId': 'viewInstance', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of instance to fetch', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of this instance', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'parent': []}, 'description': 'Informational reference model of an instance'}}, 'description': 'Informational reference model of an instance'}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The host name', 'readOnly': True}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'labels': {'type': 'list', 'position': 0, 'description': 'Labels set for this host. A label may be any string.', 'readOnly': True, 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Informational reference model for a host'}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'position': 0, 'description': 'The template name', 'readOnly': True}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this template', 'readOnly': True}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision index for the current template configuration. This is bumped on every change to the template.', 'readOnly': True}, 'mnemonic': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: The shortname for this template'}}, 'description': 'Informational reference model of a template'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING', 'DAYTIME_MONITORED', 'PARENT_DAYTIME_MONITORED']}}, 'scheduledDowntimeFrom': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime from this timestamp.'}, 'scheduledDowntimeTo': {'type': 'int', 'position': 0, 'description': 'If non-zero, the instance is scheduled for downtime until this timestamp. If current time has passed this timestamp, the instance is no longer scheduled in downtime.'}, 'revision': {'type': 'int', 'position': 0, 'description': 'The revision of the instance configuration. This is bumped for every configuration change.'}, 'pinnedTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The revision of the template configuration this instance is pinned to. If this revision equals the current revision of the template, then this instance is pinned to the latest revision.'}, 'masterID': {'type': 'int', 'position': 0, 'description': 'If this object represents a configuration revision, this is the ID of the master instance configuration which is currently the latest revision.'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this instance was last updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'information': {'type': 'str', 'position': 0, 'description': 'Informational text about this instance (plain text, default sanitation).'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this profile'}, 'created': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was created'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this profile was last updated. Profiles which are finalized cannot be updated.'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'artifacts': {'type': 'list', 'position': 0, 'description': 'The list of artifacts in this profile. May be null when searching for profiles, unless includeArtifacts is true', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'flags': {'type': 'int'}, 'groupID': {'type': 'str', 'position': 0, 'description': 'The MVN groupID'}, 'artifactID': {'type': 'str', 'position': 0, 'description': 'The MVN artifactID'}, 'version': {'type': 'str', 'position': 0, 'description': 'The MVN version'}, 'status': {'type': 'str', 'position': 0, 'description': 'The artifacts status. Can only be deleted if UNUSED.', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was created.'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when the artifact was last updated.'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'length': {'type': 'int', 'position': 0, 'description': 'The size of this artifact (in bytes).'}, 'data': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is always null'}}, 'description': 'Describes a code artifact, typically a JAR file, which is available for download. The ID of the artifact is the SHA256-sum of the file.'}}}, 'description': 'A profile is a specific bundle of code artifacts. Non-finalized profiles cannot be used in templates, only in specific instances.'}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Configuration properties set on this instance. Will be merged with properties set on the template and host. Properties set on the instance will override any property set on host or template.', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Instance identifiers, used to label sets of components, or to distinguish between multiple instances of the same template running on the same host.', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'position': 0, 'description': 'Comments added to this instance.', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}, 'type': 'str', 'options': ['user', 'group']}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}}, 'description': 'Represents an instance running on a distributed host'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
#: "add_comment_1" is an alias for "add_instance_comment"
add_comment_1 = add_instance_comment
#: "create_3" is an alias for "create_instance"
create_3 = create_instance
#: "delete_2" is an alias for "delete_instance"
delete_2 = delete_instance
#: "disable_monitoring_1" is an alias for "disable_instance_monitoring"
disable_monitoring_1 = disable_instance_monitoring
#: "enable_monitoring_1" is an alias for "enable_instance_monitoring"
enable_monitoring_1 = enable_instance_monitoring
#: "revisions" is an alias for "instance_revisions"
revisions = instance_revisions
#: "list_3" is an alias for "list_instances"
list_3 = list_instances
#: "schedule_monitoring_1" is an alias for "schedule_instance_monitoring"
schedule_monitoring_1 = schedule_instance_monitoring
#: "search_3" is an alias for "search_instances"
search_3 = search_instances
#: "update_2" is an alias for "update_instance"
update_2 = update_instance
#: "view_1" is an alias for "view_instance"
view_1 = view_instance
#: "duplicate_host_1" is an alias for "duplicate_instance"
duplicate_host_1 = duplicate_instance