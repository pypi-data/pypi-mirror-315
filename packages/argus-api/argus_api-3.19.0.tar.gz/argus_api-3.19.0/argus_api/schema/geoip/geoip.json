{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "tags": [
    {
      "name": "/geoip/v1"
    },
    {
      "name": "geoip/v2"
    }
  ],
  "paths": {
    "/geoip/v1/country": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "List GeoIP countries (INTERNAL)",
        "description": "",
        "operationId": "listCountries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of items to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, countryName, countryCode)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fromID",
            "in": "query",
            "description": "Only return countries with numeric ID greater than or equal to this value",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.Country-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      },
      "post": {
        "tags": [
          "development"
        ],
        "summary": "Add new country (DEV)",
        "description": "",
        "operationId": "addCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.request.CountryAddRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.Country-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/country/{id}": {
      "put": {
        "tags": [
          "development"
        ],
        "summary": "Update an existing country (DEV)",
        "description": "",
        "operationId": "updateCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Country ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.request.CountryUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.Country-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/region": {
      "post": {
        "tags": [
          "development"
        ],
        "summary": "Add new region (DEV)",
        "description": "",
        "operationId": "addRegion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.Region"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.Region-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/location": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "List locations (INTERNAL)",
        "description": "",
        "operationId": "listLocations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of items to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, externalID, countryCode, regionCode)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fromID",
            "in": "query",
            "description": "Only return locations with numeric ID greater than or equal to this value",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      },
      "post": {
        "tags": [
          "development"
        ],
        "summary": "Add new location (DEV)",
        "description": "",
        "operationId": "addLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.GeoLocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/ranges": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "List IP ranges (INTERNAL)",
        "description": "",
        "operationId": "listRanges",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of items to return",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending, supported fields are: id, startIP, endIP, locationID)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      },
      "post": {
        "tags": [
          "development"
        ],
        "summary": "Add or update IP ranges (DEV)",
        "description": "",
        "operationId": "addOrUpdateRanges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/no.mnemonic.services.geoip.spi.request.GeoIPRangeRequest"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/country/search": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Find GeoIP countries (INTERNAL)",
        "description": "",
        "operationId": "searchCountries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.request.CountrySearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.Country-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/location/{id}": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Lookup location (INTERNAL)",
        "description": "",
        "operationId": "getLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Location ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/location/search": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Find locations (INTERNAL)",
        "description": "",
        "operationId": "searchLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.request.LocationSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/ranges/search": {
      "post": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Find IP ranges (INTERNAL)",
        "description": "",
        "operationId": "findRanges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.request.IPRangeSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v1/ranges/{ip}": {
      "get": {
        "tags": [
          "/geoip/v1"
        ],
        "summary": "Lookup IP range (INTERNAL)",
        "description": "",
        "operationId": "lookupIP",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "IP-address that has to be covered by the range",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/geoip/v2/asn/{asnOrIP}": {
      "get": {
        "tags": [
          "development"
        ],
        "summary": "Fetch an autonomous system by ASN or IP (DEV)",
        "description": "",
        "operationId": "getAutonomousSystem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asnOrIP",
            "in": "path",
            "description": "The ASN or IP of the autonomous system to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/geoip/v2/asn/networks/search": {
      "post": {
        "tags": [
          "development"
        ],
        "summary": "Search for autonomous system networks with an AutonomousSystemNetworkSearchRequest (DEV)",
        "description": "",
        "operationId": "searchAutonomousSystemNetworks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request for autonomous system network",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemNetworkSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/geoip/v2/asn/{asnOrIP}/networks": {
      "get": {
        "tags": [
          "development"
        ],
        "summary": "Fetch autonomous system networks for a single autonomous system by ASN or IP (DEV)",
        "description": "",
        "operationId": "getAutonomousSystemNetworks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asnOrIP",
            "in": "path",
            "description": "Identifier of the AS",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of returned networks",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip the first $offset networks",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/geoip/v2/asn/search": {
      "post": {
        "tags": [
          "development"
        ],
        "summary": "Search for autonomous systems with an AutonomousSystemSearchRequest (DEV)",
        "description": "",
        "operationId": "searchAutonomousSystems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request for autonomous system",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/geoip/v2/asn": {
      "get": {
        "tags": [
          "development"
        ],
        "summary": "Search for autonomous system with query parameters (DEV)",
        "description": "",
        "operationId": "listAutonomousSystems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asn",
            "in": "query",
            "description": "Only return AS matching the given ASNs",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of returned AS",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip the first $offset AS",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "If true include AS marked as deleted",
            "required": false,
            "type": "boolean",
            "default": false,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the returned entries. Prefix with '-' to sort descending",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "asn",
              "enum": [
                "asn",
                "name",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-asn",
                "-name",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/geoip/v2/asn/networks": {
      "get": {
        "tags": [
          "development"
        ],
        "summary": "Search for autonomous system networks with query parameters (DEV)",
        "description": "",
        "operationId": "listAutonomousSystemNetworks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asn",
            "in": "query",
            "description": "Only return networks matching the given ASNs",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "Only return networks where one of the provided IPs belongs to the network",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of returned networks",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip the first $offset networks",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "If true include networks marked as deleted",
            "required": false,
            "type": "boolean",
            "default": false,
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the returned entries. Prefix with '-' to sort descending",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "ip",
              "enum": [
                "asn",
                "ip",
                "createdTimestamp",
                "lastUpdatedTimestamp",
                "deletedTimestamp",
                "-asn",
                "-ip",
                "-createdTimestamp",
                "-lastUpdatedTimestamp",
                "-deletedTimestamp"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    }
  },
  "definitions": {
    "ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse"
        }
      }
    },
    "no.mnemonic.services.argus.common.rest.model.ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.Region-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.Region"
        }
      }
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.GeoIPRange"
        }
      }
    },
    "IPRange": {
      "type": "object",
      "properties": {
        "fromAddress": {
          "$ref": "#/definitions/no.mnemonic.jargus.net.IPAddress"
        },
        "toAddress": {
          "$ref": "#/definitions/no.mnemonic.jargus.net.IPAddress"
        }
      }
    },
    "no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemSearchRequest": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "array",
          "position": 0,
          "description": "Only return AS matching the given ASNs",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Limit the amount of returned AS (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first $offset AS (default 0)",
          "minimum": 0,
          "default": 0
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true include AS marked as deleted (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Sort the returned entries. Prefix with '-' to sort descending (default asn)",
          "items": {
            "type": "string",
            "enum": [
              "asn",
              "name",
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "-asn",
              "-name",
              "-createdTimestamp",
              "-lastUpdatedTimestamp",
              "-deletedTimestamp"
            ]
          }
        }
      },
      "description": "Request used for autonomous system search"
    },
    "no.mnemonic.jargus.model.geoip.GeoIPRange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "range": {
          "$ref": "#/definitions/no.mnemonic.jargus.net.IPRange"
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter code of the country where this IP-range is located."
        },
        "locationID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The location ID associated with this IP-range."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this IP-range was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "position": 0,
          "description": "Geographic latitude of the spot where this IP-range is located (0.0 if not set)."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "position": 0,
          "description": "Geographic longitude of the spot where this IP-range is located (0.0 if not set)."
        }
      },
      "description": "Combines IP-address range (from- and to-address) with country and location data."
    },
    "no.mnemonic.jargus.model.geoip.Region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "minLocationID": {
          "type": "integer",
          "format": "int64"
        },
        "maxLocationID": {
          "type": "integer",
          "format": "int64"
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter code of the country where this region is in."
        },
        "regionCode": {
          "type": "string",
          "position": 0,
          "description": "The code of the region."
        },
        "regionName": {
          "type": "string",
          "position": 0,
          "description": "The name of the region."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this region was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      },
      "description": "Region is a subunit of a country. It contains data about the region and also the country it belongs to."
    },
    "no.mnemonic.services.geoip.spi.request.CountryAddRequest": {
      "type": "object",
      "required": [
        "countryCode",
        "countryName"
      ],
      "properties": {
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter country-code",
          "minLength": 2,
          "maxLength": 2
        },
        "countryName": {
          "type": "string",
          "position": 0,
          "description": "The name of the country",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.GeoLocation"
        }
      }
    },
    "LocationSearchRequest": {
      "type": "object",
      "properties": {
        "country": {
          "type": "array",
          "position": 0,
          "description": "Only return locations from these countries (by country ID or two-letter code).",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "extID": {
          "type": "array",
          "position": 0,
          "description": "Only return locations bound to these external IDs.",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "fromID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only return locations with IDs greater than or equal to this ID.",
          "minimum": 0
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched locations.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "disabled",
              "withoutExtID"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched locations.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "disabled",
              "withoutExtID"
            ]
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true, also include locations marked as deleted."
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for locations having lastUpdatedTimestamp greater than or equal to this timestamp."
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for locations having lastUpdatedTimestamp lower than or equal to this timestamp."
        },
        "countTimeout": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1. (default -1)",
          "minimum": -1,
          "maximum": 30,
          "default": -1
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results.",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "externalID",
              "countryCode",
              "regionCode",
              "-id",
              "-externalID",
              "-countryCode",
              "-regionCode"
            ]
          }
        }
      },
      "description": "Request to search for locations"
    },
    "AutonomousSystemResponse": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The autonomous system number"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the autonomous system"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the AS was first registered in the database"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the AS was last updated/changed in the database"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the AS was removed from the database"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags defined for the autonomous system",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      },
      "description": "Response model representing an autonomous system"
    },
    "CountrySearchRequest": {
      "type": "object",
      "properties": {
        "fromID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Only return countries with IDs greater than or equal to this ID.",
          "minimum": 0
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched countries.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched countries.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true, also include countries marked as deleted."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results.",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "countryName",
              "countryCode",
              "-id",
              "-countryName",
              "-countryCode"
            ]
          }
        }
      },
      "description": "Request to search for countries"
    },
    "no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The autonomous system number"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the autonomous system"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the AS was first registered in the database"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the AS was last updated/changed in the database"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the AS was removed from the database"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags defined for the autonomous system",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      },
      "description": "Response model representing an autonomous system"
    },
    "no.mnemonic.jargus.model.geoip.GeoLocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "extID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The external ID of the location (0 if not set)."
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter code of the country where this location is in."
        },
        "locationName": {
          "type": "string",
          "position": 0,
          "description": "The name of the the location."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this location was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "disabled"
            ]
          }
        }
      },
      "description": "Location is a subunit of a region. It contains data about the location and also the region and country it belongs to."
    },
    "AutonomousSystemNetworkResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "Argus-specific unique identifier"
        },
        "autonomousSystem": {
          "position": 0,
          "description": "The autonomous system this network is part of",
          "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemInfo"
        },
        "network": {
          "position": 0,
          "description": "Network represented by the AS",
          "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.IPNetworkResponse"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the network was first registered in the database"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the network was last updated/changed in the database"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the network was removed from the database"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags defined for the autonomous system network",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      },
      "description": "Response model representing an autonomous system network"
    },
    "no.mnemonic.services.geoip.spi.v2.response.IPNetworkResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "position": 0,
          "description": "Start IP of the network"
        },
        "mask": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Net mask (CIDR)"
        }
      },
      "description": "Response model representing a network IP"
    },
    "IPNetworkResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "position": 0,
          "description": "Start IP of the network"
        },
        "mask": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Net mask (CIDR)"
        }
      },
      "description": "Response model representing a network IP"
    },
    "no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemInfo": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The autonomous system number"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the autonomous system"
        }
      },
      "description": "Compact representation of an autonomous system"
    },
    "Country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "countryName": {
          "type": "string",
          "position": 0,
          "description": "The name of the country."
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter country-code."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this country was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DELETED",
              "deleted"
            ]
          }
        }
      },
      "description": "Contains basic data about a country."
    },
    "Region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "minLocationID": {
          "type": "integer",
          "format": "int64"
        },
        "maxLocationID": {
          "type": "integer",
          "format": "int64"
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter code of the country where this region is in."
        },
        "regionCode": {
          "type": "string",
          "position": 0,
          "description": "The code of the region."
        },
        "regionName": {
          "type": "string",
          "position": 0,
          "description": "The name of the region."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this region was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      },
      "description": "Region is a subunit of a country. It contains data about the region and also the country it belongs to."
    },
    "GeoLocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "extID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The external ID of the location (0 if not set)."
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter code of the country where this location is in."
        },
        "locationName": {
          "type": "string",
          "position": 0,
          "description": "The name of the the location."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this location was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "disabled"
            ]
          }
        }
      },
      "description": "Location is a subunit of a region. It contains data about the location and also the region and country it belongs to."
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.GeoIPRange-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.GeoIPRange"
          }
        }
      }
    },
    "ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemResponse"
          }
        }
      }
    },
    "no.mnemonic.services.geoip.spi.v2.request.AutonomousSystemNetworkSearchRequest": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "array",
          "position": 0,
          "description": "Only return networks matching the given ASNs",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "ip": {
          "type": "array",
          "position": 0,
          "description": "Only return networks where one of the provided IPs belongs to the network => format:ip",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Limit the amount of returned networks (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first $offset networks (default 0)",
          "minimum": 0,
          "default": 0
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true include networks marked as deleted (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Sort the returned entries. Prefix with '-' to sort descending (default ip)",
          "items": {
            "type": "string",
            "enum": [
              "asn",
              "ip",
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "-asn",
              "-ip",
              "-createdTimestamp",
              "-lastUpdatedTimestamp",
              "-deletedTimestamp"
            ]
          }
        }
      },
      "description": "Request used for autonomous system network search"
    },
    "no.mnemonic.services.geoip.spi.request.CountrySearchRequest": {
      "type": "object",
      "properties": {
        "fromID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Only return countries with IDs greater than or equal to this ID.",
          "minimum": 0
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched countries.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched countries.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true, also include countries marked as deleted."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results.",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "countryName",
              "countryCode",
              "-id",
              "-countryName",
              "-countryCode"
            ]
          }
        }
      },
      "description": "Request to search for countries"
    },
    "AutonomousSystemSearchRequest": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "array",
          "position": 0,
          "description": "Only return AS matching the given ASNs",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Limit the amount of returned AS (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first $offset AS (default 0)",
          "minimum": 0,
          "default": 0
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true include AS marked as deleted (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Sort the returned entries. Prefix with '-' to sort descending (default asn)",
          "items": {
            "type": "string",
            "enum": [
              "asn",
              "name",
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "-asn",
              "-name",
              "-createdTimestamp",
              "-lastUpdatedTimestamp",
              "-deletedTimestamp"
            ]
          }
        }
      },
      "description": "Request used for autonomous system search"
    },
    "no.mnemonic.jargus.net.IPRange": {
      "type": "object",
      "properties": {
        "fromAddress": {
          "$ref": "#/definitions/no.mnemonic.jargus.net.IPAddress"
        },
        "toAddress": {
          "$ref": "#/definitions/no.mnemonic.jargus.net.IPAddress"
        }
      }
    },
    "no.mnemonic.jargus.net.IPAddress": {
      "type": "object",
      "properties": {
        "host": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "readOnly": true
        },
        "public": {
          "type": "boolean"
        },
        "ipv6": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "readOnly": true
        },
        "maskBits": {
          "type": "integer",
          "format": "int32"
        },
        "multicast": {
          "type": "boolean"
        },
        "address": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "readOnly": true
        }
      }
    },
    "IPRangeSearchRequest": {
      "type": "object",
      "properties": {
        "country": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges from these countries (by country ID or two-letter code).",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "regionID": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges from these regions (by region ID).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "locationID": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges from these locations (by location ID).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "rangeID": {
          "type": "array",
          "position": 0,
          "description": "Only return specific ranges (by ID).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "ipAddress": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges which cover any of these IP-addresses. => format:ip",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "addressFamily": {
          "type": "string",
          "position": 0,
          "description": "Only return ranges for this address family range (ipv4 or ipv6).",
          "enum": [
            "IPv4",
            "IPv6"
          ]
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched ranges.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched ranges.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true, also include ranges marked as deleted."
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for ranges having lastUpdatedTimestamp greater than or equal to this timestamp."
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for ranges having lastUpdatedTimestamp less than or equal to this timestamp."
        },
        "countTimeout": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1. (default -1)",
          "minimum": -1,
          "maximum": 30,
          "default": -1
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results.",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "startIP",
              "endIP",
              "locationID",
              "-id",
              "-startIP",
              "-endIP",
              "-locationID"
            ]
          }
        },
        "startIPAddress": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges where the range start address matches one of these IP-addresses. => format:ip",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "fromIP": {
          "type": "string",
          "position": 0,
          "description": "Only return ranges where the range start address is greater than or equal to this IP-address. => format:ip"
        },
        "toIP": {
          "type": "string",
          "position": 0,
          "description": "Only return ranges where the range start address is less than or equal to this IP-address. => format:ip"
        }
      },
      "description": "Request to search for IP-address ranges"
    },
    "GeoIPRangeRequest": {
      "type": "object",
      "properties": {
        "fromAddress": {
          "type": "string",
          "position": 0,
          "description": "The lower end of the IP-address range (inclusive)."
        },
        "toAddress": {
          "type": "string",
          "position": 0,
          "description": "The upper end of the IP-address range (inclusive)."
        },
        "locationID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The ID of the location associated with the IP-address range."
        }
      },
      "description": "Request to add or update IP-address range"
    },
    "GeoIPRange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "range": {
          "$ref": "#/definitions/no.mnemonic.jargus.net.IPRange"
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter code of the country where this IP-range is located."
        },
        "locationID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The location ID associated with this IP-range."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this IP-range was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "position": 0,
          "description": "Geographic latitude of the spot where this IP-range is located (0.0 if not set)."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "position": 0,
          "description": "Geographic longitude of the spot where this IP-range is located (0.0 if not set)."
        }
      },
      "description": "Combines IP-address range (from- and to-address) with country and location data."
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.Country-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.Country"
        }
      }
    },
    "no.mnemonic.jargus.model.geoip.Country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "countryName": {
          "type": "string",
          "position": 0,
          "description": "The name of the country."
        },
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter country-code."
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp when this country was last updated."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DELETED",
              "deleted"
            ]
          }
        }
      },
      "description": "Contains basic data about a country."
    },
    "no.mnemonic.services.geoip.spi.request.CountryUpdateRequest": {
      "type": "object",
      "required": [
        "countryName"
      ],
      "properties": {
        "countryName": {
          "type": "string",
          "position": 0,
          "description": "The name of the country",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "ResultStash-no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse"
          }
        }
      }
    },
    "no.mnemonic.services.argus.common.rest.model.ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AutonomousSystemNetworkSearchRequest": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "array",
          "position": 0,
          "description": "Only return networks matching the given ASNs",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "ip": {
          "type": "array",
          "position": 0,
          "description": "Only return networks where one of the provided IPs belongs to the network => format:ip",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Limit the amount of returned networks (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first $offset networks (default 0)",
          "minimum": 0,
          "default": 0
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true include networks marked as deleted (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Sort the returned entries. Prefix with '-' to sort descending (default ip)",
          "items": {
            "type": "string",
            "enum": [
              "asn",
              "ip",
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "-asn",
              "-ip",
              "-createdTimestamp",
              "-lastUpdatedTimestamp",
              "-deletedTimestamp"
            ]
          }
        }
      },
      "description": "Request used for autonomous system network search"
    },
    "ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "no.mnemonic.services.geoip.spi.request.GeoIPRangeRequest": {
      "type": "object",
      "properties": {
        "fromAddress": {
          "type": "string",
          "position": 0,
          "description": "The lower end of the IP-address range (inclusive)."
        },
        "toAddress": {
          "type": "string",
          "position": 0,
          "description": "The upper end of the IP-address range (inclusive)."
        },
        "locationID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The ID of the location associated with the IP-address range."
        }
      },
      "description": "Request to add or update IP-address range"
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.Country-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.Country"
          }
        }
      }
    },
    "no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemNetworkResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "Argus-specific unique identifier"
        },
        "autonomousSystem": {
          "position": 0,
          "description": "The autonomous system this network is part of",
          "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.AutonomousSystemInfo"
        },
        "network": {
          "position": 0,
          "description": "Network represented by the AS",
          "$ref": "#/definitions/no.mnemonic.services.geoip.spi.v2.response.IPNetworkResponse"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the network was first registered in the database"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the network was last updated/changed in the database"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp when the network was removed from the database"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags defined for the autonomous system network",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        }
      },
      "description": "Response model representing an autonomous system network"
    },
    "ResultStash-no.mnemonic.jargus.model.geoip.GeoLocation-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.jargus.model.geoip.GeoLocation"
          }
        }
      }
    },
    "CountryUpdateRequest": {
      "type": "object",
      "required": [
        "countryName"
      ],
      "properties": {
        "countryName": {
          "type": "string",
          "position": 0,
          "description": "The name of the country",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "no.mnemonic.services.geoip.spi.request.LocationSearchRequest": {
      "type": "object",
      "properties": {
        "country": {
          "type": "array",
          "position": 0,
          "description": "Only return locations from these countries (by country ID or two-letter code).",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "extID": {
          "type": "array",
          "position": 0,
          "description": "Only return locations bound to these external IDs.",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "fromID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only return locations with IDs greater than or equal to this ID.",
          "minimum": 0
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched locations.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "disabled",
              "withoutExtID"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched locations.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "disabled",
              "withoutExtID"
            ]
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true, also include locations marked as deleted."
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for locations having lastUpdatedTimestamp greater than or equal to this timestamp."
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for locations having lastUpdatedTimestamp lower than or equal to this timestamp."
        },
        "countTimeout": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1. (default -1)",
          "minimum": -1,
          "maximum": 30,
          "default": -1
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results.",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "externalID",
              "countryCode",
              "regionCode",
              "-id",
              "-externalID",
              "-countryCode",
              "-regionCode"
            ]
          }
        }
      },
      "description": "Request to search for locations"
    },
    "IPAddress": {
      "type": "object",
      "properties": {
        "host": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "readOnly": true
        },
        "public": {
          "type": "boolean"
        },
        "ipv6": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "readOnly": true
        },
        "maskBits": {
          "type": "integer",
          "format": "int32"
        },
        "multicast": {
          "type": "boolean"
        },
        "address": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "readOnly": true
        }
      }
    },
    "no.mnemonic.services.geoip.spi.request.IPRangeSearchRequest": {
      "type": "object",
      "properties": {
        "country": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges from these countries (by country ID or two-letter code).",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "regionID": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges from these regions (by region ID).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "locationID": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges from these locations (by location ID).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "rangeID": {
          "type": "array",
          "position": 0,
          "description": "Only return specific ranges (by ID).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "ipAddress": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges which cover any of these IP-addresses. => format:ip",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "addressFamily": {
          "type": "string",
          "position": 0,
          "description": "Only return ranges for this address family range (ipv4 or ipv6).",
          "enum": [
            "IPv4",
            "IPv6"
          ]
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched ranges.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched ranges.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "If true, also include ranges marked as deleted."
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for ranges having lastUpdatedTimestamp greater than or equal to this timestamp."
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Search for ranges having lastUpdatedTimestamp less than or equal to this timestamp."
        },
        "countTimeout": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max wait in seconds for the count query to run. Set the value to -1 to skip counting (count will be returned -1). Set the value to 0 to execute the count query as long as the service allows, max allowed timeout value is 30 (seconds), default value is -1. (default -1)",
          "minimum": -1,
          "maximum": 30,
          "default": -1
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results.",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without a sign is ascending, with '-' sign is descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "startIP",
              "endIP",
              "locationID",
              "-id",
              "-startIP",
              "-endIP",
              "-locationID"
            ]
          }
        },
        "startIPAddress": {
          "type": "array",
          "position": 0,
          "description": "Only return ranges where the range start address matches one of these IP-addresses. => format:ip",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "fromIP": {
          "type": "string",
          "position": 0,
          "description": "Only return ranges where the range start address is greater than or equal to this IP-address. => format:ip"
        },
        "toIP": {
          "type": "string",
          "position": 0,
          "description": "Only return ranges where the range start address is less than or equal to this IP-address. => format:ip"
        }
      },
      "description": "Request to search for IP-address ranges"
    },
    "CountryAddRequest": {
      "type": "object",
      "required": [
        "countryCode",
        "countryName"
      ],
      "properties": {
        "countryCode": {
          "type": "string",
          "position": 0,
          "description": "The two-letter country-code",
          "minLength": 2,
          "maxLength": 2
        },
        "countryName": {
          "type": "string",
          "position": 0,
          "description": "The name of the country",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "AutonomousSystemInfo": {
      "type": "object",
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The autonomous system number"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the autonomous system"
        }
      },
      "description": "Compact representation of an autonomous system"
    }
  }
}