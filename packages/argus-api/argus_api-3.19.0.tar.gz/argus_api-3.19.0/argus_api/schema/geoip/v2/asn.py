"""Autogenerated API schema"""
from argus_api import session


get_autonomous_system = {'tags': ['development'], 'summary': 'Fetch an autonomous system by ASN or IP (DEV)', 'description': '', 'operationId': 'getAutonomousSystem', 'produces': ['application/json'], 'parameters': [{'name': 'asnOrIP', 'in': 'path', 'description': 'The ASN or IP of the autonomous system to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'asn': {'type': 'int', 'position': 0, 'description': 'The autonomous system number'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of the autonomous system'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was removed from the database'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the autonomous system', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Response model representing an autonomous system'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_autonomous_system_networks = {'tags': ['development'], 'summary': 'Fetch autonomous system networks for a single autonomous system by ASN or IP (DEV)', 'description': '', 'operationId': 'getAutonomousSystemNetworks', 'produces': ['application/json'], 'parameters': [{'name': 'asnOrIP', 'in': 'path', 'description': 'Identifier of the AS', 'required': True, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit the amount of returned networks', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first $offset networks', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Argus-specific unique identifier'}, 'autonomousSystem': {'type': 'dict', 'properties': {'asn': {'type': 'int', 'position': 0, 'description': 'The autonomous system number'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of the autonomous system'}}, 'description': 'Compact representation of an autonomous system'}, 'network': {'type': 'dict', 'properties': {'address': {'type': 'str', 'position': 0, 'description': 'Start IP of the network'}, 'mask': {'type': 'int', 'position': 0, 'description': 'Net mask (CIDR)'}}, 'description': 'Response model representing a network IP'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was removed from the database'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the autonomous system network', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Response model representing an autonomous system network'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_autonomous_system_networks = {'tags': ['development'], 'summary': 'Search for autonomous system networks with query parameters (DEV)', 'description': '', 'operationId': 'listAutonomousSystemNetworks', 'produces': ['application/json'], 'parameters': [{'name': 'asn', 'in': 'query', 'description': 'Only return networks matching the given ASNs', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'ip', 'in': 'query', 'description': 'Only return networks where one of the provided IPs belongs to the network', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit the amount of returned networks', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first $offset networks', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true include networks marked as deleted', 'required': False, 'type': 'bool', 'default': False, 'enum': ['true', 'false']}, {'name': 'sortBy', 'in': 'query', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'ip', 'enum': ['asn', 'ip', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-ip', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Argus-specific unique identifier'}, 'autonomousSystem': {'type': 'dict', 'properties': {'asn': {'type': 'int', 'position': 0, 'description': 'The autonomous system number'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of the autonomous system'}}, 'description': 'Compact representation of an autonomous system'}, 'network': {'type': 'dict', 'properties': {'address': {'type': 'str', 'position': 0, 'description': 'Start IP of the network'}, 'mask': {'type': 'int', 'position': 0, 'description': 'Net mask (CIDR)'}}, 'description': 'Response model representing a network IP'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was removed from the database'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the autonomous system network', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Response model representing an autonomous system network'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_autonomous_systems = {'tags': ['development'], 'summary': 'Search for autonomous system with query parameters (DEV)', 'description': '', 'operationId': 'listAutonomousSystems', 'produces': ['application/json'], 'parameters': [{'name': 'asn', 'in': 'query', 'description': 'Only return AS matching the given ASNs', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit the amount of returned AS', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first $offset AS', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'If true include AS marked as deleted', 'required': False, 'type': 'bool', 'default': False, 'enum': ['true', 'false']}, {'name': 'sortBy', 'in': 'query', 'description': "Sort the returned entries. Prefix with '-' to sort descending", 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'asn', 'enum': ['asn', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'asn': {'type': 'int', 'position': 0, 'description': 'The autonomous system number'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of the autonomous system'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was removed from the database'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the autonomous system', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Response model representing an autonomous system'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_autonomous_system_networks = {'tags': ['development'], 'summary': 'Search for autonomous system networks with an AutonomousSystemNetworkSearchRequest (DEV)', 'description': '', 'operationId': 'searchAutonomousSystemNetworks', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request for autonomous system network', 'required': False, 'schema': {'type': 'object', 'properties': {'asn': {'type': 'list', 'position': 0, 'description': 'Only return networks matching the given ASNs', 'uniqueItems': True, 'items': {'type': 'int'}}, 'ip': {'type': 'list', 'position': 0, 'description': 'Only return networks where one of the provided IPs belongs to the network => format:ip', 'uniqueItems': True, 'items': {'type': 'string'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the amount of returned networks (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first $offset networks (default 0)', 'minimum': 0, 'default': 0}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'If true include networks marked as deleted (default false)', 'default': False}, 'sortBy': {'type': 'list', 'position': 0, 'description': "Sort the returned entries. Prefix with '-' to sort descending (default ip)", 'items': {'type': 'str', 'enum': ['asn', 'ip', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-ip', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}}, 'description': 'Request used for autonomous system network search'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Argus-specific unique identifier'}, 'autonomousSystem': {'type': 'dict', 'properties': {'asn': {'type': 'int', 'position': 0, 'description': 'The autonomous system number'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of the autonomous system'}}, 'description': 'Compact representation of an autonomous system'}, 'network': {'type': 'dict', 'properties': {'address': {'type': 'str', 'position': 0, 'description': 'Start IP of the network'}, 'mask': {'type': 'int', 'position': 0, 'description': 'Net mask (CIDR)'}}, 'description': 'Response model representing a network IP'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the network was removed from the database'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the autonomous system network', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Response model representing an autonomous system network'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_autonomous_systems = {'tags': ['development'], 'summary': 'Search for autonomous systems with an AutonomousSystemSearchRequest (DEV)', 'description': '', 'operationId': 'searchAutonomousSystems', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request for autonomous system', 'required': False, 'schema': {'type': 'object', 'properties': {'asn': {'type': 'list', 'position': 0, 'description': 'Only return AS matching the given ASNs', 'uniqueItems': True, 'items': {'type': 'int'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the amount of returned AS (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first $offset AS (default 0)', 'minimum': 0, 'default': 0}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'If true include AS marked as deleted (default false)', 'default': False}, 'sortBy': {'type': 'list', 'position': 0, 'description': "Sort the returned entries. Prefix with '-' to sort descending (default asn)", 'items': {'type': 'str', 'enum': ['asn', 'name', 'createdTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp', '-asn', '-name', '-createdTimestamp', '-lastUpdatedTimestamp', '-deletedTimestamp']}}}, 'description': 'Request used for autonomous system search'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'asn': {'type': 'int', 'position': 0, 'description': 'The autonomous system number'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of the autonomous system'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was first registered in the database'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was last updated/changed in the database'}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when the AS was removed from the database'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags defined for the autonomous system', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}, 'description': 'Response model representing an autonomous system'}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}