"""Autogenerated API schema"""
from argus_api import session


authorize = {'tags': ['authentication/v1/oauth'], 'summary': 'Request authorization to a OAuth client (INTERNAL)', 'description': 'This operation authorizes the user to access a specified Oauth client, following the OAuth authorization flow. The endpoint returns an authorization token, which can be used by the client to exchange for an access and/or ID token using the token endpoint.', 'operationId': 'authorize', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Authorization request', 'required': False, 'schema': {'type': 'object', 'required': ['clientID', 'redirectURI', 'responseType'], 'properties': {'responseType': {'type': 'list', 'position': 0, 'description': 'Type of response requested.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['code', 'id_token', 'token']}, 'maxItems': 2147483647, 'minItems': 1}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The clientID of the requesting client.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'The redirectURI requested by the client.'}, 'state': {'type': 'str', 'position': 0, 'description': 'The state submitted by the client. This state should follow unmodified back to the redirect response after a valid client authorization.'}, 'nonce': {'type': 'str', 'position': 0, 'description': 'A nonce requested by the client. The nonce should pass through unmodified and follow the token issued for this request.'}, 'scope': {'type': 'list', 'position': 0, 'description': "The scopes requested by the client. If 'openid' is in scope, this is an OpenID request.", 'uniqueItems': True, 'items': {'type': 'string'}}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'authorizationCode': {'type': 'str', 'position': 0, 'description': 'The authorization code provided by the authentication service.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'The redirectURI of the client. This should correspond to the redirectURI requested by the client.'}, 'state': {'type': 'str', 'position': 0, 'description': 'The unmodified state reported by the client in the request..'}, 'idToken': {'type': 'str', 'position': 0, 'description': 'The OpenID token provided by the authentication service.'}, 'accessToken': {'type': 'str', 'position': 0, 'description': 'The OAuth access token provided by the authentication service.'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
create_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Define a new OAuth2 client (PUBLIC)', 'description': 'This operation defines a new OAuth2 client application.', 'operationId': 'createOAuth2Client', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request object defining client to add', 'required': False, 'schema': {'type': 'object', 'required': ['authenticationMethod', 'clientIPRange', 'description', 'mainURI', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources. => [a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'domain': {'type': 'str', 'position': 0, 'description': 'Specifies the domain in which this resource is defined. The user must have the required function for this domain. If customer is set, the customer must be defined in this domain. If this field is not set, it defaults to the current users domain.'}, 'customer': {'type': 'str', 'position': 0, 'description': 'Specifying a customer will restrict this resource to a specific customer. This will limit access to this resource to users having the required function for this specific customer. The resource clients delegated session will also be constrained to this particular customer. If customer is not specified, access to this resource will be given to users having the requiredFunction for any customer.'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus. => Sanitize by regex https://.*'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The redirect URIs to allow when redirecting from the OAuth authorization endpoint. => Sanitize by regex http(s)?://.*', 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}, 'requiredFunction': {'type': 'str', 'position': 0, 'description': 'The function (id or name) required to grant access to this resource. If customer is specified, this function is required for that particular customer.'}, 'permissionScope': {'type': 'str', 'position': 0, 'description': 'The function/role (id or name) to constrain the delegated client session to, restricting what the resource client will be allowed to do on behalf of the user. The delegated client session will be constrained to the least set of the users current session permissions, and this role.'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client. Default is password.', 'enum': ['none', 'password']}, 'clientSecret': {'type': 'str', 'position': 0, 'description': 'If authenticationMethod is password, the password must be provided in the clientSecret parameter.'}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from. => format:ip', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A list of scopes the client will be permitted to ask for. If not set, all scopes are assumed permitted for the client', 'uniqueItems': True, 'items': {'type': 'string'}}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Optional custom claims configuration. See documentation for valid configuration format per custom claim.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['provider'], 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider to configure', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level for this client (default external)', 'enum': ['external', 'standard']}, 'hidden': {'type': 'bool', 'position': 0, 'description': 'If true, this client is by default excluded in the oauth external client list'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED. Use redirectURIs instead.'}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['authenticationMethod', 'createdByUser', 'createdTimestamp', 'description', 'domain', 'flags', 'id', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'mainURI', 'maxSecurityLevel', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Client ID'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was created'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was last updated'}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'dict', 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider this configuration applies to', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}, 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on this client', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Delete a OAuth2 client (PUBLIC)', 'description': '', 'operationId': 'deleteOauth2Client', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of client to delete', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['authenticationMethod', 'createdByUser', 'createdTimestamp', 'description', 'domain', 'flags', 'id', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'mainURI', 'maxSecurityLevel', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Client ID'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was created'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was last updated'}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'dict', 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider this configuration applies to', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}, 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on this client', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}}}
get_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Fetch a OAuth2 client descriptor (PUBLIC)', 'description': '', 'operationId': 'getOauth2Client', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of client to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['authenticationMethod', 'createdByUser', 'createdTimestamp', 'description', 'domain', 'flags', 'id', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'mainURI', 'maxSecurityLevel', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Client ID'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was created'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was last updated'}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'dict', 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider this configuration applies to', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}, 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on this client', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}}}
get_token = {'tags': ['authentication/v1/oauth'], 'summary': 'Exchange a OAuth2 authorization code with an access token (PUBLIC)', 'description': 'This operation allows an OAuth2 client to exchange an authorization code with an access token, following the OAuth authorization flow. Following the authorization code flow, a client should perform a www/form-urlencoded form POST request, on the format client_id=xxx&client_secret=yyy&grant_type=authorization_code&redirect_uri=https://my.app/callback&code=myAuthorizationCodeA refresh token request should be a www/form-urlencoded form POST request, on the format client_id=xxx&client_secret=yyy&grant_type=refresh_token&redirect_uri=https://my.app/callback&code=myRefreshToken', 'operationId': 'getToken', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'access_token': {'type': 'str', 'position': 0, 'description': 'The authorization code provided by the oauth authorization endpoint.', 'readOnly': True}, 'id_token': {'type': 'str', 'position': 0, 'description': 'The OpenID token provided by the oauth authorization endpoint.', 'readOnly': True}, 'refresh_token': {'type': 'str', 'position': 0, 'description': 'The refresh token provided by the oauth authorization endpoint.', 'readOnly': True}, 'token_type': {'type': 'str', 'position': 0, 'description': 'The type of the token returned. This value is always Bearer.', 'readOnly': True, 'enum': ['Bearer']}, 'expires_in': {'type': 'int', 'position': 0, 'description': 'The number of seconds until this token expires.', 'readOnly': True}}}}}}, '400': {'description': 'Validation error'}}}
get_user_info = {'tags': ['authentication/v1/oauth'], 'summary': 'Return OpenID userinfo (PUBLIC)', 'description': '', 'operationId': 'getUserInfo', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'sub': {'type': 'string'}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'picture': {'type': 'string'}, 'phone': {'type': 'string'}, 'groups': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'preferred_username': {'type': 'str', 'readOnly': True}}}}}}}}
list_oauth2_clients = {'tags': ['authentication/v1/oauth'], 'summary': 'List available OAuth2 client descriptors (PUBLIC)', 'description': '', 'operationId': 'listOauth2Clients', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Limit results to clients for this customer (or subcustomers)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'domain', 'in': 'query', 'description': 'Limit results to clients for this domain', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Limit results to clients matching these keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort order', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'shortName'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['authenticationMethod', 'createdByUser', 'createdTimestamp', 'description', 'domain', 'flags', 'id', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'mainURI', 'maxSecurityLevel', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Client ID'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was created'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was last updated'}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'dict', 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider this configuration applies to', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}, 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on this client', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}, '412': {'description': 'Invalid argument'}}}
post_user_info = {'tags': ['authentication/v1/oauth'], 'summary': 'Return OpenID userinfo (PUBLIC)', 'description': '', 'operationId': 'postUserInfo', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'sub': {'type': 'string'}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'picture': {'type': 'string'}, 'phone': {'type': 'string'}, 'groups': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'preferred_username': {'type': 'str', 'readOnly': True}}}}}}}}
search_oauth2_clients = {'tags': ['authentication/v1/oauth'], 'summary': 'Search available OAuth2 client descriptors (PUBLIC)', 'description': '', 'operationId': 'searchOauth2Clients', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'required': False, 'schema': {'type': 'object', 'properties': {'includeFlags': {'type': 'list', 'position': 0, 'description': 'Include clients having all these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'hidden']}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these customers (by id or shortname)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these domains (by id or shortname)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'list', 'position': 0, 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Subcriteria for this search request', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'includeFlags': {'type': 'list', 'position': 0, 'description': 'Include clients having all these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'hidden']}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these customers (by id or shortname)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these domains (by id or shortname)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'list', 'position': 0, 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Subcriteria for this search request', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'includeFlags': {'type': 'list', 'position': 0, 'description': 'Include clients having all these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'hidden']}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these customers (by id or shortname)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these domains (by id or shortname)', 'uniqueItems': True, 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'list', 'position': 0, 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Subcriteria for this search request', 'uniqueItems': True, 'items': []}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match clients by these keywords', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search based on all keywords (AND), or based on any keyword (OR) (default Match all keywords (AND))', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'all']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude clients having any of these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'hidden']}}, 'required': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as AND criteria'}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as NOT criteria'}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match clients by these keywords', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search based on all keywords (AND), or based on any keyword (OR) (default Match all keywords (AND))', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'all']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude clients having any of these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'hidden']}}, 'required': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as AND criteria'}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as NOT criteria'}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match clients by these keywords', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search based on all keywords (AND), or based on any keyword (OR) (default Match all keywords (AND))', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'all']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude clients having any of these flags', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'hidden']}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the number of results (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first results, in sort order (default 0)', 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Specify sort order (default shortName)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'createdTimestamp', 'lastUpdatedTimestamp', '-id', '-name', '-shortName', '-createdTimestamp', '-lastUpdatedTimestamp']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['authenticationMethod', 'createdByUser', 'createdTimestamp', 'description', 'domain', 'flags', 'id', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'mainURI', 'maxSecurityLevel', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Client ID'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was created'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was last updated'}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'dict', 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider this configuration applies to', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}, 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on this client', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}, '412': {'description': 'Invalid argument'}}}
update_oauth2_client = {'tags': ['authentication/v1/oauth'], 'summary': 'Update an existing OAuth2 client (PUBLIC)', 'description': 'This operation updates an existing OAuth2 client application.', 'operationId': 'updateOAuth2Client', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of OAuth2 client to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request object defining updates', 'required': False, 'schema': {'type': 'object', 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'If set, update the shortname describing this resource. This name will show up when listing external resources. => [a-zA-Z0-9_:\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'If set, update the name describing this resource. This name will show up when listing external resources. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'If set, update the description of this resource. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'If set, update the main landing page for this resource. This will be used to link to the application from Argus. => Sanitize by regex https://.*'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'If set, update the redirect URIs to allow when redirecting from the OAuth authorization endpoint. => Sanitize by regex http(s)?://.*', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'str', 'position': 0, 'description': 'If set, change the function (id or name) required to grant access to this resource. If customer is specified, this function is required for that particular customer.'}, 'permissionScope': {'type': 'str', 'position': 0, 'description': 'If set, change the function/role (id or name) to constrain the delegated client session to, restricting what the resource client will be allowed to do on behalf of the user. The delegated client session will be constrained to the least set of the users current session permissions, and this role.'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'If set, change the authentication method required for this client.', 'enum': ['none', 'password']}, 'clientSecret': {'type': 'str', 'position': 0, 'description': 'If set, update the client secret of this OAuth2 client. If changing authenticationMethod to password, the password must be provided in this clientSecret parameter.'}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'If set, change the CIDR IP ranges which the client will be permitted from. => format:ip', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'If set, change the scopes the scopes the client is restricted to. An empty set will allow all scopes.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'If set, overwrite any existing custom claims configuration. This would remove any existing providers. Use empty array to remove all existing providers.', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['provider'], 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider to configure', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'If set, change the max security level for this client', 'enum': ['external', 'standard']}, 'hidden': {'type': 'bool', 'position': 0, 'description': "If set, change the value of the 'hidden' flag on this client. A hidden client is by default excluded from the oauth client application list."}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED. Use redirectURIs instead.'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['authenticationMethod', 'createdByUser', 'createdTimestamp', 'description', 'domain', 'flags', 'id', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'mainURI', 'maxSecurityLevel', 'name', 'permissionScope', 'requiredFunction', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'Client ID'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'A shortname describing this resource. This name will show up when listing external resources.'}, 'name': {'type': 'str', 'position': 0, 'description': 'A name describing this resource. This name will show up when listing external resources.'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this resource.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'mainURI': {'type': 'str', 'position': 0, 'description': 'The main landing page for this resource. This will be used to link to the application from Argus.'}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'DEPRECATED: This field is DEPRECATED, use redirectURIs instead. This field will contain the first redirect URI. This field is only set if user has permission viewOAuthClientsDetails.'}, 'redirectURIs': {'type': 'list', 'position': 0, 'description': 'The valid redirect URIs that can be used when redirecting from the OAuth authorization endpoint. This field is only populated if user has permission viewOAuthClientsDetails.', 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function.'}}, 'description': 'SPI FunctionInfo'}, 'authenticationMethod': {'type': 'str', 'position': 0, 'description': 'The authentication method required for this client.', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'position': 0, 'description': 'A list of CIDR IP ranges which the client will be permitted from.  This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'permittedScopes': {'type': 'list', 'position': 0, 'description': 'A set of OAuth2 scopes which the client will be permitted to request. An empty set means all scopes are permitted. This field is only set if user has permission viewOAuthClientsDetails.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was created'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this resource was last updated'}, 'openIDCustomClaims': {'type': 'list', 'position': 0, 'description': 'Any OpenID custom claim providers. This field is only set if user has permission viewOAuthClientsDetails.', 'items': {'type': 'dict', 'properties': {'provider': {'type': 'str', 'position': 0, 'description': 'The provider this configuration applies to', 'enum': ['functionRoleMapping', 'allUserGroups', 'userGroups']}, 'configuration': {'type': 'object'}}, 'description': 'Represents a custom OpenID claim provider configuration for an OpenID Client'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on this client', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim', 'hidden']}}, 'maxSecurityLevel': {'type': 'str', 'position': 0, 'description': 'Max security level allowed for clients', 'enum': ['external', 'standard']}}}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
#: "create_o_auth2_client" is an alias for "create_oauth2_client"
create_o_auth2_client = create_oauth2_client
#: "update_o_auth2_client" is an alias for "update_oauth2_client"
update_o_auth2_client = update_oauth2_client