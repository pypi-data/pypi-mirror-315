"""Autogenerated API schema"""
from argus_api import session


get_aws_options = {'tags': ['development'], 'summary': 'Options currently available to create API-keys for AWS (DEV)', 'description': 'Returns a response of available services and regions for the specified cloud provider.If the provider is currently unavailable, a 412 HTTP status code will be returned', 'operationId': 'getAWSOptions', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'services': {'type': 'list', 'position': 0, 'description': 'AWS services the API key should be valid for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'regions': {'type': 'list', 'position': 0, 'description': 'AWS regions the API key should be valid for', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Response for request to create API key for AWS'}}}}}}
get_azure_options = {'tags': ['development'], 'summary': 'Options currently available to create API-keys for Azure (DEV)', 'description': 'Returns a response of available services and regions for the specified cloud provider.If the provider is currently unavailable, a 412 HTTP status code will be returned', 'operationId': 'getAzureOptions', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'services': {'type': 'list', 'position': 0, 'description': 'Azure services the API key should be valid for', 'uniqueItems': True, 'items': {'type': 'string'}}, 'regions': {'type': 'list', 'position': 0, 'description': 'Azure regions the API key should be valid for', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Response for request to create API key for Azure instances'}}}}}}
get_github_options = {'tags': ['development'], 'summary': 'Options currently available to create API-keys for GitHub (DEV)', 'description': 'Returns a response of available services for the specified cloud provider.If the provider is currently unavailable, a 412 HTTP status code will be returned', 'operationId': 'getGithubOptions', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'services': {'type': 'list', 'position': 0, 'description': 'Github services the API key should be valid for', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Response for creating API key for Github services'}}}}}}