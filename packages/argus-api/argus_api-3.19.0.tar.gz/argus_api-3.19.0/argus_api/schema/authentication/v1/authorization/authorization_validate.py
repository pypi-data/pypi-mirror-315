"""Autogenerated API schema"""
from argus_api import session


validate_user_authorization = {'tags': ['authentication/v1'], 'summary': 'Validate authorization token (PUBLIC)', 'description': 'This endpoint will receive an authorization token to verify its validity.', 'operationId': 'validateUserAuthorization', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Authorization validation request', 'required': False, 'schema': {'type': 'object', 'required': ['authorization', 'operation'], 'properties': {'operation': {'type': 'str', 'position': 0, 'description': 'The name of the operation'}, 'context': {'type': 'dict', 'position': 0, 'description': 'Context variables to scope this authorization. All context variables must be present in the authorization token and their value must be equal to those provided here.', 'additionalProperties': {'type': 'string'}}, 'authorization': {'type': 'str', 'position': 0, 'description': 'The authorization JWT token'}, 'allowReplay': {'type': 'bool', 'position': 0, 'description': 'If true, previous validations of the same authorization is ignored. Defaults to false (will fail if token was previously validated)'}, 'allowExpired': {'type': 'bool', 'position': 0, 'description': 'If true, an expired authorization is ignored. Defaults to false (will fail if token is expired)'}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'operation': {'type': 'str', 'position': 0, 'description': 'The operation this authorization is valid for'}, 'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this authorization was created.'}, 'expires': {'type': 'int', 'position': 0, 'description': 'The timestamp when this authorization expires.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name"}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name"}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'flags': {'type': 'list', 'position': 0, 'description': "The subject's flags", 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'type': 'str', 'options': ['user', 'group']}, 'description': 'SPI UserInfo'}, 'context': {'type': 'dict', 'position': 0, 'description': 'Context variables found in this authorization', 'additionalProperties': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}