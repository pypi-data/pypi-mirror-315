"""Autogenerated API schema"""
from argus_api import session


delete_properties = {'tags': ['currentuser/v1'], 'summary': "Delete multiple current user's preferences (PUBLIC)", 'description': '', 'operationId': 'deleteProperties', 'produces': ['application/json'], 'parameters': [{'name': 'key', 'in': 'query', 'description': 'Keys to delete', 'required': True, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_property = {'tags': ['currentuser/v1'], 'summary': "Delete the specified current user's preference (PUBLIC)", 'description': '', 'operationId': 'deleteProperty', 'produces': ['application/json'], 'parameters': [{'name': 'propertyKey', 'in': 'path', 'description': 'Preference key to delete', 'required': True, 'type': 'str'}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
get_property = {'tags': ['currentuser/v1'], 'summary': "Fetch a specific current user' preference value (PUBLIC)", 'description': 'Returns a the specified preference value, or null if not set', 'operationId': 'getProperty', 'produces': ['application/json'], 'parameters': [{'name': 'propertyKey', 'in': 'path', 'description': 'Preference value to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'type': 'string'}}, '401': {'description': 'Authentication failed'}, '404': {'description': 'Key not set'}, '412': {'description': 'Invalid arguments'}}}
list_properties = {'tags': ['currentuser/v1'], 'summary': "List all current user's preferences (PUBLIC)", 'description': 'Returns a dictionary of key/value pairs, defining all the users preferences', 'operationId': 'listProperties', 'produces': ['application/json'], 'parameters': [{'name': 'key', 'in': 'query', 'description': 'Preference keys to fetch. If not set, fetch all.', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'type': 'object', 'additionalProperties': {'type': 'object'}}}, '401': {'description': 'Authentication failed'}, '412': {'description': 'Invalid arguments'}}}
set_properties = {'tags': ['currentuser/v1'], 'summary': "Set the specified current user's preferences (PUBLIC)", 'description': '', 'operationId': 'setProperties', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Map of preference values to update', 'required': False, 'schema': {'type': 'object', 'additionalProperties': {'type': 'string'}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'type': 'object', 'additionalProperties': {'type': 'object'}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
#: "set_properties_1" is an alias for "set_properties"
set_properties_1 = set_properties