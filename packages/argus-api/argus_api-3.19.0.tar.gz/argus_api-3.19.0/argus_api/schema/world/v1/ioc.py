"""Autogenerated API schema"""
from argus_api import session


extract_ioc = {'tags': ['world/v1'], 'summary': 'Extract indicators of compromise (IOC) from a text blob (PUBLIC)', 'description': '', 'operationId': 'extractIOC', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Extract IOC from a text blob', 'required': False, 'schema': {'type': 'object', 'required': ['text'], 'properties': {'text': {'type': 'str', 'position': 0, 'description': 'Text from which IOC should be extracted'}}, 'description': 'Extract indicators of compromise (IOC) from a text blob'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'md5': {'type': 'list', 'position': 0, 'description': 'Extracted MD5 hashes', 'uniqueItems': True, 'items': {'type': 'string'}}, 'sha1': {'type': 'list', 'position': 0, 'description': 'Extracted SHA1 hashes', 'uniqueItems': True, 'items': {'type': 'string'}}, 'sha256': {'type': 'list', 'position': 0, 'description': 'Extracted SHA256 hashes', 'uniqueItems': True, 'items': {'type': 'string'}}, 'sha512': {'type': 'list', 'position': 0, 'description': 'Extracted SHA512 hashes', 'uniqueItems': True, 'items': {'type': 'string'}}, 'url': {'type': 'list', 'position': 0, 'description': 'Extracted URLs', 'uniqueItems': True, 'items': {'type': 'string'}}, 'fqdn': {'type': 'list', 'position': 0, 'description': 'Extracted FQDNs', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ipv4': {'type': 'list', 'position': 0, 'description': 'Extracted IPv4 addresses', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ipv6': {'type': 'list', 'position': 0, 'description': 'Extracted IPv6 addresses', 'uniqueItems': True, 'items': {'type': 'string'}}}, 'description': 'Contains extracted indicators of comprise (IOC)'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}