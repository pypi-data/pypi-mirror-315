{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "tags": [
    {
      "name": "datacollector/v1"
    },
    {
      "name": "jsonobject/v1/object"
    },
    {
      "name": "jsonobject/v1/type"
    },
    {
      "name": "world/v1"
    },
    {
      "name": "logging/v1"
    }
  ],
  "paths": {
    "/datacollector/v1/category": {
      "get": {
        "tags": [
          "datacollector/v1"
        ],
        "summary": "Retrieve a list of valid categories (PUBLIC)",
        "description": "",
        "operationId": "listCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of categories",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned categories",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.datacollector.spi.response.DataCollectorCategory-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/datacollector/v1/ingest/{category}/bulk": {
      "post": {
        "tags": [
          "datacollector/v1"
        ],
        "summary": "Submit JSON data in bulk that will be forwarded to a Kafka topic based on its category (PUBLIC)",
        "description": "",
        "operationId": "ingestBulkData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "What category the records belong to",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request containing the category and data to forward to Kafka",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.request.DataCollectorIngestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.datacollector.spi.response.DataCollectorIngestResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/datacollector/v1/ingest/{category}": {
      "post": {
        "tags": [
          "datacollector/v1"
        ],
        "summary": "Submit JSON data that will be forwarded to a Kafka topic based on its category (PUBLIC)",
        "description": "",
        "operationId": "ingestData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "What category the records belong to",
            "required": true,
            "type": "string"
          },
          {
            "name": "customer",
            "in": "query",
            "description": "The customer ID or shortname that this data belongs to. Defaults to the current users customer",
            "required": false,
            "type": "string"
          },
          {
            "name": "ignoreOnFailed",
            "in": "query",
            "description": "Whether or not to ignore any errors in the record",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The JSON data to forward to kafka",
            "required": false,
            "schema": {
              "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.datacollector.spi.response.DataCollectorIngestResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/type/{type}/schema": {
      "get": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Returns a json schema identified by type. (PUBLIC)",
        "description": "",
        "operationId": "getJsonSchema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonSchemaResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}/favorite": {
      "post": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Creates a new JsonObjectFavorite to current user's JsonObject (PUBLIC)",
        "description": "",
        "operationId": "addJsonObjectFavorite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to favorite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Deletes JsonObjectFavorite to current user's JsonObject (PUBLIC)",
        "description": "",
        "operationId": "removeJsonObjectFavorite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject the favorite should be removed from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}": {
      "get": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Returns a JsonObject identified by either id or type+shortname. (PUBLIC)",
        "description": "",
        "operationId": "getJsonObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeData",
            "in": "query",
            "description": "Whether or not to include the actual JsonObject data in the response.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Updates a JsonObject identified by either id or type+shortname (PUBLIC)",
        "description": "",
        "operationId": "updateJsonObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to update.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.UpdateJsonObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Deletes a JsonObject identified by either id or type+shortname (PUBLIC)",
        "description": "",
        "operationId": "deleteJsonObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}": {
      "get": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Search json objects with specified query parameters (PUBLIC)",
        "description": "",
        "operationId": "getJsonObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "Filter search by JsonObject keyword fields (name and short name)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "favorite",
            "in": "query",
            "description": "Limit search to favorites",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeData",
            "in": "query",
            "description": "Whether or not to include the actual JsonObject data in the response.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Whether or not to include deleted JsonObjects in the response.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit result",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset result",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      },
      "post": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Creates a new JsonObject of a specified type. (PUBLIC)",
        "description": "",
        "operationId": "createJsonObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.CreateJsonObjectRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}/revisions": {
      "get": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Returns the revisions of a JsonObject identified by either id or type+shortname (PUBLIC)",
        "description": "",
        "operationId": "listJsonObjectRevisions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to retrieve revisions for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeData",
            "in": "query",
            "description": "Whether or not to include the actual JsonObject data in the revision responses.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned results",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "By how many records to offset results",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}/revisions/{revision}/revert": {
      "put": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Reverts a JsonObject identified by either id or type+shortname to a previous revision (PUBLIC)",
        "description": "",
        "operationId": "revertJsonObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the current JsonObject.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "in": "path",
            "description": "The revision to revert to.",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}/access": {
      "get": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Returns a list of access entries for a JsonObject identified by either id or type+shortname (PUBLIC)",
        "description": "",
        "operationId": "listJsonObjectAccess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to list access entries for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Whether or not to include deleted access entries in the response.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned results",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "By how many records to offset results",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Adds an access entry to the identified JsonObject. (PUBLIC)",
        "description": "",
        "operationId": "grantJsonObjectAccess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to add the access entry to.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Grant request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}/access/bulk": {
      "post": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Bulk adds access entries to the identified JsonObject. (PUBLIC)",
        "description": "",
        "operationId": "bulkGrantJsonObjectAccess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject to add the access entries to.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Grant JsonObject access bulk request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessBulkRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/{idOrShortname}/access/{id}": {
      "delete": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Revokes access entity to the identified JsonObject (PUBLIC)",
        "description": "",
        "operationId": "revokeJsonObjectAccess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortname",
            "in": "path",
            "description": "Id or shortName of the JsonObject the access entity should be removed from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the access entity to revoke",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/jsonobject/v1/object/{type}/search": {
      "post": {
        "tags": [
          "jsonobject/v1/object"
        ],
        "summary": "Search json objects with specified criteria (PUBLIC)",
        "description": "",
        "operationId": "searchJsonObjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search json object request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchRequest"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The shortName of the JsonObject type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/jsonobject/v1/type": {
      "get": {
        "tags": [
          "jsonobject/v1/type"
        ],
        "summary": "Returns a list of available JsonObject types (PUBLIC)",
        "description": "",
        "operationId": "listJsonObjectTypeDescriptors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned results",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "By how many records to offset results",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeDescriptor-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/world/v1/timezone": {
      "get": {
        "tags": [
          "world/v1"
        ],
        "summary": "Get all time zones (PUBLIC)",
        "description": "",
        "operationId": "getTimeZones",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of time zones",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned time zones",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "Filter time zones by keywords",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.jargus.model.TimeZone-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/logging/v1/csp-report-uri": {
      "post": {
        "tags": [
          "logging/v1"
        ],
        "summary": "Submit CSP log event (INTERNAL)",
        "description": "",
        "operationId": "submitCSPLogEvent",
        "consumes": [
          "application/json",
          "application/csp-report"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CSP log event submission request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.world.spi.request.CSPLogEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.CSPResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/logging/v1/client": {
      "post": {
        "tags": [
          "logging/v1"
        ],
        "summary": "Submit client log events in a bulk operation (INTERNAL)",
        "description": "",
        "operationId": "submitClientLogEventsBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Client log event bulk submission request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.world.spi.request.ClientLoggingBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.LoggingBulkResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/logging/v1/distributed": {
      "post": {
        "tags": [
          "logging/v1"
        ],
        "summary": "Submit distributed log events in a bulk operation (INTERNAL)",
        "description": "",
        "operationId": "submitDistributedLogEventsBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Distributed log event bulk submission request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.world.spi.request.DistributedLoggingBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.LoggingBulkResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/logging/v1/tool": {
      "post": {
        "tags": [
          "logging/v1"
        ],
        "summary": "Submit tool log events in a bulk operation (INTERNAL)",
        "description": "",
        "operationId": "submitToolingLogEventsBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "tool log event bulk submission request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.world.spi.request.ToolLoggingBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.LoggingBulkResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/world/v1/ioc": {
      "post": {
        "tags": [
          "world/v1"
        ],
        "summary": "Extract indicators of compromise (IOC) from a text blob (PUBLIC)",
        "description": "",
        "operationId": "extractIOC",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Extract IOC from a text blob",
            "required": false,
            "schema": {
              "$ref": "#/definitions/no.mnemonic.services.world.spi.request.IOCParserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.IOCParserResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/world/v1/dns/ip/{ip}": {
      "get": {
        "tags": [
          "world/v1"
        ],
        "summary": "Get DNS reverse hostname by IP (PUBLIC)",
        "description": "",
        "operationId": "lookupDNS",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "description": "Lookup reverse DNS hostname information for specified value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.WhoIsResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/world/v1/time": {
      "get": {
        "tags": [
          "development"
        ],
        "summary": "Resolves an Argus timestring. This can be used by UI components to resolve an Argus relative or absolute timestring into an absolute timestamp. (DEV)",
        "description": "",
        "operationId": "getTime",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "timestring",
            "in": "query",
            "description": "Timestring to resolve",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.GetTimeResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/world/v1/whois": {
      "get": {
        "tags": [
          "world/v1"
        ],
        "summary": "Get WHOIS information by IP or host name (PUBLIC)",
        "description": "",
        "operationId": "lookupWhoIs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lookup",
            "in": "query",
            "description": "Lookup WhoIs information for specified value",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-no.mnemonic.services.world.spi.response.WhoIsResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    }
  },
  "definitions": {
    "no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessBaseRequest": {
      "type": "object",
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "type": "string",
          "position": 0,
          "description": "The access level this entry grants.",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "subject": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname for user or group to grant explicit access to."
        },
        "function": {
          "type": "string",
          "position": 0,
          "description": "ID or name of function for granting role-based access."
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname of customer for granting role-based access. Null if global permission."
        },
        "searchable": {
          "type": "boolean",
          "position": 0,
          "description": "If true, the object will be searchable. (default true)",
          "default": true
        }
      },
      "description": "Base request to add access entries to a JsonObject"
    },
    "no.mnemonic.services.world.spi.response.GetTimeResponse": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "no.mnemonic.services.argus.common.rest.model.ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "GrantJsonObjectAccessBulkRequest": {
      "type": "object",
      "required": [
        "accessEntries"
      ],
      "properties": {
        "accessEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessBaseRequest"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      },
      "description": "Request for adding a bulk of access entries to a JsonObject"
    },
    "ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse"
          }
        }
      }
    },
    "ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess"
        }
      }
    },
    "no.mnemonic.services.argus.common.spi.response.SubjectInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The subject's short name"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The subject's name"
        },
        "domain": {
          "position": 0,
          "description": "The subject's domain",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        },
        "customer": {
          "position": 0,
          "description": "The customer the subject belongs to",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The subject's flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type of the subject",
          "readOnly": true,
          "enum": [
            "user",
            "group"
          ]
        }
      },
      "description": "SPI SubjectInfo"
    },
    "GrantJsonObjectAccessBaseRequest": {
      "type": "object",
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "type": "string",
          "position": 0,
          "description": "The access level this entry grants.",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "subject": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname for user or group to grant explicit access to."
        },
        "function": {
          "type": "string",
          "position": 0,
          "description": "ID or name of function for granting role-based access."
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname of customer for granting role-based access. Null if global permission."
        },
        "searchable": {
          "type": "boolean",
          "position": 0,
          "description": "If true, the object will be searchable. (default true)",
          "default": true
        }
      },
      "description": "Base request to add access entries to a JsonObject"
    },
    "no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchSubCriteriaRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "array",
          "position": 0,
          "description": "Limit search to json objects with the given customers, identified by id or shortname",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "Search for keywords against fields defined by KeywordFieldStrategy",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by keywords (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "name",
              "shortName",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict different keywords should be matched (default all)",
          "enum": [
            "any",
            "all"
          ]
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which timestamp fields will be filtered with start/endTimestamp (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)",
          "enum": [
            "any",
            "all"
          ]
        },
        "user": {
          "type": "array",
          "position": 0,
          "description": "Search using users identified by id or shortname. If given a group, we will resolve all members of the group recursively",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "userFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by user (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "owner",
              "read",
              "write",
              "createdByUser",
              "lastUpdatedByUser",
              "all"
            ]
          }
        },
        "favorite": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to only search for favorites, exclude favorites or neither (default null)",
          "default": false
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criteria",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchSubCriteriaRequest"
          }
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Is this subcriteria required? If true the search is AND-ed (default false)",
          "default": false
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Exclude objects matching subcriteria? If true the search is NOT-ed (default false)",
          "default": false
        }
      },
      "description": "Request defining if sub-criteria should be included or excluded"
    },
    "DataCollectorIngestResponse": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The number of accepted data submissions"
        },
        "rejected": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The number of rejected data submissions"
        },
        "errorInformationList": {
          "type": "array",
          "position": 0,
          "description": "A list of information on errors in the data submissions",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.response.FailedDataRecord"
          }
        }
      }
    },
    "LoggingBulkResponse": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of successfully submitted logs."
        },
        "rejected": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of logs that failed validation."
        },
        "errorInformationList": {
          "type": "array",
          "position": 0,
          "description": "Information regarding any logs that are rejected during validation.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.response.LogErrorInformation"
          }
        }
      }
    },
    "JsonNode": {
      "type": "object"
    },
    "JsonObjectSearchSubCriteriaRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "array",
          "position": 0,
          "description": "Limit search to json objects with the given customers, identified by id or shortname",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "Search for keywords against fields defined by KeywordFieldStrategy",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by keywords (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "name",
              "shortName",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict different keywords should be matched (default all)",
          "enum": [
            "any",
            "all"
          ]
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which timestamp fields will be filtered with start/endTimestamp (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)",
          "enum": [
            "any",
            "all"
          ]
        },
        "user": {
          "type": "array",
          "position": 0,
          "description": "Search using users identified by id or shortname. If given a group, we will resolve all members of the group recursively",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "userFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by user (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "owner",
              "read",
              "write",
              "createdByUser",
              "lastUpdatedByUser",
              "all"
            ]
          }
        },
        "favorite": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to only search for favorites, exclude favorites or neither (default null)",
          "default": false
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criteria",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchSubCriteriaRequest"
          }
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Is this subcriteria required? If true the search is AND-ed (default false)",
          "default": false
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Exclude objects matching subcriteria? If true the search is NOT-ed (default false)",
          "default": false
        }
      },
      "description": "Request defining if sub-criteria should be included or excluded"
    },
    "IOCParserResponse": {
      "type": "object",
      "properties": {
        "md5": {
          "type": "array",
          "position": 0,
          "description": "Extracted MD5 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sha1": {
          "type": "array",
          "position": 0,
          "description": "Extracted SHA1 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sha256": {
          "type": "array",
          "position": 0,
          "description": "Extracted SHA256 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sha512": {
          "type": "array",
          "position": 0,
          "description": "Extracted SHA512 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "array",
          "position": 0,
          "description": "Extracted URLs",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "fqdn": {
          "type": "array",
          "position": 0,
          "description": "Extracted FQDNs",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "ipv4": {
          "type": "array",
          "position": 0,
          "description": "Extracted IPv4 addresses",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "ipv6": {
          "type": "array",
          "position": 0,
          "description": "Extracted IPv6 addresses",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Contains extracted indicators of comprise (IOC)"
    },
    "no.mnemonic.services.world.spi.request.ClientLogEntry": {
      "type": "object",
      "required": [
        "clientBrowser",
        "originatingPage",
        "timestamp",
        "traceName"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp for event. Accepts ISO-8601 timestamp string.",
          "minimum": 1
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "Event level: debug, info, warning or error. Defaults to info",
          "enum": [
            "none",
            "error",
            "warning",
            "info",
            "debug"
          ]
        },
        "stacktrace": {
          "type": "string",
          "position": 0,
          "description": "Complete stacktrace for event. Max string length is 10000 characters."
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "Additional information that could be relevant in the context. Max length of context values is 4000 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "position": 0,
          "description": "Event message. Max string length is 4000 characters."
        },
        "clientBrowser": {
          "type": "string",
          "position": 0,
          "description": "Browser running client."
        },
        "originatingPage": {
          "type": "string",
          "position": 0,
          "description": "Client page on which the event occurred."
        },
        "requestID": {
          "type": "string",
          "position": 0,
          "description": "RequestID used during event."
        },
        "traceName": {
          "type": "string",
          "position": 0,
          "description": "Type of log (default debug)",
          "enum": [
            "debug",
            "ainception"
          ]
        },
        "owningCustomerID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Allow identifying which customer owns this log entry, default is current user customer. This is used for traceName=ainception"
        }
      },
      "description": "A description of a log entry"
    },
    "no.mnemonic.services.jsonobject.spi.request.CreateJsonObjectRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "If set, this needs to be unique per type. If not, this will default to the generated UUID of the object. => [a-zA-Z0-9_:\\-\\.]*"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of this object"
        },
        "localizedNames": {
          "type": "object",
          "position": 0,
          "description": "Display name in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Description of this object"
        },
        "localizedDescriptions": {
          "type": "object",
          "position": 0,
          "description": "Description in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "data": {
          "position": 0,
          "description": "The actual JSON. Max 1MB string encoded JSON.",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      },
      "description": "Request to create a JsonObject"
    },
    "no.mnemonic.services.world.spi.request.CSPLogEntry": {
      "type": "object",
      "required": [
        "blockedUri",
        "disposition",
        "documentUri",
        "originalPolicy",
        "violatedDirective"
      ],
      "properties": {
        "blockedUri": {
          "type": "string",
          "position": 0,
          "description": "The URI of the resource that was blocked from loading by the Content Security Policy."
        },
        "disposition": {
          "type": "string",
          "position": 0,
          "description": "Either 'enforce' or 'report'."
        },
        "documentUri": {
          "type": "string",
          "position": 0,
          "description": "The URI of the document in which the violation occurred."
        },
        "effectiveDirective": {
          "type": "string",
          "position": 0,
          "description": "The directive whose enforcement caused the violation."
        },
        "originalPolicy": {
          "type": "string",
          "position": 0,
          "description": "The original policy as specified by the Content-Security-Policy-Report-Only HTTP header."
        },
        "referrer": {
          "type": "string",
          "position": 0,
          "description": "The referrer of the document in which the violation occurred."
        },
        "scriptSample": {
          "type": "string",
          "position": 0,
          "description": "The first 40 characters of the inline script, event handler, or style that caused the violation."
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The HTTP status code of the resource on which the global object was instantiated."
        },
        "violatedDirective": {
          "type": "string",
          "position": 0,
          "description": "The name of the policy section that was violated."
        }
      }
    },
    "no.mnemonic.services.datacollector.spi.request.DataCollectorIngestRecord": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "The customer ID or shortname that this data belongs to. Defaults to the current users customer"
        }
      }
    },
    "JsonSchemaResponse": {
      "type": "object",
      "properties": {
        "schema": {
          "position": 0,
          "description": "The json schema of a given type",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      }
    },
    "JsonObjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "An automatically created UUID to identify the object."
        },
        "type": {
          "position": 0,
          "description": "The type that is implemented by this JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeInfo"
        },
        "masterID": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "The UUID of the master JsonObject if this is a revision. Null if not."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The change revision of the JsonObject."
        },
        "customer": {
          "position": 0,
          "description": "Info about the customer owning the JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The shortName of the JsonObject."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the JsonObject."
        },
        "localizedName": {
          "type": "string",
          "position": 0,
          "description": "The localized name for the current users language."
        },
        "localizedNames": {
          "type": "object",
          "position": 0,
          "description": "All available localized names.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "The description of the JsonObject."
        },
        "localizedDescription": {
          "type": "string",
          "position": 0,
          "description": "The localized description for the current users language."
        },
        "localizedDescriptions": {
          "type": "object",
          "position": 0,
          "description": "All available localized descriptions.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags that are set on this JsonObject.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "controlledVersion",
              "favorite",
              "sharedWithRole",
              "sharedWithUserOrGroup",
              "sharedGlobal"
            ]
          }
        },
        "createdByUser": {
          "position": 0,
          "description": "The user that created the JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this JsonObject was created."
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "The user that last updated the JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this JsonObject was last updated."
        },
        "deletedByUser": {
          "position": 0,
          "description": "The user that deleted this JsonObject (if deleted).",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this JsonObject was deleted (if deleted)."
        },
        "currentUserAccess": {
          "type": "string",
          "position": 0,
          "description": "Which access the current user has for the current JsonObject",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "data": {
          "position": 0,
          "description": "The actual JsonObject.",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      },
      "description": "JsonObject response. Provides the JsonObject itself along with meta information"
    },
    "no.mnemonic.services.argus.common.spi.response.FunctionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the function."
        }
      },
      "description": "SPI FunctionInfo"
    },
    "no.mnemonic.services.datacollector.spi.response.DataCollectorIngestResponse": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The number of accepted data submissions"
        },
        "rejected": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The number of rejected data submissions"
        },
        "errorInformationList": {
          "type": "array",
          "position": 0,
          "description": "A list of information on errors in the data submissions",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.response.FailedDataRecord"
          }
        }
      }
    },
    "com.fasterxml.jackson.databind.JsonNode": {
      "type": "object"
    },
    "DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the domain."
        }
      },
      "description": "SPI DomainInfo"
    },
    "no.mnemonic.services.world.spi.request.DistributedLoggingBulkRequest": {
      "type": "object",
      "required": [
        "logEntries"
      ],
      "properties": {
        "logEntries": {
          "type": "array",
          "position": 0,
          "description": "Log entries for submission.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.request.DistributedLogEntry"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even with failures occur while submitting. (default false)",
          "default": false
        }
      },
      "description": "Request for logs from distributed"
    },
    "no.mnemonic.services.jsonobject.spi.request.UpdateJsonObjectRequest": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "If set, this needs to be unique per type. => [a-zA-Z0-9_:\\-\\.]*"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of this object"
        },
        "localizedNames": {
          "type": "object",
          "position": 0,
          "description": "Display name in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Description of this object"
        },
        "localizedDescriptions": {
          "type": "object",
          "position": 0,
          "description": "Description in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "data": {
          "position": 0,
          "description": "The actual JSON. Max 1MB string encoded JSON.",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      },
      "description": "Request to update a JsonObject"
    },
    "no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "An automatically created UUID to identify the access entry."
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "The access level this entry grants.",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "The access type this entry grants.",
          "enum": [
            "explicit",
            "roleBased"
          ]
        },
        "subject": {
          "position": 0,
          "description": "User or group which is granted explicit access.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.SubjectInfo"
        },
        "function": {
          "position": 0,
          "description": "Function which is granted role based access.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.FunctionInfo"
        },
        "customer": {
          "position": 0,
          "description": "Customer which is granted role based access. Null if global permission.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags that are set on this access entry.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "searchable"
            ]
          }
        },
        "grantedByUser": {
          "position": 0,
          "description": "The user that has granted this permission.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "grantedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this permission was granted."
        },
        "revokedByUser": {
          "position": 0,
          "description": "The user that revoked this permission.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "revokedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this permission was revoked."
        }
      },
      "description": "An access entry giving access to a JsonObject for a specific user, groups or functions"
    },
    "no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessBulkRequest": {
      "type": "object",
      "required": [
        "accessEntries"
      ],
      "properties": {
        "accessEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessBaseRequest"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      },
      "description": "Request for adding a bulk of access entries to a JsonObject"
    },
    "no.mnemonic.services.world.spi.request.ToolLogEntry": {
      "type": "object",
      "required": [
        "arguments",
        "currentUser",
        "executableName",
        "hostname",
        "operatingSystem",
        "platformVersion",
        "reference",
        "timestamp"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp for event. Accepts ISO-8601 timestamp string.",
          "minimum": 1
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "Event level: debug, info, warning or error. Defaults to info",
          "enum": [
            "none",
            "error",
            "warning",
            "info",
            "debug"
          ]
        },
        "stacktrace": {
          "type": "string",
          "position": 0,
          "description": "Complete stacktrace for event. Max string length is 10000 characters."
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "Additional information that could be relevant in the context. Max length of context values is 4000 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "position": 0,
          "description": "Event message. Max string length is 4000 characters."
        },
        "hostname": {
          "type": "string",
          "position": 0,
          "description": "Host running script."
        },
        "operatingSystem": {
          "type": "string",
          "position": 0,
          "description": "Operating system running the script."
        },
        "platformVersion": {
          "type": "string",
          "position": 0,
          "description": "Platform/Python version."
        },
        "executableName": {
          "type": "string",
          "position": 0,
          "description": "Executable that initiated the script."
        },
        "arguments": {
          "type": "string",
          "position": 0,
          "description": "Arguments used, do not include API keys."
        },
        "currentUser": {
          "type": "string",
          "position": 0,
          "description": "User ID or shortname, used by the script."
        },
        "reference": {
          "type": "string",
          "position": 0,
          "description": "Reference, such as cronmeta-tag."
        }
      },
      "description": "A log entry from tooling"
    },
    "ResultStash-no.mnemonic.services.datacollector.spi.response.DataCollectorIngestResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.response.DataCollectorIngestResponse"
        }
      }
    },
    "GetTimeResponse": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "no.mnemonic.services.world.spi.response.LoggingBulkResponse": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of successfully submitted logs."
        },
        "rejected": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of logs that failed validation."
        },
        "errorInformationList": {
          "type": "array",
          "position": 0,
          "description": "Information regarding any logs that are rejected during validation.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.response.LogErrorInformation"
          }
        }
      }
    },
    "no.mnemonic.services.world.spi.request.ClientLoggingBulkRequest": {
      "type": "object",
      "required": [
        "logEntries"
      ],
      "properties": {
        "logEntries": {
          "type": "array",
          "position": 0,
          "description": "Log entries for submission.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.request.ClientLogEntry"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even with failures occur while submitting. (default false)",
          "default": false
        }
      }
    },
    "CreateJsonObjectRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "If set, this needs to be unique per type. If not, this will default to the generated UUID of the object. => [a-zA-Z0-9_:\\-\\.]*"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of this object"
        },
        "localizedNames": {
          "type": "object",
          "position": 0,
          "description": "Display name in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Description of this object"
        },
        "localizedDescriptions": {
          "type": "object",
          "position": 0,
          "description": "Description in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "data": {
          "position": 0,
          "description": "The actual JSON. Max 1MB string encoded JSON.",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      },
      "description": "Request to create a JsonObject"
    },
    "GroupInfo": {
      "type": "object",
      "properties": {},
      "description": "SPI GroupInfo"
    },
    "ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeDescriptor-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeDescriptor"
          }
        }
      }
    },
    "DistributedLoggingBulkRequest": {
      "type": "object",
      "required": [
        "logEntries"
      ],
      "properties": {
        "logEntries": {
          "type": "array",
          "position": 0,
          "description": "Log entries for submission.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.request.DistributedLogEntry"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even with failures occur while submitting. (default false)",
          "default": false
        }
      },
      "description": "Request for logs from distributed"
    },
    "no.mnemonic.services.jsonobject.spi.response.JsonSchemaResponse": {
      "type": "object",
      "properties": {
        "schema": {
          "position": 0,
          "description": "The json schema of a given type",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      }
    },
    "SubjectInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The subject's short name"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The subject's name"
        },
        "domain": {
          "position": 0,
          "description": "The subject's domain",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        },
        "customer": {
          "position": 0,
          "description": "The customer the subject belongs to",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The subject's flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type of the subject",
          "readOnly": true,
          "enum": [
            "user",
            "group"
          ]
        }
      },
      "description": "SPI SubjectInfo"
    },
    "JsonObjectTypeDescriptor": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "A shortname representing one out of several defined JsonObject types."
        }
      },
      "description": "Describing the type and fields of a JsonObject."
    },
    "IOCParserRequest": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "position": 0,
          "description": "Text from which IOC should be extracted"
        }
      },
      "description": "Extract indicators of compromise (IOC) from a text blob"
    },
    "no.mnemonic.services.world.spi.request.ToolLoggingBulkRequest": {
      "type": "object",
      "required": [
        "logEntries"
      ],
      "properties": {
        "logEntries": {
          "type": "array",
          "position": 0,
          "description": "Log entries for submission.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.request.ToolLogEntry"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even with failures occur while submitting. (default false)",
          "default": false
        }
      }
    },
    "no.mnemonic.services.world.spi.response.IOCParserResponse": {
      "type": "object",
      "properties": {
        "md5": {
          "type": "array",
          "position": 0,
          "description": "Extracted MD5 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sha1": {
          "type": "array",
          "position": 0,
          "description": "Extracted SHA1 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sha256": {
          "type": "array",
          "position": 0,
          "description": "Extracted SHA256 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sha512": {
          "type": "array",
          "position": 0,
          "description": "Extracted SHA512 hashes",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "array",
          "position": 0,
          "description": "Extracted URLs",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "fqdn": {
          "type": "array",
          "position": 0,
          "description": "Extracted FQDNs",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "ipv4": {
          "type": "array",
          "position": 0,
          "description": "Extracted IPv4 addresses",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "ipv6": {
          "type": "array",
          "position": 0,
          "description": "Extracted IPv6 addresses",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Contains extracted indicators of comprise (IOC)"
    },
    "ResultStash-no.mnemonic.services.world.spi.response.IOCParserResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.world.spi.response.IOCParserResponse"
        }
      }
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "no.mnemonic.services.world.spi.response.WhoIsResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "string",
          "position": 0,
          "description": "Resolved WHOIS information"
        }
      },
      "description": "Response containing the WHOIS information"
    },
    "no.mnemonic.services.argus.common.spi.response.GroupInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/SubjectInfo"
        },
        {
          "type": "object",
          "properties": {},
          "description": "SPI GroupInfo"
        }
      ]
    },
    "no.mnemonic.services.datacollector.spi.response.FailedDataRecord": {
      "type": "object",
      "properties": {
        "submissionIndex": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The index into the data submission list this error is about"
        },
        "errorMessages": {
          "type": "array",
          "position": 0,
          "description": "The list of errors detected about the data",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResultStash-no.mnemonic.services.datacollector.spi.response.DataCollectorCategory-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.response.DataCollectorCategory"
          }
        }
      }
    },
    "ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonSchemaResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonSchemaResponse"
        }
      }
    },
    "ResultStash-no.mnemonic.jargus.model.TimeZone-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.jargus.model.TimeZone"
          }
        }
      }
    },
    "CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the customer."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Shortname of the customer."
        },
        "domain": {
          "position": 0,
          "description": "Domain that this customer belongs to.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        }
      },
      "description": "SPI CustomerInfo"
    },
    "no.mnemonic.jargus.model.TimeZone": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "no.mnemonic.services.datacollector.spi.request.DataCollectorIngestRequest": {
      "type": "object",
      "required": [
        "records"
      ],
      "properties": {
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Whether or not to ignore any errors in the records (default false)",
          "default": false
        },
        "records": {
          "type": "array",
          "position": 0,
          "description": "The records containing the JSON data",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.request.DataCollectorIngestRecord"
          },
          "maxItems": 1000,
          "minItems": 1
        }
      }
    },
    "ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectAccess"
          }
        }
      }
    },
    "JsonObjectAccess": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "An automatically created UUID to identify the access entry."
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "The access level this entry grants.",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "The access type this entry grants.",
          "enum": [
            "explicit",
            "roleBased"
          ]
        },
        "subject": {
          "position": 0,
          "description": "User or group which is granted explicit access.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.SubjectInfo"
        },
        "function": {
          "position": 0,
          "description": "Function which is granted role based access.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.FunctionInfo"
        },
        "customer": {
          "position": 0,
          "description": "Customer which is granted role based access. Null if global permission.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags that are set on this access entry.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "searchable"
            ]
          }
        },
        "grantedByUser": {
          "position": 0,
          "description": "The user that has granted this permission.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "grantedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this permission was granted."
        },
        "revokedByUser": {
          "position": 0,
          "description": "The user that revoked this permission.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "revokedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this permission was revoked."
        }
      },
      "description": "An access entry giving access to a JsonObject for a specific user, groups or functions"
    },
    "FailedDataRecord": {
      "type": "object",
      "properties": {
        "submissionIndex": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The index into the data submission list this error is about"
        },
        "errorMessages": {
          "type": "array",
          "position": 0,
          "description": "The list of errors detected about the data",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The subject's short name"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The subject's name"
        },
        "domain": {
          "position": 0,
          "description": "The subject's domain",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        },
        "customer": {
          "position": 0,
          "description": "The customer the subject belongs to",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The subject's flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type of the subject",
          "readOnly": true,
          "enum": [
            "user",
            "group"
          ]
        }
      },
      "description": "SPI UserInfo"
    },
    "no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeInfo": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "A shortname representing one out of several defined JsonObject types."
        }
      },
      "description": "Describing a JsonObject type."
    },
    "no.mnemonic.services.world.spi.request.DistributedLogEntry": {
      "type": "object",
      "required": [
        "timestamp"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp for event. Accepts ISO-8601 timestamp string.",
          "minimum": 1
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "Event level: debug, info, warning or error. Defaults to info",
          "enum": [
            "none",
            "error",
            "warning",
            "info",
            "debug"
          ]
        },
        "stacktrace": {
          "type": "string",
          "position": 0,
          "description": "Complete stacktrace for event. Max string length is 10000 characters."
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "Additional information that could be relevant in the context. Max length of context values is 4000 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "position": 0,
          "description": "Event message. Max string length is 4000 characters."
        },
        "hostname": {
          "type": "string",
          "position": 0,
          "description": "Host running script."
        },
        "container": {
          "type": "string",
          "position": 0,
          "description": "Name of the container that provides log"
        },
        "componentInstanceID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the component instance that provides log"
        },
        "component": {
          "type": "string",
          "position": 0,
          "description": "Name og the component that provides log"
        }
      },
      "description": "A log entry from distributed"
    },
    "no.mnemonic.services.argus.common.spi.response.CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the customer."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Shortname of the customer."
        },
        "domain": {
          "position": 0,
          "description": "Domain that this customer belongs to.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        }
      },
      "description": "SPI CustomerInfo"
    },
    "ResultStash-no.mnemonic.services.world.spi.response.GetTimeResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.world.spi.response.GetTimeResponse"
        }
      }
    },
    "ResultStash-no.mnemonic.services.world.spi.response.LoggingBulkResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.world.spi.response.LoggingBulkResponse"
        }
      }
    },
    "ResultStash-no.mnemonic.services.world.spi.response.CSPResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.world.spi.response.CSPResponse"
        }
      }
    },
    "DataCollectorIngestRequest": {
      "type": "object",
      "required": [
        "records"
      ],
      "properties": {
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Whether or not to ignore any errors in the records (default false)",
          "default": false
        },
        "records": {
          "type": "array",
          "position": 0,
          "description": "The records containing the JSON data",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.datacollector.spi.request.DataCollectorIngestRecord"
          },
          "maxItems": 1000,
          "minItems": 1
        }
      }
    },
    "WhoIsResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "string",
          "position": 0,
          "description": "Resolved WHOIS information"
        }
      },
      "description": "Response containing the WHOIS information"
    },
    "no.mnemonic.services.datacollector.spi.response.DataCollectorCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the category"
        }
      }
    },
    "no.mnemonic.services.argus.common.spi.response.DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the domain."
        }
      },
      "description": "SPI DomainInfo"
    },
    "ResultStash-no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse"
        }
      }
    },
    "JsonObjectTypeInfo": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "A shortname representing one out of several defined JsonObject types."
        }
      },
      "description": "Describing a JsonObject type."
    },
    "UpdateJsonObjectRequest": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "If set, this needs to be unique per type. => [a-zA-Z0-9_:\\-\\.]*"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of this object"
        },
        "localizedNames": {
          "type": "object",
          "position": 0,
          "description": "Display name in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Description of this object"
        },
        "localizedDescriptions": {
          "type": "object",
          "position": 0,
          "description": "Description in specified languages. Required for global objects.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "data": {
          "position": 0,
          "description": "The actual JSON. Max 1MB string encoded JSON.",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      },
      "description": "Request to update a JsonObject"
    },
    "CSPResponse": {
      "type": "object"
    },
    "no.mnemonic.services.jsonobject.spi.request.GrantJsonObjectAccessRequest": {
      "type": "object",
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "type": "string",
          "position": 0,
          "description": "The access level this entry grants.",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "subject": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname for user or group to grant explicit access to."
        },
        "function": {
          "type": "string",
          "position": 0,
          "description": "ID or name of function for granting role-based access."
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname of customer for granting role-based access. Null if global permission."
        },
        "searchable": {
          "type": "boolean",
          "position": 0,
          "description": "If true, the object will be searchable. (default true)",
          "default": true
        }
      },
      "description": "Request to add an access entry to a JsonObject"
    },
    "no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeDescriptor": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "A shortname representing one out of several defined JsonObject types."
        }
      },
      "description": "Describing the type and fields of a JsonObject."
    },
    "no.mnemonic.services.argus.common.spi.response.UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The subject's short name"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The subject's name"
        },
        "domain": {
          "position": 0,
          "description": "The subject's domain",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.DomainInfo"
        },
        "customer": {
          "position": 0,
          "description": "The customer the subject belongs to",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "The subject's flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Type of the subject",
          "readOnly": true,
          "enum": [
            "user",
            "group"
          ]
        }
      },
      "description": "SPI UserInfo"
    },
    "no.mnemonic.services.jsonobject.spi.response.JsonObjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "An automatically created UUID to identify the object."
        },
        "type": {
          "position": 0,
          "description": "The type that is implemented by this JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.response.JsonObjectTypeInfo"
        },
        "masterID": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "The UUID of the master JsonObject if this is a revision. Null if not."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The change revision of the JsonObject."
        },
        "customer": {
          "position": 0,
          "description": "Info about the customer owning the JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.CustomerInfo"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "The shortName of the JsonObject."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the JsonObject."
        },
        "localizedName": {
          "type": "string",
          "position": 0,
          "description": "The localized name for the current users language."
        },
        "localizedNames": {
          "type": "object",
          "position": 0,
          "description": "All available localized names.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "The description of the JsonObject."
        },
        "localizedDescription": {
          "type": "string",
          "position": 0,
          "description": "The localized description for the current users language."
        },
        "localizedDescriptions": {
          "type": "object",
          "position": 0,
          "description": "All available localized descriptions.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags that are set on this JsonObject.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted",
              "controlledVersion",
              "favorite",
              "sharedWithRole",
              "sharedWithUserOrGroup",
              "sharedGlobal"
            ]
          }
        },
        "createdByUser": {
          "position": 0,
          "description": "The user that created the JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this JsonObject was created."
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "The user that last updated the JsonObject.",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this JsonObject was last updated."
        },
        "deletedByUser": {
          "position": 0,
          "description": "The user that deleted this JsonObject (if deleted).",
          "$ref": "#/definitions/no.mnemonic.services.argus.common.spi.response.UserInfo"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When this JsonObject was deleted (if deleted)."
        },
        "currentUserAccess": {
          "type": "string",
          "position": 0,
          "description": "Which access the current user has for the current JsonObject",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "data": {
          "position": 0,
          "description": "The actual JsonObject.",
          "$ref": "#/definitions/com.fasterxml.jackson.databind.JsonNode"
        }
      },
      "description": "JsonObject response. Provides the JsonObject itself along with meta information"
    },
    "FunctionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the function."
        }
      },
      "description": "SPI FunctionInfo"
    },
    "no.mnemonic.services.argus.common.rest.model.ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResultStash-no.mnemonic.services.world.spi.response.WhoIsResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.argus.common.rest.model.ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/no.mnemonic.services.world.spi.response.WhoIsResponse"
        }
      }
    },
    "LogErrorInformation": {
      "type": "object",
      "properties": {
        "logIndex": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Index of the log as it appears in the submission request."
        },
        "errorMessages": {
          "type": "array",
          "position": 0,
          "description": "String message of error cause.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Contains a description of which log failed to be added and why"
    },
    "no.mnemonic.services.world.spi.request.IOCParserRequest": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "position": 0,
          "description": "Text from which IOC should be extracted"
        }
      },
      "description": "Extract indicators of compromise (IOC) from a text blob"
    },
    "ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ToolLoggingBulkRequest": {
      "type": "object",
      "required": [
        "logEntries"
      ],
      "properties": {
        "logEntries": {
          "type": "array",
          "position": 0,
          "description": "Log entries for submission.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.request.ToolLogEntry"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even with failures occur while submitting. (default false)",
          "default": false
        }
      }
    },
    "no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "array",
          "position": 0,
          "description": "Limit search to json objects with the given customers, identified by id or shortname",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "Search for keywords against fields defined by KeywordFieldStrategy",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by keywords (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "name",
              "shortName",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict different keywords should be matched (default all)",
          "enum": [
            "any",
            "all"
          ]
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which timestamp fields will be filtered with start/endTimestamp (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)",
          "enum": [
            "any",
            "all"
          ]
        },
        "user": {
          "type": "array",
          "position": 0,
          "description": "Search using users identified by id or shortname. If given a group, we will resolve all members of the group recursively",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "userFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by user (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "owner",
              "read",
              "write",
              "createdByUser",
              "lastUpdatedByUser",
              "all"
            ]
          }
        },
        "favorite": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to only search for favorites, exclude favorites or neither (default null)",
          "default": false
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criteria",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchSubCriteriaRequest"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Limit maximum amount of results (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip specified amount of results (default 0)",
          "minimum": 0,
          "default": 0
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to include deleted json objects in the search. Only allowed for users with \u00b4jsonObjectAdministration` permission (default false)",
          "default": false
        },
        "includeData": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to include data in the response. (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Which fields to sort json objects by (default createdTimestamp)",
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "name",
              "shortName",
              "lastUpdatedTimestamp",
              "-createdTimestamp",
              "-name",
              "-shortName",
              "-lastUpdatedTimestamp"
            ]
          }
        }
      },
      "description": "Request to search for json objects"
    },
    "no.mnemonic.services.world.spi.response.LogErrorInformation": {
      "type": "object",
      "properties": {
        "logIndex": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Index of the log as it appears in the submission request."
        },
        "errorMessages": {
          "type": "array",
          "position": 0,
          "description": "String message of error cause.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Contains a description of which log failed to be added and why"
    },
    "ClientLogEntry": {
      "type": "object",
      "required": [
        "clientBrowser",
        "originatingPage",
        "timestamp",
        "traceName"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp for event. Accepts ISO-8601 timestamp string.",
          "minimum": 1
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "Event level: debug, info, warning or error. Defaults to info",
          "enum": [
            "none",
            "error",
            "warning",
            "info",
            "debug"
          ]
        },
        "stacktrace": {
          "type": "string",
          "position": 0,
          "description": "Complete stacktrace for event. Max string length is 10000 characters."
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "Additional information that could be relevant in the context. Max length of context values is 4000 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "position": 0,
          "description": "Event message. Max string length is 4000 characters."
        },
        "clientBrowser": {
          "type": "string",
          "position": 0,
          "description": "Browser running client."
        },
        "originatingPage": {
          "type": "string",
          "position": 0,
          "description": "Client page on which the event occurred."
        },
        "requestID": {
          "type": "string",
          "position": 0,
          "description": "RequestID used during event."
        },
        "traceName": {
          "type": "string",
          "position": 0,
          "description": "Type of log (default debug)",
          "enum": [
            "debug",
            "ainception"
          ]
        },
        "owningCustomerID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Allow identifying which customer owns this log entry, default is current user customer. This is used for traceName=ainception"
        }
      },
      "description": "A description of a log entry"
    },
    "CSPLogEntry": {
      "type": "object",
      "required": [
        "blockedUri",
        "disposition",
        "documentUri",
        "originalPolicy",
        "violatedDirective"
      ],
      "properties": {
        "blockedUri": {
          "type": "string",
          "position": 0,
          "description": "The URI of the resource that was blocked from loading by the Content Security Policy."
        },
        "disposition": {
          "type": "string",
          "position": 0,
          "description": "Either 'enforce' or 'report'."
        },
        "documentUri": {
          "type": "string",
          "position": 0,
          "description": "The URI of the document in which the violation occurred."
        },
        "effectiveDirective": {
          "type": "string",
          "position": 0,
          "description": "The directive whose enforcement caused the violation."
        },
        "originalPolicy": {
          "type": "string",
          "position": 0,
          "description": "The original policy as specified by the Content-Security-Policy-Report-Only HTTP header."
        },
        "referrer": {
          "type": "string",
          "position": 0,
          "description": "The referrer of the document in which the violation occurred."
        },
        "scriptSample": {
          "type": "string",
          "position": 0,
          "description": "The first 40 characters of the inline script, event handler, or style that caused the violation."
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The HTTP status code of the resource on which the global object was instantiated."
        },
        "violatedDirective": {
          "type": "string",
          "position": 0,
          "description": "The name of the policy section that was violated."
        }
      }
    },
    "JsonObjectSearchRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "array",
          "position": 0,
          "description": "Limit search to json objects with the given customers, identified by id or shortname",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "Search for keywords against fields defined by KeywordFieldStrategy",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by keywords (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "name",
              "shortName",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict different keywords should be matched (default all)",
          "enum": [
            "any",
            "all"
          ]
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (start timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Restrict to a time frame based on the set timeFieldStrategy (end timestamp) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which timestamp fields will be filtered with start/endTimestamp (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)",
          "enum": [
            "any",
            "all"
          ]
        },
        "user": {
          "type": "array",
          "position": 0,
          "description": "Search using users identified by id or shortname. If given a group, we will resolve all members of the group recursively",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "userFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "Defines which fields will be searched by user (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "owner",
              "read",
              "write",
              "createdByUser",
              "lastUpdatedByUser",
              "all"
            ]
          }
        },
        "favorite": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to only search for favorites, exclude favorites or neither (default null)",
          "default": false
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criteria",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.jsonobject.spi.request.JsonObjectSearchSubCriteriaRequest"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Limit maximum amount of results (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip specified amount of results (default 0)",
          "minimum": 0,
          "default": 0
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to include deleted json objects in the search. Only allowed for users with \u00b4jsonObjectAdministration` permission (default false)",
          "default": false
        },
        "includeData": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to include data in the response. (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Which fields to sort json objects by (default createdTimestamp)",
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "name",
              "shortName",
              "lastUpdatedTimestamp",
              "-createdTimestamp",
              "-name",
              "-shortName",
              "-lastUpdatedTimestamp"
            ]
          }
        }
      },
      "description": "Request to search for json objects"
    },
    "ClientLoggingBulkRequest": {
      "type": "object",
      "required": [
        "logEntries"
      ],
      "properties": {
        "logEntries": {
          "type": "array",
          "position": 0,
          "description": "Log entries for submission.",
          "items": {
            "$ref": "#/definitions/no.mnemonic.services.world.spi.request.ClientLogEntry"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even with failures occur while submitting. (default false)",
          "default": false
        }
      }
    },
    "DataCollectorIngestRecord": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "The customer ID or shortname that this data belongs to. Defaults to the current users customer"
        }
      }
    },
    "GrantJsonObjectAccessRequest": {
      "type": "object",
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "type": "string",
          "position": 0,
          "description": "The access level this entry grants.",
          "enum": [
            "read",
            "write",
            "owner"
          ]
        },
        "subject": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname for user or group to grant explicit access to."
        },
        "function": {
          "type": "string",
          "position": 0,
          "description": "ID or name of function for granting role-based access."
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname of customer for granting role-based access. Null if global permission."
        },
        "searchable": {
          "type": "boolean",
          "position": 0,
          "description": "If true, the object will be searchable. (default true)",
          "default": true
        }
      },
      "description": "Request to add an access entry to a JsonObject"
    },
    "DataCollectorCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "position": 0,
          "description": "The name of the category"
        }
      }
    },
    "DistributedLogEntry": {
      "type": "object",
      "required": [
        "timestamp"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp for event. Accepts ISO-8601 timestamp string.",
          "minimum": 1
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "Event level: debug, info, warning or error. Defaults to info",
          "enum": [
            "none",
            "error",
            "warning",
            "info",
            "debug"
          ]
        },
        "stacktrace": {
          "type": "string",
          "position": 0,
          "description": "Complete stacktrace for event. Max string length is 10000 characters."
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "Additional information that could be relevant in the context. Max length of context values is 4000 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "position": 0,
          "description": "Event message. Max string length is 4000 characters."
        },
        "hostname": {
          "type": "string",
          "position": 0,
          "description": "Host running script."
        },
        "container": {
          "type": "string",
          "position": 0,
          "description": "Name of the container that provides log"
        },
        "componentInstanceID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the component instance that provides log"
        },
        "component": {
          "type": "string",
          "position": 0,
          "description": "Name og the component that provides log"
        }
      },
      "description": "A log entry from distributed"
    },
    "no.mnemonic.services.world.spi.response.CSPResponse": {
      "type": "object"
    },
    "ToolLogEntry": {
      "type": "object",
      "required": [
        "arguments",
        "currentUser",
        "executableName",
        "hostname",
        "operatingSystem",
        "platformVersion",
        "reference",
        "timestamp"
      ],
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Timestamp for event. Accepts ISO-8601 timestamp string.",
          "minimum": 1
        },
        "level": {
          "type": "string",
          "position": 0,
          "description": "Event level: debug, info, warning or error. Defaults to info",
          "enum": [
            "none",
            "error",
            "warning",
            "info",
            "debug"
          ]
        },
        "stacktrace": {
          "type": "string",
          "position": 0,
          "description": "Complete stacktrace for event. Max string length is 10000 characters."
        },
        "context": {
          "type": "object",
          "position": 0,
          "description": "Additional information that could be relevant in the context. Max length of context values is 4000 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "position": 0,
          "description": "Event message. Max string length is 4000 characters."
        },
        "hostname": {
          "type": "string",
          "position": 0,
          "description": "Host running script."
        },
        "operatingSystem": {
          "type": "string",
          "position": 0,
          "description": "Operating system running the script."
        },
        "platformVersion": {
          "type": "string",
          "position": 0,
          "description": "Platform/Python version."
        },
        "executableName": {
          "type": "string",
          "position": 0,
          "description": "Executable that initiated the script."
        },
        "arguments": {
          "type": "string",
          "position": 0,
          "description": "Arguments used, do not include API keys."
        },
        "currentUser": {
          "type": "string",
          "position": 0,
          "description": "User ID or shortname, used by the script."
        },
        "reference": {
          "type": "string",
          "position": 0,
          "description": "Reference, such as cronmeta-tag."
        }
      },
      "description": "A log entry from tooling"
    }
  }
}