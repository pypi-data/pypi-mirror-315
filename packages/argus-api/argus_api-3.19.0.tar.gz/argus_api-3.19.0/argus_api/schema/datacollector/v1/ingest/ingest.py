"""Autogenerated API schema"""
from argus_api import session


ingest_bulk_data = {'tags': ['datacollector/v1'], 'summary': 'Submit JSON data in bulk that will be forwarded to a Kafka topic based on its category (PUBLIC)', 'description': '', 'operationId': 'ingestBulkData', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'category', 'in': 'path', 'description': 'What category the records belong to', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'The request containing the category and data to forward to Kafka', 'required': False, 'schema': {'type': 'object', 'required': ['records'], 'properties': {'ignoreOnFailed': {'type': 'bool', 'position': 0, 'description': 'Whether or not to ignore any errors in the records (default false)', 'default': False}, 'records': {'type': 'list', 'position': 0, 'description': 'The records containing the JSON data', 'items': {'type': 'dict', 'properties': {'data': {'type': 'string'}, 'customer': {'type': 'str', 'position': 0, 'description': 'The customer ID or shortname that this data belongs to. Defaults to the current users customer'}}}, 'maxItems': 1000, 'minItems': 1}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'accepted': {'type': 'int', 'position': 0, 'description': 'The number of accepted data submissions'}, 'rejected': {'type': 'int', 'position': 0, 'description': 'The number of rejected data submissions'}, 'errorInformationList': {'type': 'list', 'position': 0, 'description': 'A list of information on errors in the data submissions', 'items': {'type': 'dict', 'properties': {'submissionIndex': {'type': 'int', 'position': 0, 'description': 'The index into the data submission list this error is about'}, 'errorMessages': {'type': 'list', 'position': 0, 'description': 'The list of errors detected about the data', 'items': {'type': 'string'}}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}
ingest_data = {'tags': ['datacollector/v1'], 'summary': 'Submit JSON data that will be forwarded to a Kafka topic based on its category (PUBLIC)', 'description': '', 'operationId': 'ingestData', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'category', 'in': 'path', 'description': 'What category the records belong to', 'required': True, 'type': 'str'}, {'name': 'customer', 'in': 'query', 'description': 'The customer ID or shortname that this data belongs to. Defaults to the current users customer', 'required': False, 'type': 'str'}, {'name': 'ignoreOnFailed', 'in': 'query', 'description': 'Whether or not to ignore any errors in the record', 'required': False, 'type': 'bool', 'default': False}, {'in': 'body', 'name': 'body', 'description': 'The JSON data to forward to kafka', 'required': False, 'schema': {'type': 'object'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'accepted': {'type': 'int', 'position': 0, 'description': 'The number of accepted data submissions'}, 'rejected': {'type': 'int', 'position': 0, 'description': 'The number of rejected data submissions'}, 'errorInformationList': {'type': 'list', 'position': 0, 'description': 'A list of information on errors in the data submissions', 'items': {'type': 'dict', 'properties': {'submissionIndex': {'type': 'int', 'position': 0, 'description': 'The index into the data submission list this error is about'}, 'errorMessages': {'type': 'list', 'position': 0, 'description': 'The list of errors detected about the data', 'items': {'type': 'string'}}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}