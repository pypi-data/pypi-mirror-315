"use strict";(self.webpackChunkjupyterlab_eventlistener=self.webpackChunkjupyterlab_eventlistener||[]).push([[753],{753:(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});const n=new(s(262).Token)("eventListener");class i{constructor(e){this._listeners={},this._eventManager=e,this._eventManager.stream.connect((async(e,t)=>{if(!(t.schema_id in this._listeners))return;const s=this._listeners[t.schema_id];for(const n of s)await n(e,t.schema_id,t)}))}addListener(e,t){e in this._listeners?this._listeners[e].add(t):this._listeners[e]=new Set([t])}removeListener(e,t){e in this._listeners&&this._listeners[e].delete(t)}}const r="jupyterlab-eventlistener",a={id:r,description:"An API for listening to events coming off of JupyterLab's event manager.",autoStart:!0,provides:n,activate:async e=>(console.log(`${r} has been activated!`),await e.serviceManager.ready,new i(e.serviceManager.events))}}}]);