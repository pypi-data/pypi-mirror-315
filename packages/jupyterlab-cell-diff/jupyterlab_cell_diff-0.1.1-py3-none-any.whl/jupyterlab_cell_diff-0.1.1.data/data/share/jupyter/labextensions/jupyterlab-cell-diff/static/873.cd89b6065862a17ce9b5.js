"use strict";(self.webpackChunkjupyterlab_cell_diff=self.webpackChunkjupyterlab_cell_diff||[]).push([[873],{5616:(e,n,o)=>{o.r(n),o.d(n,{fetchDiff:()=>c,showCellDiff:()=>s,showCellDiffCommand:()=>d});var t=o(689),r=o(520),i=o(9597),l=o(3672),a=o(1943);function s(e,n){let o,l=(0,t.Uh)(e.original_source,e.diff);o=new r.SV({remote:l}),o.addClass("nbdime-root"),o.addClass("jp-Notebook-diff"),o.hide();let a=n.getFooter(e.cell_id);null==a||a.addWidget(o),(null==a?void 0:a.isHidden)&&(a.show(),a.update()),null==a||a.addItemOnLeft("compare",new i.ToolbarButton({label:"Compare changes",enabled:!0,onClick:()=>{o.isHidden?o.show():o.hide()}}))}async function c(e){return await async function(e="",n={}){const o=a.ServerConnection.makeSettings(),t=l.URLExt.join(o.baseUrl,e);let r;try{r=await a.ServerConnection.makeRequest(t,n,o)}catch(e){throw new a.ServerConnection.NetworkError(e)}let i=await r.text();if(i.length>0)try{i=JSON.parse(i)}catch(e){console.log("Not a JSON response body.",r)}if(!r.ok)throw new a.ServerConnection.ResponseError(r,i.message||i);return i}("api/celldiff")}function d(e){return n=>{let o=n;o.cell_id&&o&&o.original_source&&o.diff&&s(o,e)}}}}]);