Metadata-Version: 2.1
Name: kaas-cli
Version: 0.1.191
Summary: Command line utility for K as a Service
Author: Runtime Verification, Inc.
Author-email: contact@runtimeverification.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: click (>=8.0.1,<9.0.0)
Requires-Dist: dacite (>=1.8.1,<2.0.0)
Requires-Dist: docker (>=7.1.0,<8.0.0)
Requires-Dist: gql[requests] (>=3.4.0,<4.0.0)
Requires-Dist: hurry-filesize (>=0.9,<0.10)
Requires-Dist: jmespath (>=1.0.1,<2.0.0)
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: pandas-stubs (>=2.2.2.240603,<3.0.0.0)
Requires-Dist: pytest (>=8.0.1,<9.0.0)
Requires-Dist: pytest-watch (>=4.2.0,<5.0.0)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: tomlkit (>=0.13.2,<0.14.0)
Requires-Dist: types-jmespath (>=1.0.2.20240106,<2.0.0.0)
Requires-Dist: urllib3 (>=1.25.4,<2.1)
Description-Content-Type: text/markdown

# KaaS CLI

## Simple Installation
Our deployments can be found on [Pypi](https://pypi.org/project/kaas-cli/).

### Installation
`pip install --user kaas-cli`
or 
`sudo pip install kaas-cli`

## For Developers

Prerequisites: `python >= 3.10`, `pip >= 20.0.2`, `poetry >= 1.3.2`.

### Installation

To install the package using `pip`, start by building from [Source](https://github.com/runtimeverification/kaas)

```bash
make build
pip install dist/*.whl
```

Configure the CLI by copying the example environment file and setting up the necessary environment variables:

```bash
cp .flaskenv.example .flaskenv
```

Then, edit the `.flaskenv` file to match your settings.

### Environment Variables

Here's an overview of the environment variables:

- **SERVER_URL**: The KaaS server API address for the main interaction within the CLI tool. This is a required field. For local development, use `http://localhost:5000`.
- **DEFAULT_DIRECTORY**: The folder path for artifacts. This is an optional field. You can leave it empty.
- **DEFAULT_VAULT_ID**: Artifacts should be associated with a project ID. This is an optional field. You can leave it empty.
- **DEFAULT_KEY**: If the user is not the owner of the project, they are required to provide a security key. This is an optional field. You can leave it empty.

### Usage

After installing the dependencies with `poetry install`, you can spawn a shell using `poetry shell`, or alternatively, use `make`:

```bash
make shell
kaas-cli hello
kaas-cli --version
```

VAULT_SPEC is an important definition. This is used to access specific organizations and vaults with permission control limitng what tokens have access to. 

The spec follows the form of 
```
organization/vault_name
```

To verify the installation, run `kaas-cli hello`. If you see the message `Hello World!`, the CLI is set up correctly.

### Documentation

For detailed usage instructions of the `kaas-cli` tool, please refer to the official [documentation](https://docs.runtimeverification.com/kaas/guides/getting-started).

