import LKHpy as LK
from calculate_cost import calculate_cost_from_node_coord

def test_par_file():
    solution = LK.par_file('tests/data/kroE100.par')
    node_coord = [[3477,949],[91,1732],[3972,329],[198,1632],[1806,733],[538,1023],[3430,1088],[2186,766],[1513,1646],[2143,1611],[53,1657],[3404,1307],[1034,1344],[2823,376],[3104,1931],[3232,324],[2790,1457],[374,9],[741,146],[3083,1938],[3502,1067],[1280,237],[3326,1846],[217,38],[2503,1172],[3527,41],[739,1850],[3548,1999],[48,154],[1419,872],[1689,1223],[3468,1404],[1628,253],[382,872],[3029,1242],[3646,1758],[285,1029],[1782,93],[1067,371],[2849,1214],[920,1835],[1741,712],[876,220],[2753,283],[2609,1286],[3941,258],[3613,523],[1754,559],[2916,1724],[2445,1820],[3825,1101],[2779,435],[201,693],[2502,1274],[765,833],[3105,1823],[1937,1400],[3364,1498],[3702,1624],[2164,1874],[3019,189],[3098,1594],[3239,1376],[3359,1693],[2081,1011],[1398,1100],[618,1953],[1878,59],[3803,886],[397,1217],[3035,152],[2502,146],[3230,380],[3479,1023],[958,1670],[3423,1241],[78,1066],[96,691],[3431,78],[2053,1461],[3048,1],[571,1711],[3393,782],[2835,1472],[144,1185],[923,108],[989,1997],[3061,1211],[2977,39],[1668,658],[878,715],[678,1599],[1086,868],[640,110],[3551,1673],[106,1267],[2243,1332],[3796,1401],[2643,1320],[48,267]]
    exact_solution = [0, 73, 20, 6, 75, 11, 31, 57, 62, 87, 34, 39, 83, 16, 98, 44, 53, 24, 96, 64, 7, 4, 41, 89, 47, 67, 37, 32, 21, 38, 42, 85, 18, 93, 17, 23, 28, 99, 77, 52, 33, 5, 69, 36, 76, 84, 95, 10, 1, 3, 81, 91, 26, 66, 86, 40, 74, 12, 54, 90, 92, 29, 65, 30, 8, 56, 79, 9, 59, 49, 48, 19, 14, 55, 61, 63, 22, 27, 35, 94, 58, 97, 50, 68, 46, 2, 45, 25, 78, 80, 88, 71, 43, 51, 13, 60, 70, 15, 72, 82, 0]
    assert calculate_cost_from_node_coord(node_coord, solution) == calculate_cost_from_node_coord(node_coord, exact_solution), f"Expected {exact_solution}, got {solution}"

if __name__ == '__main__':
    test_par_file()