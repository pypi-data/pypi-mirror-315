import pytest
import numpy as np
import LKHpy as LK
from calculate_cost import calculate_cost_from_cost_matrix, calculate_cost_from_node_coord

# test data: gr96
test_data = [
    ([[0.1, 0.1], [0.2, 1.2], [1.3, 0.3]], 2, [0, 1, 0, 0, 2, 0]),
    ([[14.55,-23.31],[28.06,-15.24],[32.38,-16.54],[31.38,-8.00],[33.39,-7.35],[34.02,-6.51],[34.05,-4.57],[35.48,-5.45],[35.43,-0.43],[36.47,3.03],[22.56,5.30],[36.22,6.37],[36.48,10.11],[34.44,10.46],[32.54,13.11],[32.07,20.04],[31.12,29.54],[31.16,32.18],[29.58,32.33],[30.03,31.15],[24.05,32.53],[19.37,37.14],[15.36,32.32],[13.11,30.13],[13.38,25.21],[15.20,38.53],[9.00,38.50],[11.36,43.09],[18.06,-15.57],[14.40,-17.26],[13.28,-16.39],[11.51,-15.35],[16.46,-3.01],[12.39,-8.00],[10.23,-9.18],[9.31,-13.43],[8.30,-13.15],[6.18,-10.47],[5.19,-4.02],[6.41,-1.35],[5.33,-0.13],[6.08,1.13],[6.29,2.37],[12.22,-1.31],[13.31,2.07],[12.00,8.30],[11.51,13.10],[12.07,15.03],[6.27,3.24],[6.27,7.27],[0.20,6.44],[3.45,8.47],[3.52,11.31],[4.22,18.35],[0.23,9.27],[-4.16,15.17],[-4.18,15.18],[0.04,18.16],[-5.54,22.25],[0.30,25.12],[-3.23,29.22],[-1.57,30.04],[0.19,32.25],[-1.17,36.49],[2.01,45.20],[-4.03,39.40],[-6.10,39.11],[-6.48,39.17],[-8.48,13.14],[-12.44,15.47],[-11.40,27.28],[-12.49,28.13],[-15.25,28.17],[-20.09,28.36],[-17.50,31.03],[-15.47,35.00],[-19.49,34.52],[-25.58,32.35],[-15.57,-5.42],[-37.15,-12.30],[-22.59,14.31],[-22.34,17.06],[-26.38,15.10],[-24.45,25.55],[-25.45,28.10],[-26.15,28.00],[-29.12,26.07],[-29.55,30.56],[-33.00,27.55],[-33.58,25.40],[-33.55,18.22],[-23.21,43.40],[-18.55,47.31],[-12.16,49.17],[-20.10,57.30],[-4.38,55.27]], 4, [0,29,0,0,31,35,36,37,34,33,32,10,44,43,38,39,40,41,42,48,50,54,52,51,49,45,46,47,53,57,55,56,68,69,78,79,80,81,82,90,89,88,86,87,77,84,85,83,73,74,72,71,70,58,59,60,61,62,63,65,66,67,75,76,91,92,94,93,95,64,26,27,25,21,22,23,24,20,18,17,19,16,15,14,13,12,11,9,8,7,6,5,4,3,2,1,0,0,28,0,0,30,0])
]

@pytest.mark.parametrize("coordinates, salesmen, exact_tour", test_data)
def test_tsp_geo(coordinates, salesmen, exact_tour):
    params = {
        'SPECIAL': '',
        'MTSP_OBJECTIVE': 'MINSUM',
        'MAX_CANDIDATES': 6,
        'MAX_TRIALS': 10000,
        'SALESMEN': salesmen,
        'RUNS': 1,
        'TOTAL_TIME_LIMIT': 2
    }
    result = LK.geo(coordinates, params)
    assert calculate_cost_from_node_coord(coordinates, result) == calculate_cost_from_node_coord(coordinates, exact_tour), f"Expected {exact_tour}, got {result}"