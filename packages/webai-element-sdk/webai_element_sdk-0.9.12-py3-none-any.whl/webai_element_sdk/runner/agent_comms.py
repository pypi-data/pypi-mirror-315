from typing import Any, Callable, Dict, Optional

class WebSocketServer:
    def __init__(self, config: Dict[str, str]) -> None: ...

    def start(self, addr: str) -> None: ...

    def send(self, type_: str, payload: Any, no_await: bool) -> Optional[str]: ...

    def wait_until_begin(self) -> Dict[str, str]: ... # type: ignore

    def on_refresh(self, callback: Callable) -> None: ...

    def wait_for_refresh(self) -> None: ...

    def shutdown(self) -> None: ...
