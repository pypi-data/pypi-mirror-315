[project]
name = "pycolint"
version = "0.2.1-rc10"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
]

[project.urls]
github = "https://github.com/glencoe/pycolint"
changelog = "https://github.com/glencoe/pycolint/blob/main/CHANGELOG.md"

[dependency-groups]

dev = [
    "build>=1.2.2.post1",
    "pytest>=8.3.4",
    "coverage>=7.6.9",
]
utils = [
    "rust-just>=1.38.0",
]
versioning = [
    "towncrier>=24.8.0",
    "bump-my-version>=0.28.1",
]
lint = [
    "ruff>=0.8.2",
]
lsp = [
    "pylsp-mypy>=0.6.9",
    "pylsp-rope>=0.1.17",
    "python-lsp-server>=1.12.0",
]


[project.scripts]
pycolint = "pycolint.main:main"

[tool.mypy]
files = ["src/pycolint/**/*.py"]
mypy_path = "src/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pycolint"]


[tool.uv]
default-groups = ["utils", "lint", "versioning", "dev"]

[tool.pytest.ini_options]
python_files = ["*_test.py", "test_*.py"]
testpaths = ["test"]
python_classes = ["*Test", "Test*"]



[tool.bumpversion]
current_version = "0.2.1-rc10"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_label>[a-zA-Z-]+)         # pre-release label
        (?P<pre_number>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_label}{distance_to_latest_tag}", # automatically increase pre_number based on commits
    "{major}.{minor}.{patch}",
    ]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "bump: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "bump: {current_version} → {new_version}"
commit_args = "--no-verify"
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.bumpversion.parts.pre_label]
values = ["dev", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "pyproject.toml"


[tool.towncrier]
name = "pycolint"
filename = "CHANGES.md"
package = "pycolint"
package_dir = "src"
underlines = ["", "", ""]
title_format = "## [{version}](https://github.com/glencoe/pycolint/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/glencoe/pycolint/issues/{issue})"
