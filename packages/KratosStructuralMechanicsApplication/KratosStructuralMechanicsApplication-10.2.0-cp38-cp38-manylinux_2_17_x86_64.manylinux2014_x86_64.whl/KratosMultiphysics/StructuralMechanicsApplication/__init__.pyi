import Kratos
from typing import overload

class AdjointLinearStrainEnergyResponseFunction(Kratos.AdjointResponseFunction):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class AdjointLocalStressResponseFunction(Kratos.AdjointResponseFunction):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class AdjointMaxStressResponseFunction(Kratos.AdjointResponseFunction):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class AdjointNodalDisplacementResponseFunction(Kratos.AdjointResponseFunction):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class AdjointNodalReactionResponseFunction(Kratos.AdjointResponseFunction):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class BeamConstitutiveLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class ComputeCenterOfGravityProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...

class ComputeMassMomentOfInertiaProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Point, arg2: Kratos.Point) -> None: ...

class DistributeLoadOnSurfaceProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class EigenfrequencyResponseFunctionUtility:
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...
    def CalculateGradient(self) -> None: ...
    def CalculateValue(self) -> float: ...
    def Initialize(self) -> None: ...

class EigensolverDynamicScheme(Kratos.Scheme):
    def __init__(self) -> None: ...

class EigensolverStrategy(Kratos.ImplicitSolvingStrategy):
    def __init__(self, model_part: Kratos.ModelPart, scheme: Kratos.Scheme, builder_and_solver: Kratos.BuilderAndSolver, mass_matrix_diagonal_value: float, stiffness_matrix_diagonal_value: float, compute_modal_decomposition: bool = ...) -> None: ...

class ErrorMeshCriteria(Kratos.ConvergenceCriteria):
    def __init__(self, arg0: Kratos.Parameters) -> None: ...

class ExplicitCentralDifferencesScheme(Kratos.Scheme):
    @overload
    def __init__(self, arg0: float, arg1: float, arg2: float) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.Parameters) -> None: ...

class ExplicitMultiStageKimScheme(Kratos.Scheme):
    @overload
    def __init__(self, arg0: float) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.Parameters) -> None: ...

class FormfindingStrategy(Kratos.ResidualBasedNewtonRaphsonStrategy):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Scheme, arg2: Kratos.ConvergenceCriteria, arg3: Kratos.BuilderAndSolver, arg4: Kratos.ModelPart, arg5: bool, arg6: str, arg7: Kratos.Parameters, arg8: int, arg9: bool, arg10: bool, arg11: bool) -> None: ...
    @staticmethod
    def WriteFormFoundMdpa(arg0: Kratos.ModelPart) -> None: ...

class HarmonicAnalysisStrategy(Kratos.ImplicitSolvingStrategy):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Scheme, arg2: Kratos.BuilderAndSolver, arg3: bool) -> None: ...
    def GetUseMaterialDampingFlag(self) -> bool: ...
    def SetUseMaterialDampingFlag(self, arg0: bool) -> None: ...

class ImposeRigidMovementProcess(Kratos.Process):
    @overload
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class ImposeZStrainProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class KratosStructuralMechanicsApplication(Kratos.KratosApplication):
    def __init__(self) -> None: ...

class LinearElastic3DLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class LinearElasticAxisym2DLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class LinearElasticPlaneStrain2DLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class LinearElasticPlaneStress2DLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class MassResponseFunctionUtility:
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...
    def CalculateGradient(self) -> None: ...
    def CalculateValue(self) -> float: ...
    def Initialize(self) -> None: ...

class MechanicalExplicitStrategy(Kratos.ImplicitSolvingStrategy):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Scheme, arg2: bool, arg3: bool, arg4: bool) -> None: ...
    def GetInitializePerformedFlag(self) -> bool: ...
    def SetInitializePerformedFlag(self, arg0: bool) -> None: ...

class PerturbGeometrySparseUtility:
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.LinearSolver, arg2: Kratos.Parameters) -> None: ...
    def ApplyRandomFieldVectorsToGeometry(self, arg0: Kratos.ModelPart, arg1: list[float]) -> None: ...
    def CreateRandomFieldVectors(self) -> int: ...

class PerturbGeometrySubgridUtility:
    def __init__(self, *args, **kwargs) -> None: ...
    def ApplyRandomFieldVectorsToGeometry(self, arg0: Kratos.ModelPart, arg1: list[float]) -> None: ...
    def CreateRandomFieldVectors(self) -> int: ...

class PostprocessEigenvaluesProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.Model, arg1: Kratos.Parameters) -> None: ...

class PrebucklingStrategy(Kratos.ImplicitSolvingStrategy):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Scheme, arg2: Kratos.BuilderAndSolver, arg3: Kratos.BuilderAndSolver, arg4: Kratos.ConvergenceCriteria, arg5: int, arg6: Kratos.Parameters) -> None: ...
    def GetSolutionFoundFlag(self) -> bool: ...

class PrismNeighboursProcess(Kratos.Process):
    @overload
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: bool) -> None: ...

class ProjectVectorOnSurfaceUtility:
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def Execute(arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class QuadrilateralShellToSolidShellProcess(Kratos.Process):
    @overload
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class ReplaceMultipleElementsAndConditionsProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class ResidualBasedRelaxationScheme(Kratos.Scheme):
    def __init__(self, arg0: float, arg1: float) -> None: ...
    def Initialize(self, arg0: Kratos.ModelPart) -> None: ...

class ResidualDisplacementAndOtherDoFCriteria(Kratos.ConvergenceCriteria):
    @overload
    def __init__(self, arg0: float, arg1: float, arg2: str) -> None: ...
    @overload
    def __init__(self, arg0: float, arg1: float) -> None: ...

class SPRErrorProcess2D(Kratos.Process):
    @overload
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class SPRErrorProcess3D(Kratos.Process):
    @overload
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class SetAutomatedInitialVariableProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class SetCartesianLocalAxesProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class SetCylindricalLocalAxesProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class SetMovingLoadProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class SetSphericalLocalAxesProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class ShellCrossSectionVariable(Kratos.VariableData):
    def __init__(self, *args, **kwargs) -> None: ...

class SolidShellThickComputeProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...

class StrainEnergyResponseFunctionUtility:
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...
    def CalculateGradient(self) -> None: ...
    def CalculateValue(self) -> float: ...
    def Initialize(self) -> None: ...

class StructuralMechanicsBossakScheme(Kratos.ResidualBasedBossakDisplacementScheme):
    def __init__(self, arg0: Kratos.Parameters) -> None: ...

class StructuralMechanicsStaticScheme(Kratos.ResidualBasedIncrementalUpdateStaticScheme):
    def __init__(self, arg0: Kratos.Parameters) -> None: ...

class TimoshenkoBeamElasticConstitutiveLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class TotalStructuralMassProcess(Kratos.Process):
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @staticmethod
    def CalculateElementMass(arg0: Kratos.Element, arg1: int) -> float: ...

class TriangleShellToSolidShellProcess(Kratos.Process):
    @overload
    def __init__(self, arg0: Kratos.ModelPart) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> None: ...

class TrussConstitutiveLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class UserProvidedLinearElastic2DLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

class UserProvidedLinearElastic3DLaw(Kratos.ConstitutiveLaw):
    def __init__(self) -> None: ...

def CalculateDeltaTime(arg0: Kratos.ModelPart, arg1: Kratos.Parameters) -> float: ...
def ComputeDampingCoefficients(arg0: Kratos.Parameters) -> Kratos.Vector: ...
