Index: example_scripts/trace_loop_splk_whl.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example_scripts/trace_loop_splk_whl.py b/example_scripts/trace_loop_splk_whl.py
new file mode 100644
--- /dev/null	(date 1723048148980)
+++ b/example_scripts/trace_loop_splk_whl.py	(date 1723048148980)
@@ -0,0 +1,36 @@
+import time
+
+from opentelemetry import trace
+
+SERVICE_NAME = "my-otel-test"
+NUM_ADDS = 12
+
+if __name__ == "__main__":
+    tracer = trace.get_tracer("my-tracer")
+    for i in range(NUM_ADDS):
+        with tracer.start_as_current_span("my-span"):
+            print(f"simple_loop.py: {i+1}/{NUM_ADDS}")
+            time.sleep(0.5)
+
+
+class MyOtelTest:
+    def requirements(self):
+        return ("/Users/pcollins/github/signalfx/sop-worktree/dist/splunk_opentelemetry-1.19.1-py3-none-any.whl[otlp]",)
+
+    def environment_variables(self):
+        return {
+            "OTEL_SERVICE_NAME": SERVICE_NAME,
+        }
+
+    def wrapper_command(self):
+        return "opentelemetry-instrument"
+
+    def on_start(self):
+        return None
+
+    def on_stop(self, telemetry, stdout: str, stderr: str, returncode: int) -> None:
+        print(f"script completed with return code {returncode}")
+        print(f"telemetry: {telemetry}")
+
+    def is_http(self):
+        return False
