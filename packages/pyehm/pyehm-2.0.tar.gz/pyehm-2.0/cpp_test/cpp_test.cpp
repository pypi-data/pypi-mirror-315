// ConsoleApplication1.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <map>
#include <set>
#include <iostream>
#include "net/EHMNetNode.h"
#include "net/EHM2NetNode.h"
#include <net/EHMNet.h>
#include <core/EHM.h>
#include <core/EHM2.h>
#include <Eigen/Dense>
#include "utils/Utils.h"
#include <chrono>

int main()
{
    ehm::net::EHM2NetNodePtr root = std::make_shared<ehm::net::EHM2NetNode>(ehm::net::EHM2NetNode(-1));
    std::cout << *root << std::endl;
    //Eigen::MatrixXi validation_matrix(4, 5);
    //validation_matrix << 1, 1, 0, 0, 0,
          //               1, 1, 1, 1, 0,
          //               1, 1, 1, 0, 0,
          //               1, 0, 0, 1, 1;
    //Eigen::MatrixXd likelihood_matrix(4, 5);
    //likelihood_matrix << 0.1, 0.9, 0, 0, 0,
    //                     0.1, 0.3, 0.2, 0.4, 0,
    //                     0.7, 0.1, 0.2, 0, 0,
    //                     0.2, 0, 0, 0.75, 0.05;

    //gen_clusters(validation_matrix, likelihood_matrix);


    //EHMNetPtr net = EHM::constructNet(validation_matrix);
    //Eigen::MatrixXd a_matrix = EHM::computeAssociationMatrix(net, likelihood_matrix);
    //std::cout << a_matrix << std::endl;
    //std::cout << root->toString() << std::endl;
    //std::map<int, std::set<int>> a = { {1, {1, 2, 3}}, {2, {1, 2, 3}} };
    //std::cout << a[3].size() << std::endl;
    //a[3].insert(1);
    //std::cout << a[1].size() << std::endl;
    //std::cout << a[3].size() << std::endl;

    /*Eigen::MatrixXi validation_matrix(11, 10);
    validation_matrix << 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,
        1, 1, 0, 1, 1, 1, 1, 1, 0, 0,
        1, 1, 0, 1, 0, 1, 1, 1, 1, 0,
        1, 1, 1, 1, 0, 0, 1, 1, 0, 1,
        1, 0, 1, 1, 0, 0, 0, 0, 1, 0,
        1, 1, 1, 0, 0, 1, 1, 1, 1, 0,
        1, 1, 0, 0, 0, 1, 1, 0, 1, 1,
        1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 1, 1, 1, 1, 1, 1, 0,
        1, 0, 0, 0, 1, 0, 1, 1, 1, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 0, 1;*/
        //Eigen::MatrixXi validation_matrix(9, 8);
        //validation_matrix << 1, 1, 0, 1, 0, 0, 0, 0,
        //    1, 0, 1, 0, 0, 1, 0, 0,
        //    1, 1, 0, 0, 0, 0, 0, 1,
        //    1, 0, 0, 0, 1, 0, 0, 1,
        //    1, 0, 1, 0, 0, 0, 0, 0,
        //    1, 0, 0, 0, 0, 0, 0, 0,
        //    1, 0, 0, 0, 0, 0, 1, 0,
        //    1, 0, 0, 0, 1, 0, 0, 0,
        //    1, 0, 0, 0, 0, 0, 0, 0;

        //Eigen::MatrixXd likelihood_matrix(9, 8);
        //likelihood_matrix << 0.1, 0.9, 0, 0.1, 0, 0, 0, 0,
        //    0.6, 0, 0.2, 0, 0, 0.2, 0, 0,
        //    0.2, 0.6, 0, 0, 0, 0, 0, 0.2,
        //    0.1, 0, 0, 0, 0.45, 0, 0, 0.45,
        //    0.2, 0, 0.8, 0, 0, 0, 0, 0,
        //    1, 0, 0, 0, 0, 0, 0, 0.0,
        //    0.55, 0, 0, 0, 0, 0, 0.45, 0,
        //    0.2, 0, 0, 0, 0.8, 0, 0, 0,
        //    1, 0, 0, 0, 0, 0, 0, 0;

        /*Eigen::MatrixXi validation_matrix = Eigen::MatrixXi::Ones(16, 16);
        Eigen::MatrixXd likelihood_matrix(16, 16);
        likelihood_matrix << 0.6066897366476632, 0.22478877932048935, 0.2402800768376584, 0.601131425571116, 0.2696396831816852, 0.3761112420467816, 0.8738094405167339, 0.7102708945946108, 0.5964358206971567, 0.9340662169198936, 0.3743637321542349, 0.5465568307661955, 0.4607119658690998, 0.5917991543698112, 0.2983788725494356, 0.1474286589536843,
            0.13080490128402955, 0.31660832575843456, 0.6656821010442889, 0.7375447876720211, 0.0052892865036834324, 0.19767839709043988, 0.21703621067603684, 0.696864836851853, 0.2535616908382854, 0.4829365402999527, 0.390863267138603, 0.8470863189606598, 0.7130044896564433, 0.7938360596696653, 0.02539077159545078, 0.5716810410446054,
            0.9871936941532997, 0.38769212561763267, 0.9999537143009137, 0.24504884272599203, 0.3923628814611825, 0.012785079774205954, 0.4582163411981348, 0.6101559799319525, 0.9134781650618682, 0.15854549202950463, 0.18916488638957896, 0.22275654603033668, 0.5338098240714022, 0.8163542582099069, 0.4396242364128504, 0.4533308365217399,
            0.1986729757196357, 0.7187944876306008, 0.37322270654310763, 0.4503462474835619, 0.5564085867026785, 0.4933711691995776, 0.36598076493371146, 0.5482905970804346, 0.8827925442009554, 0.7930770629636628, 0.4794297943279907, 0.7241923432877058, 0.832815352786233, 0.8531896551591706, 0.3112229362367346, 0.012731803704321809,
            0.3714273565110585, 0.7295675128584562, 0.49486347554138954, 0.7749727401837224, 0.947382304177377, 0.6650539827806187, 0.3472268258180974, 0.3877412452770844, 0.1442065089008635, 0.4040594170419747, 0.2734748128305742, 0.2447403738965006, 0.699905440462017, 0.8053677144104164, 0.28821075417716724, 0.771238559946437,
            0.6365789653966094, 0.5654087970774353, 0.056762637461852505, 0.8894925484549169, 0.23521384417726565, 0.6140955642088097, 0.9245291479672194, 0.7351254940550753, 0.6037141897172281, 0.863454101288651, 0.6002210946706846, 0.3670052790030972, 0.5505403652706437, 0.3695900281624971, 0.6329773271787094, 0.6198210281799991,
            0.2340031080346563, 0.03796619532195278, 0.20520209854498928, 0.6995903259989982, 0.30578972144750927, 0.9469456875555641, 0.3210351625822482, 0.07594338488204655, 0.9490541420664428, 0.5879120403946301, 0.1913581913432273, 0.0012223762438976493, 0.8568222967240703, 0.5002067777450937, 0.3808744066401757, 0.5745158130904197,
            0.6313910909090765, 0.8219155160943319, 0.8969122680154006, 0.46648653726731415, 0.7195484030734893, 0.8339140222761705, 0.8713170170952892, 0.039831458082943305, 0.7754267053471849, 0.4976573462958771, 0.1332905574541522, 0.9663737405299196, 0.2854384269466139, 0.30193381496837857, 0.7421829382145061, 0.9497124879015126,
            0.9453044931600609, 0.20579721494613012, 0.74525402075037, 0.8922247417637321, 0.9519825805221916, 0.5816696807039144, 0.6244312586360974, 0.8241849895802839, 0.09388252579029133, 0.3673770347440206, 0.8584916328193145, 0.6961133321528415, 0.08903558262839684, 0.8618431337099923, 0.746588568914922, 0.4602842914960432,
            0.7034852455974465, 0.6790886961763636, 0.8601794899002035, 0.29077334989444037, 0.3489762696639136, 0.9433258418462905, 0.23890705393996858, 0.2351794298693004, 0.36548651520750775, 0.799717604432222, 0.6633083189376267, 0.9229795534062455, 0.32849011275363493, 0.6257824266489724, 0.6021795921436048, 0.8530138307949012,
            0.7527771915958714, 0.7438806654354027, 0.5475952464896318, 0.40084590381172636, 0.3764669333452998, 0.8234209248800738, 0.4080218261241052, 0.6312343208211892, 0.36186331047069875, 0.07950362004692968, 0.1062822639499238, 0.17254205660050892, 0.6902967578844724, 0.5530700984000928, 0.27118162470544427, 0.514765846156167,
            0.8525177270823894, 0.017507786151608418, 0.5073831412184922, 0.39962255475280384, 0.2318251801282859, 0.12169975889299967, 0.04114858851600944, 0.5307299497798903, 0.6220910547149459, 0.6353470539038185, 0.45374413523900536, 0.49383634578220614, 0.4844680250190395, 0.3975090160373085, 0.5705628987109896, 0.3867646361537159,
            0.11168699495237278, 0.24204770412815824, 0.19664780690675998, 0.5759308580183141, 0.046765163414110966, 0.08324878333487373, 0.540091526684893, 0.44844746706449057, 0.46170357899237213, 0.4880469182771032, 0.2645185666000609, 0.29549607730585814, 0.869127486088562, 0.9988606465901686, 0.193572225656931, 0.6310826175691505,
            0.4057035453635799, 0.4789239764482127, 0.9319370256395133, 0.08099897570963943, 0.08623832228854833, 0.05155411201507343, 0.4387918924393187, 0.5145224526561668, 0.5596250162752189, 0.2644570742024198, 0.8599645696288138, 0.6271496693442186, 0.21886316531199856, 0.6781096542073708, 0.3148013785091407, 0.9245666460639093,
            0.13104192272881243, 0.9445562272314585, 0.8395501552346994, 0.5611871644784229, 0.13593443212548384, 0.6538821787300737, 0.9703648450022987, 0.5224555391448598, 0.15588125471959313, 0.9759218231720218, 0.770278949956023, 0.23546239416590087, 0.4451136598209827, 0.21640951002370057, 0.0038630136674265847, 0.2888192350485539,
            0.678910386072281, 0.8951909242264223, 0.19399481171776956, 0.803843990309496, 0.9999377731025668, 0.5488249454098297, 0.3367203902209652, 0.6994743053831638, 0.41262421317883247, 0.42435108210861217, 0.5486102554078767, 0.6191977711781823, 0.800794397245659, 0.4806472428552371, 0.4148674373471335, 0.02475500850007506;*/

            /*Eigen::MatrixXi validation_matrix (11, 10);
            validation_matrix << 1, 1, 1, 0, 1, 0, 1, 1, 0, 0,
                1, 1, 0, 1, 0, 1, 1, 1, 1, 0,
                1, 1, 0, 1, 1, 1, 1, 1, 0, 0,
                1, 1, 1, 1, 0, 0, 1, 1, 0, 1,
                1, 0, 1, 1, 0, 0, 0, 0, 1, 0,
                1, 1, 1, 0, 0, 1, 1, 1, 1, 0,
                1, 1, 0, 0, 0, 1, 1, 0, 1, 1,
                1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
                1, 0, 0, 1, 1, 1, 1, 1, 1, 0,
                1, 0, 0, 0, 1, 0, 1, 1, 1, 0,
                1, 0, 1, 0, 0, 0, 0, 0, 0, 1;

            Eigen::MatrixXd likelihood_matrix(11, 10);
            likelihood_matrix << 0.9, 0.13, 0.1, 0, 0.97, 0, 0.94, 0.55, 0, 0,
                0.55, 0.31, 0, 0.61, 0.27, 0.38, 0.34, 0.58, 0, 0,
                0.61, 0.55, 0, 0.32, 0, 0.25, 0.8, 0.94, 0.62, 0,
                0.45, 0.53, 0.61, 0.19, 0, 0, 0.95, 0.61, 0, 0.17,
                0.67, 0, 0.79, 0.99, 0, 0, 0, 0, 0.71, 0,
                0.51, 0.37, 0.04, 0, 0, 0.53, 0.92, 0.44, 0.95, 0,
                0.31, 0.03, 0, 0, 0, 0.08, 0.68, 0, 0.04, 0.31,
                0.23, 0.09, 0.21, 0, 0, 0, 0, 0, 0, 0,
                0.62, 0, 0, 0.19, 0.17, 0.31, 0.69, 0.89, 0.63, 0,
                0.44, 0, 0, 0, 0.53, 0, 0.49, 0.01, 0.31, 0,
                0.32, 0, 0.56, 0, 0, 0, 0, 0, 0, 0.23;*/

                //Eigen::MatrixXi validation_matrix (16, 16);
                //validation_matrix << 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0,
                //    1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0,
                //    1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0,
                //    1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0,
                //    1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0,
                //    1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0,
                //    1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0,
                //    1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0,
                //    1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                //    1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0,
                //    1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0,
                //    1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0,
                //    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0,
                //    1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0,
                //    1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0,
                //    1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0;
                //Eigen::MatrixXd likelihood_matrix(16, 16);
                //likelihood_matrix << 0.9815281907314684, 0.08534685592745528, 0.8548791892328399, 0.9159790217151026, 0.8028503672522566, 0.0297952752550511, 0.303930363187229, 0.0, 0.3624840662697367, 0.25732954736906555, 0.5575945062280652, 0.0, 0.5083262294979378, 0.0, 0.0, 0.7874180646601956,
                //    0.44215266206042003, 0.45881010693673074, 0.0, 0.0, 0.907230293162083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21785971038345475, 0.0039016534389494373, 0.0, 0.0,
                //    0.22815744367076585, 0.0, 0.0, 0.08888014186003823, 0.0, 0.0, 0.3706601794385458, 0.0, 0.5872012797059547, 0.0, 0.0, 0.41182934811331917, 0.0, 0.2680225843937426, 0.1835960316674201, 0.0,
                //    0.3055017672034569, 0.0, 0.0, 0.0, 0.8403254033306239, 0.29080654116287596, 0.0032560068017434274, 0.2203571602156872, 0.0, 0.0, 0.7909040918837654, 0.3468857759680135, 0.46154490565596606, 0.0, 0.911882285312327, 0.0,
                //    0.45383287729887023, 0.8376808316990171, 0.0, 0.0, 0.6130231277373737, 0.0, 0.0, 0.0, 0.6097033057952732, 0.4266366811443364, 0.5556578555534067, 0.0888835200416973, 0.09002706481109801, 0.0, 0.06629128608348689, 0.11258177816878545,
                //    0.2675834674153962, 0.21389586911794056, 0.5252340578802349, 0.844112018585587, 0.0, 0.24683637749334786, 0.0, 0.11632504180851433, 0.0, 0.6885762128606683, 0.8111001873561783, 0.0, 0.12214283403406845, 0.0, 0.817035530633455, 0.048798950137895036,
                //    0.6298829457985379, 0.0, 0.5860901042062973, 0.48968931408291405, 0.4393628020070456, 0.0, 0.0, 0.08961594582527943, 0.0, 0.35335151768677386, 0.322711705190748, 0.0, 0.4053356190260088, 0.02340774189861916, 0.0, 0.0,
                //    0.07812735495102041, 0.0, 0.0, 0.0, 0.0, 0.3101423942330701, 0.9449601511153086, 0.0, 0.927807050380108, 0.0, 0.0, 0.0, 0.0, 0.9727410783899864, 0.22336634554680357, 0.6910523518108653,
                //    0.04661303594277166, 0.384112384654575, 0.0, 0.0, 0.0, 0.0, 0.5758494944059145, 0.0, 0.0, 0.15499188693138777, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                //    0.8086306989181371, 0.0, 0.0, 0.0, 0.5495883614260113, 0.9252678044843655, 0.0, 0.07680107499577993, 0.0, 0.0, 0.0, 0.0, 0.9561819911573838, 0.0, 0.9888533344478367, 0.0,
                //    0.9514729815766564, 0.39767790235874845, 0.0, 0.9373643824447211, 0.6612320009510576, 0.8604571572263763, 0.0, 0.0, 0.8400612638161988, 0.0, 0.451414122090089, 0.0, 0.6717707845809836, 0.38390604926987615, 0.0, 0.0,
                //    0.05221939734251024, 0.0, 0.0, 0.18710676322711806, 0.7120117806569787, 0.0, 0.0, 0.0, 0.3429223306737943, 0.0, 0.0, 0.0, 0.0, 0.9972391805978187, 0.0, 0.0,
                //    0.6824091314020989, 0.8802905496121761, 0.9369352232017238, 0.06475734789200915, 0.828073363175531, 0.3407492133067537, 0.3733659216881432, 0.6755257504987341, 0.0, 0.0, 0.2705304483195594, 0.0, 0.5449972091474088, 0.0, 0.1257768467466427, 0.9176468474223651,
                //    0.02941859151378845, 0.0, 0.0, 0.0, 0.0, 0.7881062307436866, 0.2141857332297018, 0.6495096327918576, 0.9234367647084418, 0.0, 0.5266476412523676, 0.0, 0.020673098075284835, 0.0, 0.0, 0.0,
                //    0.008835785227390924, 0.0, 0.0, 0.47362877871858355, 0.0, 0.5999088164204146, 0.344093287246108, 0.0, 0.931255644279146, 0.7307998620874907, 0.0, 0.7936201463272745, 0.92583263010773, 0.0, 0.08900381340825048, 0.0,
                //    0.9903755069285494, 0.0, 0.08710361605352679, 0.0, 0.0, 0.0, 0.0, 0.023778440237703813, 0.0, 0.30042862795019454, 0.0, 0.0, 0.7422694481537131, 0.24200659769954924, 0.0, 0.3324194627147532;


    Eigen::MatrixXi validation_matrix(28, 19);
    validation_matrix << 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
        1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
        1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0,
        1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1,
        1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,
        1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1,
        1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0,
        1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1,
        1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
        1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0,
        1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
        1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
        1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0;


    Eigen::MatrixXd likelihood_matrix(28, 19);
    likelihood_matrix << 0.18707119415513093, 0.0, 0.27013655252705393, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2709597221609035, 0.2718325311569116, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18837907455395425, 0.0, 0.20083834779002815, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22420296471168252, 0.23746238883583284, 0.0, 0.0, 0.0, 0.14911722410850226, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2031398765723577, 0.0, 0.21733336592837196, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23892792277232971, 0.21997809847884997, 0.0, 0.0, 0.0, 0.12062073624809069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2475734705886503, 0.0, 0.0, 0.0, 0.12767237844414744, 0.0, 0.037375439416828464, 0.12066417938462298, 0.10842595707307276, 0.0, 0.09757181052876755, 0.0, 0.03006324163696135, 0.0, 0.09336625501105246, 0.0, 0.10416624154643957, 0.0, 0.033121026369457, 0.22205812937059521, 0.032077738141301354, 0.0, 0.0956481265698769, 0.03852576700682431, 0.0, 0.11863736555524458, 0.0, 0.0, 0.0, 0.12109299989178444, 0.0, 0.13131038371544368, 0.0, 0.0, 0.0, 0.11933915551759397, 0.0, 0.12131033423133561, 0.20493712395542873, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07837793588446886, 0.0, 0.0, 0.17494454385433034, 0.0, 0.1962690056471408, 0.0, 0.13665538143674508, 0.0, 0.20881600922188623, 0.0, 0.0, 0.2667597443140859, 0.09145723778828051, 0.0, 0.07441611864651225, 0.0, 0.06968888938980686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.18937855764849962, 0.0, 0.0, 0.0, 0.22516106912059078, 0.0, 0.08313838309222425, 0.0, 0.17769457662224847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8223054233777515, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3757847813249431, 0.0, 0.0, 0.0, 0.0, 0.1883989121539114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.214756700870496, 0.0, 0.0, 0.0, 0.12168434427472277, 0.0, 0.09937526137592673, 0.0, 0.2713019999340008, 0.16341383375685492, 0.0, 0.08185494315421687, 0.0, 0.10100473739243292, 0.0440130641739938, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08073586717433291, 0.0, 0.0, 0.0, 0.0, 0.16188405636714642, 0.09579149804702121, 0.2702424713773872, 0.0, 0.0, 0.0, 0.15084050172973762, 0.0, 0.0, 0.1228951375753618, 0.03536880598623082, 0.05353093819150436, 0.0650749499102971, 0.0, 0.05031380851652057, 0.09354544828304572, 0.08524804732912887, 0.0, 0.07293989110078603, 0.0, 0.0, 0.19436544627258825, 0.0, 0.20840030488598998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2344511004453953, 0.20796526033751042, 0.0, 0.0, 0.0, 0.154817888058516, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21224330087056636, 0.0, 0.2141260314049817, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23295911038302747, 0.21658265961954556, 0.0, 0.0, 0.0, 0.12408889772187888, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2798470396818071, 0.13589628571356685, 0.0, 0.04605562013710969, 0.0, 0.07755502096624686, 0.0, 0.0, 0.042222470525765395, 0.0, 0.0, 0.0, 0.05800161692352286, 0.060446794454178346, 0.0, 0.06559080191797673, 0.06075275304435872, 0.11924181979641059, 0.05438977683905657, 0.27133997118793246, 0.16623551281206647, 0.0, 0.047207639205323206, 0.0, 0.1835549767631259, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04027894807169641, 0.0, 0.0, 0.0, 0.07810029766067891, 0.0, 0.17113372924994982, 0.04214892504922675, 0.27628684090857003, 0.1226163496612959, 0.0, 0.05267322163287798, 0.0, 0.10469407054768504, 0.0, 0.0, 0.0, 0.0, 0.0, 0.12045343110495792, 0.0, 0.0, 0.0, 0.20786272440717954, 0.0, 0.11541336173743368, 0.0, 0.1876634369256791, 0.2610912411296311, 0.0, 0.0, 0.0, 0.2667638565645694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.28448146538012037, 0.0, 0.27584259023107244, 0.07836846494028742, 0.0, 0.14736605004961448, 0.0, 0.0, 0.05542903234018384, 0.0, 0.0, 0.0, 0.07819038731100345, 0.0, 0.0941761002583077, 0.0, 0.0, 0.0, 0.07412704773626684, 0.06764768035944749, 0.12885264677381636, 0.21534925544530134, 0.0, 0.0, 0.04000033004231324, 0.09766591333600724, 0.0, 0.07353629583113494, 0.09340905655241354, 0.0, 0.0, 0.10219107223590093, 0.0, 0.09560246392851923, 0.030110369325678805, 0.08707085430851585, 0.0, 0.10482777876505628, 0.0, 0.06023661022915852, 0.41024731504469897, 0.0, 0.0, 0.0, 0.589752684955301, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.38608230915862496, 0.0, 0.16236447395293535, 0.0, 0.1787780465884655, 0.0, 0.0, 0.0, 0.0, 0.15352506944839123, 0.0, 0.0, 0.0, 0.11925010085158273, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2147637248911994, 0.0, 0.21932646034567194, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23025316716238314, 0.221083635687574, 0.0, 0.0, 0.0, 0.11457301191317153, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23211885450456185, 0.0, 0.16516384432762288, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16028477186794404, 0.1639209706477439, 0.0, 0.0, 0.04676033933810638, 0.17041088229118884, 0.0, 0.0, 0.06134033702283202, 0.0, 0.0, 0.23148675482205266, 0.10023003793456313, 0.0, 0.0, 0.0, 0.0, 0.09450568699138132, 0.0, 0.0, 0.0, 0.07649991464347924, 0.0, 0.08344546791752427, 0.0, 0.10666558702503555, 0.0, 0.08377368118564632, 0.09605030697083008, 0.12734256250948736, 0.20788161383587886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04796469686443738, 0.0, 0.0, 0.21409698804984226, 0.0, 0.17789701091583432, 0.0, 0.14020080510442307, 0.0, 0.21195888522958414, 0.0, 0.0, 0.28684975047363714, 0.0, 0.0, 0.0, 0.2400102883736356, 0.0, 0.0, 0.0, 0.09805660071937089, 0.0, 0.07775909870711216, 0.0, 0.0, 0.20995585220517451, 0.0, 0.0, 0.08736840952106964, 0.0, 0.0, 0.2543338828445542, 0.0, 0.0, 0.0, 0.11678709750505961, 0.0, 0.037437911773149556, 0.10144824859263463, 0.02867901114789366, 0.04418246085168552, 0.07143704665517647, 0.0, 0.0620565029694629, 0.06836502158529907, 0.09184680443512755, 0.0, 0.07857874636482721, 0.0, 0.04484726527512966, 0.18947469316499221, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.8105253068350078, 0.0, 0.0, 0.0;
    std::cout << "Started" << std::endl;
    std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();
    Eigen::MatrixXd a = ehm::core::EHM2::run(validation_matrix, likelihood_matrix);
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
    std::cout << "Time elapsed: " << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << "[ms]" << std::endl;
    std::cout << a;

    //genClusters(validation_matrix, likelihood_matrix);
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
