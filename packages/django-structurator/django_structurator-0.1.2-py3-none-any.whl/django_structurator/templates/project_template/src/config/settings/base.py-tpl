"""
Django settings for {{ project_name }} project.

Generated by 'django-str startproject' using django_structurator.

For more information on this file, see
https://docs.djangoproject.com/en/{{ django_docs_version }}/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/{{ django_docs_version }}/ref/settings/
"""

from pathlib import Path
import os
{% if env == 'django-environ' %}import environ{% elif env == 'python-dotenv' %}from dotenv import load_dotenv{% endif %}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
{% if use_project_level_template %}TEMPLATE_DIR = os.path.join(BASE_DIR.parent, 'templates'){% endif %}
{% if use_project_level_static %}STATIC_DIR = os.path.join(BASE_DIR.parent, 'static'){% endif %}
MEDIA_DIR = os.path.join(BASE_DIR.parent, 'media')

{% if env == 'django-environ' %}env = environ.Env()
environ.Env.read_env(env_file = os.path.join(BASE_DIR, '.env'))
{% elif env == 'python-dotenv' %}
load_dotenv(os.path.join(BASE_DIR, '.env'))
{% endif %}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/{{ django_docs_version }}/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = {% if env != 'no_env' %}{% if env != 'no_env' %}os.getenv("SECRET_KEY"){% else %}""{% endif %}{% else %}"{{secret_key}}"{% endif %}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    {% if use_celery %}'django_celery_results',{% endif %}
    {% if use_drf %}'rest_framework',{% endif %}
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [{% if use_project_level_template %}TEMPLATE_DIR{% endif %}],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # {% verbatim %}{{ MEDIA_URL }}{% endverbatim %}
                # 'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/{{ django_docs_version }}/ref/settings/#databases

{% if database == 'postgresql' %}DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': {% if env != 'no_env' %}os.getenv("DB_NAME"){% else %}""{% endif %},
        'USER': {% if env != 'no_env' %}os.getenv("DB_USER"){% else %}""{% endif %},
        'PASSWORD': {% if env != 'no_env' %}os.getenv("DB_PASSWORD"){% else %}""{% endif %},
        'HOST': {% if env != 'no_env' %}os.getenv("DB_HOST"){% else %}""{% endif %},
        'PORT': {% if env != 'no_env' %}os.getenv("DB_PORT"){% else %}""{% endif %},
    }
}{% elif database == 'mysql' %}DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': {% if env != 'no_env' %}os.getenv("DB_NAME"){% else %}""{% endif %},
        'USER': {% if env != 'no_env' %}os.getenv("DB_USER"){% else %}""{% endif %},
        'PASSWORD': {% if env != 'no_env' %}os.getenv("DB_PASSWORD"){% else %}""{% endif %},
        'HOST': {% if env != 'no_env' %}os.getenv("DB_HOST"){% else %}""{% endif %},
        'PORT': {% if env != 'no_env' %}os.getenv("DB_PORT"){% else %}""{% endif %},
    }
}{% else %}DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR.parent.parent, 'local_db', 'db.sqlite3'),
    }
}{% endif %}

{% if use_redis %}CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}{% endif %}

# Password validation
# https://docs.djangoproject.com/en/{{ django_docs_version }}/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS':{
            'min_length' : 8,
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

{% if use_password_hashers %}PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]{% endif %}

# Internationalization
# https://docs.djangoproject.com/en/{{ django_docs_version }}/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/{{ django_docs_version }}/howto/static-files/

STATIC_URL = 'static/'
{% if use_project_level_static %}STATICFILES_DIRS = [STATIC_DIR,]{% endif %}

MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/{{ django_docs_version }}/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

{% if use_smtp_email %}# Email SMTP Configurations
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = {% if env != 'no_env' %}os.getenv("EMAIL_HOST_USER"){% else %}""{% endif %}
EMAIL_HOST_PASSWORD = {% if env != 'no_env' %}os.getenv("EMAIL_HOST_PASSWORD"){% else %}""{% endif %}{% endif %}

{% if use_celery %}# Celery Configuration Options
CELERY_TIMEZONE = "UTC"
CELERY_BROKER_URL =  "redis://127.0.0.1:6379"
# django-celery-results
CELERY_RESULT_BACKEND = 'django-db'
CELERY_RESULT_EXTENDED = True{% endif %}
