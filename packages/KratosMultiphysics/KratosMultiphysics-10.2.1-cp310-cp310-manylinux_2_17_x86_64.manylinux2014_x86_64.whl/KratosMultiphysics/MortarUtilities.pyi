import Kratos
from typing import overload

def ComputeNodesMeanNormalModelPart(arg0: Kratos.ModelPart, arg1: bool) -> None: ...
def ComputeNodesTangentFromNormalModelPart(arg0: Kratos.ModelPart) -> None: ...
@overload
def ComputeNodesTangentModelPart(arg0: Kratos.ModelPart, arg1: Kratos.Array1DVariable3, arg2: float, arg3: bool) -> None: ...
@overload
def ComputeNodesTangentModelPart(arg0: Kratos.ModelPart, arg1: float, arg2: bool) -> None: ...
@overload
def ComputeNodesTangentModelPart(arg0: Kratos.ModelPart, arg1: Kratos.Array1DVariable3, arg2: float) -> None: ...
@overload
def ComputeNodesTangentModelPart(arg0: Kratos.ModelPart, arg1: float) -> None: ...
@overload
def ComputeNodesTangentModelPart(arg0: Kratos.ModelPart, arg1: Kratos.Array1DVariable3) -> None: ...
@overload
def ComputeNodesTangentModelPart(arg0: Kratos.ModelPart) -> None: ...
@overload
def InvertNormal(arg0: Kratos.ElementsArray) -> None: ...
@overload
def InvertNormal(arg0: Kratos.ConditionsArray) -> None: ...
@overload
def InvertNormal(arg0: Kratos.ElementsArray, arg1: Kratos.Flags) -> None: ...
@overload
def InvertNormal(arg0: Kratos.ConditionsArray, arg1: Kratos.Flags) -> None: ...
