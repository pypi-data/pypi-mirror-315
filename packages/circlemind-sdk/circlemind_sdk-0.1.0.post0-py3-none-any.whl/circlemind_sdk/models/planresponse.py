"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from circlemind_sdk.types import BaseModel
import pydantic
from typing_extensions import Annotated, TypedDict


class PlanResponseTypedDict(TypedDict):
    r"""Data model for plan response."""

    requests_count: float
    r"""Total number of requests used for the current period"""
    requests_max: int
    r"""Number of available requests for the active plan"""
    plan_id: str
    plan_ttl: int


class PlanResponse(BaseModel):
    r"""Data model for plan response."""

    requests_count: Annotated[float, pydantic.Field(alias="requestsCount")]
    r"""Total number of requests used for the current period"""

    requests_max: Annotated[int, pydantic.Field(alias="requestsMax")]
    r"""Number of available requests for the active plan"""

    plan_id: Annotated[str, pydantic.Field(alias="planId")]

    plan_ttl: Annotated[int, pydantic.Field(alias="planTTL")]
