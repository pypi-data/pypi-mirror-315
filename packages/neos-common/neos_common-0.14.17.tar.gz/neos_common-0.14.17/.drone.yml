kind: pipeline
name: Test

trigger:
  ref:
    include:
      - refs/heads/main
      - refs/pull/**
      - refs/tags/v**

steps:
  - name: Test Python
    image: python:3.10.6
    commands:
      - python -m pip install --upgrade uv invoke
      - uv sync --all-extras
      - uv run pytest --cov --cov-report=xml
      - uv run pre-commit run --all-files

---
kind: pipeline
name: publish
depends_on:
  - Test

trigger:
  ref:
    include:
      - refs/tags/v**

steps:
  - name: publish
    image: python:3.10.6
    environment:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD:
        from_secret: PYPI_TOKEN
    commands:
      - python -m pip install --upgrade uv
      - uv build
      - uvx twine upload dist/*
---
kind: pipeline
name: devsecops-sast
trigger:
  ref:
    branch:
      - main

environment:
  DD_URL: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
  DD_PRODUCT_TYPE_NAME: "Neos"
  DD_PRODUCT_NAME: "neos-platform-common"
  DD_SSL_VERIFY: "False"

steps:
  - name: fetching
    image: alpine:3.20
    network_mode: host
    commands:
      - mkdir -p security_reports

  - name: cloc
    image: docker.cloudsmith.io/neom/platform-containers/plugins/devsecops-cloc:ccadfb
    pull: if-not-exists
    settings:
      file_name: "security_reports/cloc.json"
    depends_on:
      - fetching

  - name: cloc-dojo
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-dojo-import
    settings:
      dojo_url: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
      dojo_api_key:
        from_secret: DRONE_DD_API_KEY
      product_type_name: "Neos"
      product_name: "neos-platform-common"
      import_languages: true
      file_name: "security_reports/cloc.json"
    depends_on:
      - cloc

  - name: gitleaks
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-gitleaks
    pull: if-not-exists
    settings:
      file_name: "security_reports/gitleaks.json"
    depends_on:
      - fetching

  - name: gitleaks-dojo
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-dojo-import
    pull: if-not-exists
    settings:
      dojo_url: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
      dojo_api_key:
        from_secret: DRONE_DD_API_KEY
      product_type_name: "Neos"
      product_name: "neos-platform-common"
      test_type_name: "Gitleaks Scan"
      test_name: "Secrets scan"
      file_name: "security_reports/gitleaks.json"
    depends_on:
      - gitleaks

  - name: bandit
    image: docker.cloudsmith.io/neom/platform-containers/plugins/devsecops-bandit:b7e277
    pull: if-not-exists
    settings:
      exclusions:
        - ./tests/
      file_name: "security_reports/bandit-sast.json"
    depends_on:
      - fetching

  - name: bandit-dojo
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-dojo-import
    pull: if-not-exists
    settings:
      dojo_url: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
      dojo_api_key:
        from_secret: DRONE_DD_API_KEY
      product_type_name: "Neos"
      product_name: "neos-platform-common"
      test_type_name: "Bandit Scan"
      test_name: "Bandit SAST Scan"
      file_name: "security_reports/bandit-sast.json"
    depends_on:
      - bandit

  - name: semgrep
    image: docker.cloudsmith.io/neom/platform-containers/plugins/devsecops-semgrep:1f6904
    pull: if-not-exists
    settings:
      exclusions:
        - security_reports/
      file_name: "security_reports/semgrep-sast.json"
    depends_on:
      - fetching

  - name: semgrep-dojo
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-dojo-import
    pull: if-not-exists
    settings:
      dojo_url: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
      dojo_api_key:
        from_secret: DRONE_DD_API_KEY
      product_type_name: "Neos"
      product_name: "neos-platform-common"
      test_type_name: "Semgrep JSON Report"
      test_name: "Semgrep SAST Scan"
      file_name: "security_reports/semgrep-sast.json"
    depends_on:
      - semgrep

  - name: notify
    image: docker.cloudsmith.io/neom/platform-containers/devsecops-tools
    pull: if-not-exists
    commands:
      - rm -rf security_reports
      - echo "Security analysis done."
    depends_on:
      - cloc-dojo
      - gitleaks-dojo
      - bandit-dojo
      - semgrep-dojo

image_pull_secrets:
- CLOUDSMITH_DOCKER

---
kind: pipeline
name: devsecops-sca

trigger:
  ref:
    branch:
      - main

environment:
  PRODUCT_TYPE_NAME: "Neos"
  PRODUCT_NAME: "neos-platform-common"
steps:
  - name: fetching
    image: alpine:3.20
    commands:
      - mkdir -p security_reports

  - name: trivy-sca
    image: docker.cloudsmith.io/neom/platform-containers/plugins/devsecops-trivy:devsecops-trivy
    pull: always
    settings:
      mode: fs
      username:
        from_secret: CLOUDSMITH_USER
      password:
        from_secret: CLOUDSMITH_TOKEN
      repo: "docker.cloudsmith.io/neom/global/platform-cli"
      file_name: "security_reports/trivy-sca.json"
    depends_on:
      - fetching

  - name: trivy-sca-dojo
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-dojo-import
    settings:
      dojo_url: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
      dojo_api_key:
        from_secret: DRONE_DD_API_KEY
      product_type_name: "Neos"
      product_name: "neos-platform-common"
      test_type_name: "Trivy Scan"
      test_name: "Trivy SCA scan"
      file_name: "security_reports/trivy-sca.json"
    depends_on:
      - trivy-sca

  - name: grype-sca
    image: docker.cloudsmith.io/neom/platform-containers/plugins/devsecops-grype:devsecops-grype
    pull: always
    settings:
      username:
        from_secret: CLOUDSMITH_USER
      password:
        from_secret: CLOUDSMITH_TOKEN
      mode: fs
      file_name: "security_reports/grype-sca.json"
    depends_on:
      - fetching

  - name: grype-sca-dojo
    image: docker.cloudsmith.io/neom/platform-containers/plugins:devsecops-dojo-import
    settings:
      dojo_url: "http://defectdojo-defectdojo-django.defectdojo.svc.cluster.local"
      dojo_api_key:
        from_secret: DRONE_DD_API_KEY
      product_type_name: "Neos"
      product_name: "neos-platform-common"
      test_type_name: "Anchore Grype"
      test_name: "Grype SCA scan"
      file_name: "security_reports/grype-sca.json"
    depends_on:
      - grype-sca

  - name: notify
    image: alpine:3.20
    pull: if-not-exists
    commands:
      - rm -rf security_reports
      - echo "Security analysis done."
    depends_on:
      - trivy-sca-dojo
      - grype-sca-dojo

image_pull_secrets:
- CLOUDSMITH_DOCKER
