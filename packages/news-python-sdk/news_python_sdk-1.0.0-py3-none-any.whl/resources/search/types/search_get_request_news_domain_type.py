# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SearchGetRequestNewsDomainType(str, enum.Enum):
    ORIGINAL_CONTENT = "Original Content"
    AGGREGATOR = "Aggregator"
    PRESS_RELEASES = "Press Releases"
    REPUBLISHER = "Republisher"
    OTHER = "Other"

    def visit(
        self,
        original_content: typing.Callable[[], T_Result],
        aggregator: typing.Callable[[], T_Result],
        press_releases: typing.Callable[[], T_Result],
        republisher: typing.Callable[[], T_Result],
        other: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SearchGetRequestNewsDomainType.ORIGINAL_CONTENT:
            return original_content()
        if self is SearchGetRequestNewsDomainType.AGGREGATOR:
            return aggregator()
        if self is SearchGetRequestNewsDomainType.PRESS_RELEASES:
            return press_releases()
        if self is SearchGetRequestNewsDomainType.REPUBLISHER:
            return republisher()
        if self is SearchGetRequestNewsDomainType.OTHER:
            return other()
