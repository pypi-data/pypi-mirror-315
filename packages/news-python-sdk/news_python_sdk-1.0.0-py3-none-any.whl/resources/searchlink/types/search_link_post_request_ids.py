# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ....types.from import From
from ....types.ids import Ids
from ....types.page import Page
from ....types.page_size import PageSize
from ....types.to import To

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore
            
class SearchLinkPostRequestIds(pydantic.BaseModel):
    ids: typing.Optional[Ids]
    from_: typing.Optional[From]
    to: typing.Optional[To] = pydantic.Field(alias="to_")
    page: typing.Optional[Page]
    page_size: typing.Optional[PageSize]
    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = { "by_alias": True, "exclude_unset": True, **kwargs }
        return super().json(**kwargs_with_defaults)
    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = { "by_alias": True, "exclude_unset": True, **kwargs }
        return super().dict(**kwargs_with_defaults)
    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
