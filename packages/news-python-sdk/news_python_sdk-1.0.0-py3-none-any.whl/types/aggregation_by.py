# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AggregationBy(str, enum.Enum):
    """
    The aggregation interval for the results. Possible values are:
    - `day`: Aggregates results by day.
    - `hour`: Aggregates results by hour.
    """

    DAY = "day"
    HOUR = "hour"

    def visit(self, day: typing.Callable[[], T_Result], hour: typing.Callable[[], T_Result]) -> T_Result:
        if self is AggregationBy.DAY:
            return day()
        if self is AggregationBy.HOUR:
            return hour()
