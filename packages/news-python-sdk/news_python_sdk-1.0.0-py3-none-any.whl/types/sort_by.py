# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SortBy(str, enum.Enum):
    """
    The sorting order of the results. Possible values are:
    - `relevancy`: The most relevant results first.
    - `date`: The most recently published results first.
    - `rank`: The results from the highest-ranked sources first.
    """

    RELEVANCY = "relevancy"
    DATE = "date"
    RANK = "rank"

    def visit(
        self,
        relevancy: typing.Callable[[], T_Result],
        date: typing.Callable[[], T_Result],
        rank: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SortBy.RELEVANCY:
            return relevancy()
        if self is SortBy.DATE:
            return date()
        if self is SortBy.RANK:
            return rank()
