# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PublishedDatePrecision(str, enum.Enum):
    """
    The precision of the published date. There are three types:
    - `full`: The day and time of an article is correctly identified with the appropriate timezone.
    - `timezone unknown`: The day and time of an article is correctly identified without timezone.
    - `date`: Only the day is identified without an exact time.
    """

    FULL = "full"
    TIMEZONE_UNKNOWN = "timezone unknown"
    DATE = "date"

    def visit(
        self,
        full: typing.Callable[[], T_Result],
        timezone_unknown: typing.Callable[[], T_Result],
        date: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PublishedDatePrecision.FULL:
            return full()
        if self is PublishedDatePrecision.TIMEZONE_UNKNOWN:
            return timezone_unknown()
        if self is PublishedDatePrecision.DATE:
            return date()
