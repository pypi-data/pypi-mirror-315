# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class SimilarDocument(pydantic.BaseModel):
    """
    The data model for a similar document in the `Search similar` articles request.
    """

    id: str = pydantic.Field(description="The unique identifier of the similar document.")
    score: float = pydantic.Field(description="The relevance score of the similar document.")
    title: str = pydantic.Field(description="The title of the similar document.")
    link: str = pydantic.Field(description="The link to the similar document.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
