# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class VerifyApiKeyResponseStatus(str, enum.Enum):
    VALID = "VALID"
    EXPIRED = "EXPIRED"
    DISABLED = "DISABLED"
    DELETED = "DELETED"
    RATE_LIMITED = "RATE_LIMITED"
    USAGE_LIMITED = "USAGE_LIMITED"
    INVALID_SCOPES = "INVALID_SCOPES"
    INVALID = "INVALID"

    def visit(
        self,
        valid: typing.Callable[[], T_Result],
        expired: typing.Callable[[], T_Result],
        disabled: typing.Callable[[], T_Result],
        deleted: typing.Callable[[], T_Result],
        rate_limited: typing.Callable[[], T_Result],
        usage_limited: typing.Callable[[], T_Result],
        invalid_scopes: typing.Callable[[], T_Result],
        invalid: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is VerifyApiKeyResponseStatus.VALID:
            return valid()
        if self is VerifyApiKeyResponseStatus.EXPIRED:
            return expired()
        if self is VerifyApiKeyResponseStatus.DISABLED:
            return disabled()
        if self is VerifyApiKeyResponseStatus.DELETED:
            return deleted()
        if self is VerifyApiKeyResponseStatus.RATE_LIMITED:
            return rate_limited()
        if self is VerifyApiKeyResponseStatus.USAGE_LIMITED:
            return usage_limited()
        if self is VerifyApiKeyResponseStatus.INVALID_SCOPES:
            return invalid_scopes()
        if self is VerifyApiKeyResponseStatus.INVALID:
            return invalid()
