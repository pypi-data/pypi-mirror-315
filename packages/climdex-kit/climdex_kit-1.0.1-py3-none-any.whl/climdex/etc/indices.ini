;
; configuration file for ``climdex'' indices
;

[DEFAULT]
; ############################################################################################
; # CDO specific instructions.
;
; Each CDO call (like the one in the example below) can be structured as a (chained set of)
; input(s) and outputs):
;
;   $ cdo [opts] zonpctl,95 -remapbil,r1400x720 ifile.nc ofile.nc
;                \_______/  \________________/  \_____/  \_____/
;                OP[,args]      CHAINED_OP      IFILE(s)  OFILE  =
;                OP[,args]  \__________INPUT__________/   OFILE
;
; The computation of a climate index can require 1+ CDO calculations,
; eg. for index ``r99pfreq'' on model E:
;
;     (1) $ cdo selyear,1981/2010 pr(E).nc tmp1.nc
;     (2) $ cdo timpctl,99 tmp1.nc -timmin tmp1.nc -timmax tmp1.nc tmp2.nc
;     (3) $ cdo yearsum -ifthen -gt [ pr(E]).nc tmp2.nc ] pr(E).nc yearsum.nc
;
; To configure such sequence of CDO, with also both global and 
; call specific (3rd in this example) environment variable settings
; (multiple environment variable can be specified separated by semicolon):
;
;    cdo.env = "CDO_HISTORY_INFO=true"
;    cdo.operator.1 = selyear,1981/2010
;    cdo.operator.2 = timpctl,99
;    cdo.operator.3 = yearsum
;    cdo.input.1 = $pr
;    cdo.input.2 = $tmp1 -timmin $tmp1 -timmax $tmp1
;    cdo.input.3 = -ifthen -gt $pr $tmp2 $pr
;    cdo.env.3   = "CDO_TEST=true; CDO_CORESIZE=4GiB"
;
; NOTE: the following keywords shall be used to set input and tmp files:
;   $VAR  ->  input variable, which can either identify:
;                a) a scenario-dependent input set of projections under $ROOT/$VAR/$SCENARIO/*.nc
;                   Eg. $pr, $tas, $tasmin, etc
;                b) a constant input dataset under $ROOT/$VAR/*.nc
;                   Eg. $land_mask --> $ROOT/land_mask/land_mask.nc
;                   NOTE: $ROOT/$VAR/ shall either contain 1 single NetCDF, or in case multiple
;                         NetCDFs are found, one called var.nc shall be present as default choice
;                         otherwise exception is raised.
;   $tmpN ->  the output file of the N-th CDO sub-call (1-based)
;
; ::cdo.operator
; The name of the operator with optional args, just as in CDO syntax (no need to append .N for single CDO calls):
;   cdo.operator.1 = timpctl,95
;   cdo.operator.2 = sub
;
; ::cdo.input
; White-space separated list of input (processed) files (no need to append .N for single CDO calls):
;   cdo.input.1 = $pr        --> ifile = precipitation model
;   cdo.input.2 = $tmin $tmax --> (ifile1 ifile2) = (tmin tmax) models
;   cdo.input.3 = -selyear,2002 $tmp2 -sealyear,2001 $tmp2 --> ifiles are 2001 and 2002 slices of output of 2nd CDO call
;
#cdo.by_year=False TODO also lookout the automatic index ownership in workers (INDICES list)
; Set to True to apply the configured CDO call(s) for each of the input years, and then
; to merge the yearly results onto a single output NetCDF automatically. Pseudo-code:
;   >>> for year in $( cdo showyear $ifile ):
;   ...    compute index on single year -> ofile(year)
;   ... done
;   ... cdo mergetime ofile(*) -> ofile
;   ...
; Indeed this can be convenient for faster index computations:
; (by_year=T) $ N * { cdo -yearmean -addc,273.15 --selyear,$year infile outfile } + mergetime
; (by_year=F) $ cdo -addc,273.15 -yearmean infile outfile    ----->   much more expensive
;
; ############################################################################################
; # CI (from climate_indices Python package) instructions <https://climate-indices.readthedocs.io/en/latest/>
;
; ::ci.index
; The name of the index to be computed by the underling climate-indices package.
; Available indices are: {'pdsi', 'percentage_of_normal', 'pet', 'scpdsi', 'spei', 'spi'}
;
; ::ci.input
; The input variables, expressed as white-space separated list of $-signed names which
; will refer to the sub-folders containing model files.
;    ci.input = $pr $tas   -->  inputs taken from ensembles in the pr/ and tas/ input sub-folder.
;
; ::ci.periodicity
; Time frequency of the input data (possible options are 'monthly' and 'daily')
;   ci.periodicity = monthly  --> both input and output data are aggregated by month
;
; ::ci.scales
; Time step scales over which the indices are computed (the units depend on the specified periodicity)
;   ci.scales = 12 / ci.periodicity = monthly  -> index calculated on 12-months cumulated values
;
; ::ci.calibration
; Range of years calibration for the baseline, written in the form START/END.
;   ci.calibration = 1990/1995  --> calibration done on the data for the years 1990 to 1995 (inclusive)
;
; ::ci.distribution
; Type of distribution used for the indices (valid values are: {gamma, pearson})
;
; ::ci.pet.equation
; Type of equation used for the calculation of the potential evapotranspiration (PET).
; This parameter is also used by the SPEI index.
; Valid values: {thornthwaite,hargreaves}
; ############################################################################################
; NetCDF metdata (from CF convention)
;
; @see http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html
; ############################################################################################
; All nc.<attr> entries will fill the namesake <attr> attribute in the output NetCDF file.
; Commas are not allowed in CDO (\escaping was no more supported from CDO v2xx)
;
; [!] Any configuration entries may be referred with $ prefix ($nc.units).
;
; Also, the following keywords are available from the encoded informatio in input projections files:
;
;    - $varname    --> the name(s) of the input climate variable(s)
;    - $model      --> the name of the model in the ene
;                      (eg. CNRM-CERFACS-CNRM-CM5_CLMcom-CCLM4-8-17_r1i1p1_v1)
;    - $scenario   --> the name of the scenario set for the index (eg. rcp85)
;    - $timeres    --> the time resolution of the input file
;    - $yearstart  --> the time range of the input time-series;
;
; FILE CONTENTS: general info about where data comes from and what has been done to do it:
nc.title=$nc.long_name in Trentino-South Tyrol, IT (1971-2100)
; A short description of what is in the dataset
;
nc.institution=Eurac Research (Bolzano/South Tyrol) - Institute for Earth Observation
; Specifies where the original data was produced.
;
nc.source=The index is based on the bias-adjusted version of the EURO-CORDEX simulation
          $model under the $scenario emissions scenario. The bias-adjusted data has a
          spatial resolution of 1 km and were obtained by applying a Quantile Delta Mapping
          procedure using regional gridded observations as reference.
; The method of production of the original data. If it was model-generated, source should name
; the model and its version, as specifically as could be useful.
;
nc.history=None
; Provides an audit trail for modifications to the original data.
;
nc.references=https://www.eurac.edu/en/institutes-centers/institute-for-earth-observation/projects/fact-climax
; Published or web-based references that describe the data or methods used to produce it.
;
nc.comment=
; Miscellaneous information about the data or methods used to produce it.
;
; --------------------------------------------------------------------------------------------
; DESCRIPTION OF THE DATA: index-specific metadata
nc.long_name=
; Long descriptive name which may, for example, be used for labeling plots.
nc.standard_name=
; The name used to identify the physical quantity. A standard name contains no whitespace and is case sensitive.
; @see http://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html#standard-name
nc.units=
; Unit of measure of the variable (leave empty for dimensionless indices).
nc.frequency=year
; Time step of the output index.
nc.reftime=1970-01-01T00:00:00
; Reference time for the time axis of the output indices. Required format: "<date>T<time>".
; ############################################################################################

[amt]
nc.long_name   = annual mean temperature
nc.comment     = Mean annual temperature
nc.units       = Celsius
cdo.operator   = yearmean
cdo.input      = $tas
; > cdo yearmean $tas ofile
; TET: ~20s

[jja_mt]
nc.long_name   = mean summer temperature
nc.comment     = Mean temperature over Summer (JJA) for each year
nc.units       = Celsius
cdo.operator   = seasmean
cdo.input      = -select,season=JJA $tas
; > cdo seasmean -select,season=JJA $tas ofile
; TET: ~10s

[djf_mt]
nc.long_name   = mean winter temperature
nc.comment     = Mean temperature over Winter (DJF) for each year
nc.units       = Celsius
cdo.operator   = seasmean
cdo.input      = -select,season=DJF $tas
; > cdo seasmean -select,season=DJF $tas ofile
; TET: ~10s

[mam_mt]
nc.long_name   = mean spring temperature
nc.comment     = Mean temperature over Spring (MAM) for each year
nc.units       = Celsius
cdo.operator   = seasmean
cdo.input      = -select,season=MAM $tas
; > cdo seasmean -select,season=MAM $tas ofile
; TET: ~10s

[son_mt]
nc.long_name   = mean autumn temperature
nc.comment     = Mean temperature over Autumn (SON) for each year
nc.units       = Celsius
cdo.operator   = seasmean
cdo.input      = -select,season=SON $tas
; > cdo seasmean -select,season=SON $tas ofile
; TET: ~10s

[gsl]
nc.long_name   = growing season length
nc.comment     = Number of days between first occurrence of at least 6 consecutive days with tas > 5 degrees (Celsius)
                 and first occurrence after 1st July of at least 6 consecutive days with tas lower than 5 degrees (Celsius)
nc.units       = day
cdo.operator   = delcode,-2
cdo.input      = -shifttime,"-11months" -shifttime,"-30days" -eca_gsl,6,5 -addc,273.15 $tas $land_mask
; land_mask=$( cdo gtc,-6000 -selday,1 -selmonth,1 -selyear,1971 $pr ofile )
; > cdo delcode,-2 -shifttime,"-11months" -shifttime,"-30days" -eca_gsl,6,5 [ -addc,273.15 $tas $land_mask ] ofile
; TET: ~1m 10s
; NOTE: 'eca_gsl' produces 2 output variables: 'delcode' is used afterwards to retain just the first var

[su]
nc.long_name   = summer days
nc.comment     = Number of days where tasmax > 25 degrees (Celsius)
nc.units       = day
cdo.operator   = shifttime,"-11months"
cdo.input      = -shifttime,"-30days" -eca_su,25,"freq=year" -addc,273.15 $tasmax
; > cdo shifttime,"-11months" -shifttime,"-30days" -eca_su,20,"freq=year" -addc,273.15 $tasmax ofile
; TET: ~1m

[hwd]
nc.long_name   = heatwave days
nc.comment     = Number of days in heatwave periods for each year: at least 3 consecutive
                 days with tasmax > the 99-th percentile of May-Sep in the baseline
cdo.operator.1 = selmonth,5/9
cdo.operator.2 = timpctl,99
cdo.operator.3 = shifttime,-1day
cdo.operator.4 = ifthen
cdo.input.1    = -selyear,1981/2010 $tasmax
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -expr,"tasmax=-tasmax" [ -deltat [ -setmisstoc,0 -consecsum [ -gt [ $tasmax $tmp2 ] ] ] ]
cdo.input.4    = $land_mask -yearsum [ -setmisstoc,0 [ -ifthen [ -gec,3 [ $tmp3 ] $tmp3 ] ] ]
; > cdo selmonth,5/9 -selyear,1981/2010 $tasmax base.nc
; > cdo timpctl,99 base.nc -timmin base.nc -timmax base.nc pctl99.nc
; > cdo shifttime,-1day [ -expr,"tasmax=-tasmax" [ -deltat [ -setmisstoc,0 -consects [ -gt [ $tasmax pctl99.nc ] ] ] ] ] deltat.nc
; > cdo ifthen [ $land_mask -yearsum [ -setmisstoc,0 [ -ifthen [ -gec,3 [ deltat.nc ] deltat.nc ] ] ] ] ofile
; TET: ~1m 15s

[fd]
nc.long_name   = frost days
nc.comment     = Number of days with tasmin < 0 degrees (Celsius) for each year
nc.units       = day
cdo.operator   = shifttime,"-11months"
cdo.input      = -shifttime,"-30days" -eca_fd,"freq=year" -addc,273.15 $tasmin
; > cdo shifttime,"-11months" -shifttime,"-30days" -eca_fd,"freq=year" -addc,273.15 $tasmin ofile
; TET: ~1m 10s

[tr]
nc.long_name   = tropical nights
nc.comment     = Number of days with tasmin >= 20 degrees (Celsius) for each year
nc.units       = day
cdo.operator   = shifttime,"-11months"
cdo.input      = -shifttime,"-30days" -eca_tr,19,"freq=year" -addc,273.15 $tasmin
; > cdo shifttime,"-11months" -shifttime,"-30days" -eca_tr,19,"freq=year" -addc,273.15 $tasmin ofile
; TET: ~1m

#[dtr]
#nc.long_name   = daily temperature range
#nc.comment     = Yearly mean / max of daily temperature range
#nc.units       = Celsius
#cdo.operator   = yearmax / yearmean ?
#cdo.input      = -sub $tasmax $tasmin
#; > cdo ... sub $tasmax $tasmin ofile
; TET: ~

[apr]
nc.long_name   = annual total precipitation
nc.comment     = Total sum of precipitation for each year
nc.units       = mm
cdo.operator   = yearsum
cdo.input      = $pr
; > cdo yearsum $pr ofile
; TET: ~30s

[djf_pr]
nc.long_name   = winter total precipitation
nc.comment     = Total sum of precipitation over Winter (DJF) for each year
nc.units       = mm
cdo.operator   = seassum
cdo.input      = -select,season=DJF $pr
; > cdo seassum -select,season=DJF $pr ofile
; TET: ~10s

[mam_pr]
nc.long_name   = spring total precipitation
nc.comment     = Total sum of precipitation over Spring (MAM) for each year
nc.units       = mm
cdo.operator   = seassum
cdo.input      = -select,season=MAM $pr
; > cdo seassum -select,season=MAM $pr ofile
; TET: ~10s

[jja_pr]
nc.long_name   = summer total precipitation
nc.comment     = Total sum of precipitation over Summer (JJA) for each year
nc.units       = mm
cdo.operator   = seassum
cdo.input      = -select,season=JJA $pr
; > cdo seassum -select,season=JJA $pr ofile
; TET: ~10s

[son_pr]
nc.long_name   = autumn total precipitation
nc.comment     = Total sum of precipitation over Autumn (SON) for each year
nc.units       = mm
cdo.operator   = seassum
cdo.input      = -select,season=SON $pr
; > cdo seassum -select,season=SON $pr ofile
; TET: ~10s

[ondjfm_pr]
nc.long_name   = 6-month winter total precipitation
nc.comment     = 6-month total sum of precipitation in Winter (Oct-Mar) for each year
nc.units       = mm
cdo.operator   = timselsum,6,9
cdo.input      = -monsum -select,season=ONDJFM $pr
; > cdo timselsum,6,9 -monsum -select,season=ONDJFM $pr ofile
; TET: ~10s

[amjjas_pr]
nc.long_name   = 6-month summer total precipitation
nc.comment     = 6-month total sum of precipitation in Summer (Apr-Sep) for each year
nc.units       = mm
cdo.operator   = yearsum
cdo.input      = -select,season=AMJJAS $pr
; > cdo yearsum -select,season=AMJJAS $pr ofile
; TET: ~10s

[wmpr]
nc.long_name   = (wet days) mean precipitation
nc.comment     = Mean total precipitation of wet days (> 1 mm) for each year
nc.units       = mm
cdo.operator   = ifthen
cdo.input      = $land_mask -yearavg -setmisstoc,0 [ -ifthen -gtc,1 [ $pr ] $pr ]
; > cdo ifthen $land_mask -yearavg -setmisstoc,0 [ -ifthen -gtc,1 [ $pr ] $pr ]
; TET: ~35s

[cdd]
nc.long_name   = consecutive dry days
nc.comment     = The maximum duration of consecutive dry days (precipitation <= 1 mm) for each year
nc.units       = day
cdo.operator   = delcode,-2
cdo.input      = -shifttime,"-11months" -shifttime,"-30days" -eca_cdd,1,5,"freq=year" $pr
; > cdo delcode,-2 -shifttime,"-11months" -shifttime,"-30days" -eca_cdd,1,5,"freq=year" $pr ofile
; TET: ~1m
; NOTE: 'eca_cdd' produces 2 output variables: 'delcode' is used afterwards to retain just the first var

[dd]
nc.long_name   = dry days
nc.comment     = The total number of dry days (precipitation <= 1 mm) for each year
nc.units       = day
cdo.operator   = yearsum
cdo.input      = -ltc,1 $pr
; > cdo yearsum -ltc,1 $pr ofile
; TET: ~45s

[rx1day]
nc.long_name   = 1-day maximum precipitation
nc.comment     = Highest 1-day precipitation amount of the year
nc.units       = mm
cdo.operator.1 = eca_rx1day,"freq=month"
cdo.operator.2 = shifttime,"-30days"
cdo.input.1      = $pr
cdo.input.2      = -merge [ -setname,"pr" [ -yearmax $tmp1 ] -expr,"month=idx+1" [ -setname,"idx" -yearmaxidx $tmp1 ] ]
; > cdo eca_rx1day,"freq=month" $pr rx1day.nc
; > cdo shifttime,"-30days" -merge [ -setname,"pr" [ -yearmax rx1day.nc ] -expr,"month=idx+1" -setname,"idx" [ -yearmaxidx rx1day.nc ] ] ofile
; TET: ~30s

[rx3day]
nc.long_name   = 3-day maximum precipitation
nc.comment     = Highest three day precipitation amount of the year
nc.units       = mm
cdo.operator.1 = eca_rx1day,"freq=month"
cdo.operator.2 = shifttime,"-30days"
cdo.input.1      = -runsum,3 $pr
cdo.input.2      = -merge [ -setname,"pr" [ -yearmax $tmp1 ] -expr,"month=idx+1" [ -setname,"idx" -yearmaxidx $tmp1 ] ]
; > cdo eca_rx1day,"freq=month" -runsum,3 $pr rx3day.nc
; > cdo shifttime,"-30days" -merge [ -setname,"pr" [ -yearmax rx3day.nc ] -expr,"month=idx+1" -setname,"idx" [ -yearmaxidx rx3day.nc ] ] ofile
; TET: ~40s

[rx5day]
nc.long_name   = 5-day maximum precipitation
nc.comment     = Highest 5-day precipitation amount of the year
nc.units       = mm
cdo.operator.1 = eca_rx1day,"freq=month"
cdo.operator.2 = shifttime,"-30days"
cdo.input.1      = -runsum,5 $pr
cdo.input.2      = -merge [ -setname,"pr" [ -yearmax $tmp1 ] -expr,"month=idx+1" [ -setname,"idx" -yearmaxidx $tmp1 ] ]
; > cdo eca_rx1day,"freq=month" -runsum,5 $pr rx5day.nc
; > cdo shifttime,"-30days" -merge [ -setname,"pr" [ -yearmax rx5day.nc ] -expr,'month=idx+1' -setname,"idx" [ -yearmaxidx rx5day.nc ] ] ofile
; TET: ~40s

[r99ptot_all]
nc.long_name   = very extreme precipitation total (99-th all days)
nc.comment     = Sum of daily precipitation > the 99-th percentile in the baseline
                 considering all days
nc.units       = mm
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = timpctl,99
cdo.operator.3 = yearsum
cdo.input.1    = $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -ifthen [ $land_mask -setmisstoc,0 [ -ifthen -gt [ $pr $tmp2 ] $pr ] ]
; > cdo selyear,1981/2010 $pr base.nc
; > cdo timpctl,99 base.nc -timmin base.nc -timmax base.nc pctl99.nc
; > cdo yearsum -setmisstoc,0 [ -ifthen -gt [ $pr pctl99.nc ] $pr ] ofile
; TET: ~1m 10s

[r99ptot]
nc.long_name   = very extreme precipitation total (99-th wet days)
nc.comment     = Sum of daily precipitation > the 99-th percentile in the baseline
                 considering wet days only (pr > 1 mm)
nc.units       = mm
cdo.operator.1 = expr,"pr=(( pr > 1 )) ? pr : missval(pr)"
cdo.operator.2 = timpctl,99
cdo.operator.3 = yearsum
cdo.input.1    = -selyear,1981/2010 $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -ifthen [ $land_mask -setmisstoc,0 [ -ifthen -gt [ $pr $tmp2 ] $pr ] ]
; > cdo expr,"pr=(( pr > 1 )) ? pr : missval(pr)" [ -selyear,1981/2010 $pr ] base.nc
; > cdo timpctl,99 base.nc -timmin base.nc -timmax base.nc pctl99.nc
; > cdo yearsum -setmisstoc,0 [ -ifthen -gt [ $pr pctl99.nc ] $pr ] ofile
; TET: ~1m 30s

[r95ptot_all]
nc.long_name   = extreme precipitation total (95-th all days)
nc.comment     = Sum of daily precipitation > the 95-th percentile in the baseline
                 considering all days
nc.units       = mm
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = timpctl,95
cdo.operator.3 = yearsum
cdo.input.1    = $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -ifthen [ $land_mask -setmisstoc,0 [ -ifthen -gt [ $pr $tmp2 ] $pr ] ]
; > cdo selyear,1981/2010 $pr base.nc
; > cdo timpctl,95 base.nc -timmin base.nc -timmax base.nc pctl95.nc
; > cdo yearsum -setmisstoc,0 [ -ifthen -gt [ $pr pctl95.nc ] $pr ] ofile
; TET: ~1m 10s

[r95ptot]
nc.long_name   = extreme precipitation total (95-th wet days)
nc.comment     = Sum of daily precipitation > the 95-th percentile in the baseline
                 considering wet days only (pr > 1 mm)
nc.units       = mm
cdo.operator.1 = expr,"pr=(( pr > 1 )) ? pr : missval(pr)"
cdo.operator.2 = timpctl,95
cdo.operator.3 = yearsum
cdo.input.1    = -selyear,1981/2010 $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -ifthen [ $land_mask -setmisstoc,0 [ -ifthen -gt [ $pr $tmp2 ] $pr ] ]
; > cdo expr,"pr=(( pr > 1 )) ? pr : missval(pr)" [ -selyear,1981/2010 $pr ] base.nc
; > cdo timpctl,95 base.nc -timmin base.nc -timmax base.nc pctl95.nc
; > cdo yearsum -setmisstoc,0 [ -ifthen -gt [ $pr pctl95.nc ] $pr ] ofile
; TET: ~1m 30s

[r99pfreq_all]
nc.long_name   = very extreme precipitation days (99-th all days)
nc.comment     = Number of days with precipitation > the 99-th percentile in the baseline
                 considering all days
nc.units       = day
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = timpctl,99
cdo.operator.3 = yearsum
cdo.input.1    = $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -gt [ $pr $tmp2 ]
; > cdo selyear,1981/2010 $pr base.nc
; > cdo timpctl,99 base.nc -timmin base.nc -timmax base.nc pctl99.nc
; > cdo yearsum -gt [ $pr pctl99.nc ] ofile
; TET: ~1m 10s

[r99pfreq]
nc.long_name   = very extreme precipitation days (99-th wet days)
nc.comment     = Number of days with precipitation > the 99-th percentile in the baseline
                 considering wet days only (pr > 1 mm)
nc.units       = day
cdo.operator.1 = expr,"pr=(( pr > 1 )) ? pr : missval(pr)"
cdo.operator.2 = timpctl,99
cdo.operator.3 = yearsum
cdo.input.1    = -selyear,1981/2010 $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -gt [ $pr $tmp2 ]
; > cdo expr,"pr=(( pr > 1 )) ? pr : missval(pr)" [ -selyear,1981/2010 $pr ] base.nc
; > cdo timpctl,99 base.nc -timmin base.nc -timmax base.nc pctl99.nc
; > cdo yearsum -gt [ $pr pctl99.nc ] ofile
; TET: ~1m 20s

[r95pfreq_all]
nc.long_name   = extreme precipitation days (95-th all days)
nc.comment     = Number of days where precipitation > the 95-th percentile in the baseline
                 considering all days
nc.units       = day
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = timpctl,95
cdo.operator.3 = yearsum
cdo.input.1    = $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -gt [ $pr $tmp2 ]
; > cdo selyear,1981/2010 $pr base.nc
; > cdo timpctl,95 base.nc -timmin base.nc -timmax base.nc pctl95.nc
; > cdo yearsum -gt [ $pr pctl95.nc ] ofile
; TET: ~1m 10s

[r95pfreq]
nc.long_name   = extreme precipitation days (95-th wet days)
nc.comment     = Number of days where precipitation > the 95-th percentile in the baseline
                 considering wet days only (pr > 1 mm)
nc.units       = day
cdo.operator.1 = expr,"pr=(( pr > 1 )) ? pr : missval(pr)"
cdo.operator.2 = timpctl,95
cdo.operator.3 = yearsum
cdo.input.1    = -selyear,1981/2010 $pr
cdo.input.2    = $tmp1 -timmin $tmp1 -timmax $tmp1
cdo.input.3    = -gt [ $pr $tmp2 ]
; > cdo expr,"pr=(( pr > 1 )) ? pr : missval(pr)" [ -selyear,1981/2010 $pr ] base.nc
; > cdo timpctl,95 base.nc -timmin base.nc -timmax base.nc pctl95.nc
; > cdo yearsum -gt [ $pr pctl95.nc ] ofile
; TET: ~1m 20s

[tx90p]
nc.long_name   = warm days
nc.comment     = Number of days in a year with tasmax > the 90-th percentile
nc.units       = day
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = ydrunpctl,90,5
cdo.operator.3 = yearsum
cdo.input.1    = $tasmax
cdo.input.2    = $tmp1 -ydrunmin,5 $tmp1 -ydrunmax,5 $tmp1
cdo.input.3    = -expr,"tasmax=(( tasmax > 0 )) ? 1 : 0" -ydaysub [ $tasmax $tmp2 ]
; > cdo selyear,1981/2010 $tasmax base.nc
; > cdo ydrunpctl,90,5 base.nc -ydrunmin,5 base.nc -ydrunmax,5 base.nc pctl90.nc
; > cdo yearsum -expr,"tasmax=(( tasmax > 0 )) ? 1 : 0" -ydaysub [ $tasmax pctl90.nc ] ofile
; TET: ~

[tn90p]
nc.long_name   = warm nights
nc.comment     = Number of days in a year with tasmin > the 90-th percentile
nc.units       = day
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = ydrunpctl,90,5
cdo.operator.3 = yearsum
cdo.input.1    = $tasmin
cdo.input.2    = $tmp1 -ydrunmin,5 $tmp1 -ydrunmax,5 $tmp1
cdo.input.3    = -expr,"tasmin=(( tasmin > 0 )) ? 1 : 0" -ydaysub [ $tasmin $tmp2 ]
; > cdo selyear,1981/2010 $tasmin base.nc
; > cdo ydrunpctl,90,5 base.nc -ydrunmin,5 base.nc -ydrunmax,5 base.nc pctl90.nc
; > cdo yearsum -expr,"tasmin=(( tasmin > 0 )) ? 1 : 0" -ydaysub [ $tasmin pctl90.nc ] ofile
; TET: ~1m 20s

[wsdi]
nc.long_name   = Warm spell duration index
nc.comment     = Annual count of days with at least 6 consecutive days with tasmax > the 90-th percentile
nc.units       = day
cdo.operator.1 = selyear,1981/2010
cdo.operator.2 = ydrunpctl,90,5
cdo.operator.3 = delcode,-2
cdo.input.1    = $tasmax
cdo.input.2    = $tmp1 -ydrunmin,5 $tmp1 -ydrunmax,5 $tmp1
cdo.input.3    = -etccdi_wsdi,6,"freq=year" [ $tasmax $tmp2 ]
; > cdo selyear,1981/2010 $tasmax base.nc
; > cdo ydrunpctl,90,5 base.nc -ydrunmin,5 base.nc -ydrunmax,5 base.nc pctl90.nc
; > cdo delcode,-2 [ -etccdi_wsdi,6,"freq=year" [ $tasmax pctl90.nc ] ] ofile
; TET: ~1m 30s
; NOTE: 'etccdi_wsdi' produces 2 output variables: 'delcode' is used afterwards to retain just the first var

[cool_dd]
nc.long_name   = Cooling Degree Day
nc.comment     = A measure of the weather-related impacts on the net energy demand for cooling building;
                 it is calculated as the cumulated daily deviations above a temperature threshold
                 (22 °C) from April to September
nc.units       = Celsius
cdo.operator   = yearsum
cdo.input      = -expr,'cool_dd = (( tasmax <= 22.0 )) ? 0 : ( (( tas <= 22.0 )) ? ((tasmax-22.0)/4) : ( (( tasmin <= 22.0 )) ? (((tasmax-22.0)/2) - ((22.0-tasmin)/4)) : (tas-22.0) ))' [ -merge [ -selmonth,4/9 $tasmin -selmonth,4/9 $tas -selmonth,4/9 $tasmax ] ]
; > cdo yearsum [ -expr,"cool_dd = (( tasmax <= $Tb )) ? 0 \
;                                 : ( (( tas <= $Tb )) ?  ((tasmax-$Tb)/4) \
;                              : ( (( tasmin <= $Tb )) ? (((tasmax-$Tb)/2) - (($Tb-tasmin)/4)) \
;                                                      :      (tas-$Tb) ))" \
;             [ -merge [ -selmonth,4/9 $tasmin -selmonth,4/9 $tas -selmonth,4/9 $tasmax ] ] ofile
; TET: ~1m 20s

[grow_dd]
nc.long_name   = Growing Degree Day
nc.comment     = A measure of the accumulated heat available for vegetation growth;
                 it is calculated as the accumulated sum from March to October of the
                 daily mean temperature exceedances of 5.5 degrees (Celsius)
nc.units       = Celsius
cdo.operator   = yearsum
cdo.input      = -expr,'grow_dd = (( tas >= 5.5 )) ? (tas-5.5) : 0' [ -selmonth,3/10 $tas ]
; > cdo yearsum  -expr,"grow_dd = (( tas >= $Tb )) ? (tas-$Tb) : 0" [ -selmonth,3/10 $tas ] ofile
; TET: ~30s

[heat_dd]
nc.long_name   = Heating Degree Day
nc.comment     = A measure of the weather-related impacts on the net energy demand for
                 heating building; it is calculated as the cumulated daily deviations below
                 a temperature threshold (15.5 °C) from October to March
nc.units       = Celsius
cdo.operator   = shifttime,+3months
cdo.input      = -yearsum -shifttime,-3months [ -expr,'heat_dd = (( tasmax <= 15.5 )) ? (15.5-tas) : ( (( tas <= 15.5 )) ? (((15.5-tasmin)/2) - ((tasmax-15.5)/4)) : ( (( tasmin <= 15.5 )) ? ((15.5-tasmin)/4) : 0 ))' [ -select,season=ONDJFM [ -merge [ $tasmin $tas $tasmax ] ] ] ]
; > cdo shifttime,+3months -yearsum -shifttime,-3months \
;                        [ -expr,"heat_dd = (( tasmax <= $Tb )) ?   ($Tb-tas) \
;                                          : ( (( tas <= $Tb )) ? ((($Tb-tasmin)/2) - ((tasmax-$Tb)/4)) \
;                                       : ( (( tasmin <= $Tb )) ?  (($Tb-tasmin)/4) \
;                                                               : 0 ))" \
;             [ -select,season=ONDJFM [ -merge [ $tasmin $tas $tasmax ] ] ] ] ofile
; TET: ~1m 20s

[spi12]
nc.long_name   = Standardized Precipitation Index
nc.comment     = Standardized monthly anomalies of precipitation for 12-month accumulated
                 values with respect to the baseline
nc.units       =
nc.frequency   = mon
ci.index       = spi
ci.input       = $pr
ci.periodicity = monthly
ci.scales      = 12
ci.calibration = 1981/2010
ci.distribution= gamma
; TET: ~

[spei12]
nc.long_name   = Standardized Precipitation Evapotranspiration Index
nc.comment     = Standardized monthly anomalies of the climatic water balance for 12-month
                 accumulated values
nc.units       =
nc.frequency   = mon
ci.index       = spei
ci.input       = $pr $tas
ci.periodicity = monthly
ci.scales      = 12
ci.calibration = 1981/2010
ci.distribution= gamma
; TET: ~

