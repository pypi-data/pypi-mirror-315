from collections.abc import Sequence
import dspsim._framework


class AsyncSync:
    def __init__(self, clk: dspsim._framework.Signal8, d: dspsim._framework.Signal32, q: dspsim._framework.Signal32) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    SYNC_STAGES: int = ...
    """(arg: object, /) -> int"""

    PIPELINE_STAGES: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class AsyncSync8:
    def __init__(self, clk: dspsim._framework.Signal8, d: dspsim._framework.Signal8, q: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    SYNC_STAGES: int = ...
    """(arg: object, /) -> int"""

    PIPELINE_STAGES: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class Combiner:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, s_axis_tdata: Sequence[dspsim._framework.Signal32], s_axis_tvalid: Sequence[dspsim._framework.Signal8], s_axis_tready: Sequence[dspsim._framework.Signal8], m_axis_tdata: Sequence[dspsim._framework.Signal32], m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    N: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class FifoAsync:
    def __init__(self, clka: dspsim._framework.Signal8, rsta: dspsim._framework.Signal8, s_axis_tdata: dspsim._framework.Signal32, s_axis_tvalid: dspsim._framework.Signal8, s_axis_tready: dspsim._framework.Signal8, s_axis_tid: dspsim._framework.Signal8, clkb: dspsim._framework.Signal8, rstb: dspsim._framework.Signal8, m_axis_tdata: dspsim._framework.Signal32, m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8, m_axis_tid: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    N: int = ...
    """(arg: object, /) -> int"""

    TIDW: int = ...
    """(arg: object, /) -> int"""

    INPUT_BUFFER: int = ...
    """(arg: object, /) -> int"""

    SYNC_STAGES: int = ...
    """(arg: object, /) -> int"""

    PIPELINE_STAGES: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class FifoAsync8:
    def __init__(self, clka: dspsim._framework.Signal8, rsta: dspsim._framework.Signal8, s_axis_tdata: dspsim._framework.Signal8, s_axis_tvalid: dspsim._framework.Signal8, s_axis_tready: dspsim._framework.Signal8, s_axis_tid: dspsim._framework.Signal8, clkb: dspsim._framework.Signal8, rstb: dspsim._framework.Signal8, m_axis_tdata: dspsim._framework.Signal8, m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8, m_axis_tid: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    N: int = ...
    """(arg: object, /) -> int"""

    TIDW: int = ...
    """(arg: object, /) -> int"""

    INPUT_BUFFER: int = ...
    """(arg: object, /) -> int"""

    SYNC_STAGES: int = ...
    """(arg: object, /) -> int"""

    PIPELINE_STAGES: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class FifoSync:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, s_axis_tdata: dspsim._framework.Signal32, s_axis_tvalid: dspsim._framework.Signal8, s_axis_tready: dspsim._framework.Signal8, s_axis_tid: dspsim._framework.Signal8, m_axis_tdata: dspsim._framework.Signal32, m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8, m_axis_tid: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    N: int = ...
    """(arg: object, /) -> int"""

    TIDW: int = ...
    """(arg: object, /) -> int"""

    USE_INPUT_BUFFER: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class Foo:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, x: dspsim._framework.Signal32, y: dspsim._framework.Signal32) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    AW: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class Gain:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, s_axis_tdata: dspsim._framework.Signal32, s_axis_tvalid: dspsim._framework.Signal8, s_axis_tready: dspsim._framework.Signal8, m_axis_tdata: dspsim._framework.Signal32, m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8, gain: dspsim._framework.Signal32) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    COEFW: int = ...
    """(arg: object, /) -> int"""

    COEFQ: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class I2SClkGen:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, lrclk: dspsim._framework.Signal8, sclk: dspsim._framework.Signal8) -> None: ...

    MCLK_LRCLK: int = ...
    """(arg: object, /) -> int"""

    MCLK_SCLK: int = ...
    """(arg: object, /) -> int"""

    LRCLK_INIT: int = ...
    """(arg: object, /) -> int"""

    SCLK_INIT: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class I2SRx:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, m_axis_tdata: dspsim._framework.Signal32, m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8, m_axis_tid: dspsim._framework.Signal8, lrclk: dspsim._framework.Signal8, sclk: dspsim._framework.Signal8, sdi: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class I2STx:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, s_axis_tdata: dspsim._framework.Signal32, s_axis_tvalid: dspsim._framework.Signal8, s_axis_tready: dspsim._framework.Signal8, s_axis_tid: dspsim._framework.Signal8, lrclk: dspsim._framework.Signal8, sclk: dspsim._framework.Signal8, sdo: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    USE_INPUT_BUFFER: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class Skid:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, s_axis_tdata: dspsim._framework.Signal32, s_axis_tvalid: dspsim._framework.Signal8, s_axis_tready: dspsim._framework.Signal8, m_axis_tdata: dspsim._framework.Signal32, m_axis_tvalid: dspsim._framework.Signal8, m_axis_tready: dspsim._framework.Signal8) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class SomeModel:
    def __init__(self, clk: dspsim._framework.Signal8, rst: dspsim._framework.Signal8, x: dspsim._framework.Signal32, y: dspsim._framework.Signal32, c: Sequence[dspsim._framework.Signal32], d: Sequence[Sequence[dspsim._framework.Signal32]], e: Sequence[Sequence[dspsim._framework.Signal32]]) -> None: ...

    DW: int = ...
    """(arg: object, /) -> int"""

    COEFW: int = ...
    """(arg: object, /) -> int"""

    AW: int = ...
    """(arg: object, /) -> int"""

    X: int = ...
    """(arg: object, /) -> int"""

    BB: int = ...
    """(arg: object, /) -> int"""

    FP: float = ...
    """(arg: object, /) -> float"""

    SP: str = ...
    """(arg: object, /) -> str"""

    TRICK: str = ...
    """(arg: object, /) -> str"""

    IARR: list[int] = ...
    """(arg: object, /) -> list[int]"""

    SARR: list[str] = ...
    """(arg: object, /) -> list[str]"""

    IMAT: list[list[int]] = ...
    """(arg: object, /) -> list[list[int]]"""

    SMAT: list[list[list[str]]] = ...
    """(arg: object, /) -> list[list[list[str]]]"""

    NC: int = ...
    """(arg: object, /) -> int"""

    ND: int = ...
    """(arg: object, /) -> int"""

    MD: int = ...
    """(arg: object, /) -> int"""

    NE: int = ...
    """(arg: object, /) -> int"""

    ME: int = ...
    """(arg: object, /) -> int"""

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

class X:
    def __init__(self) -> None: ...

    port_info: str = ...
    """(arg: object, /) -> str"""

    def trace(self, trace_path: str, levels: int = 99, options: int = 0) -> None: ...

def global_context() -> dspsim._framework.ContextFactory: ...

def link_context(global_context: dspsim._framework.ContextFactory) -> None: ...
