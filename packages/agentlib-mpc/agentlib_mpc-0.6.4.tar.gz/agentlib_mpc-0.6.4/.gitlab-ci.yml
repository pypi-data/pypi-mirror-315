stages:
 - test
 - doc
 - code_quality
 - build
 - release
 - deploy

variables:
  EXCLUDE_PYTHON: 37, 38
  COVERAGE_TYPE: "NotDymola"
  PAGES_BRANCH: main
  PYTHON_VERSION: "registry.git.rwth-aachen.de/ebc/ebc_all/gitlab_ci/templates:python_3.11"
  PYTHON_VERSION_NAME: "__version__"
  PYTHON_PACKAGE_NAME: "agentlib_mpc"
  TEST_PATH: tests
  TEST_ENGINE: "PYTEST"
  GIT_REPO: "RWTH-EBC/AgentLib-MPC"
  EXTRA_REQUIREMENTS_PIP: "[full]"
  INSTALL_REQUIREMENTS_TXT: "false"




include:
  #pylint
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/code-quality/pylint.gitlab-ci.yml'
  #sphinxdoc
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/doc/sphinxdoc.gitlab-ci.yml'
  # pages
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'pages/gl-pages.gitlab-ci.yml'
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'pages/gh-pages.gitlab-ci.yml'
  # pytest & coverage
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/tests/tests.gitlab-ci.yml'
    # Checks the build for pypi
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/build/build.gitlab-ci.yml'
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
    # PyPI release
  - project: 'EBC/EBC_all/gitlab_ci/templates'
    file: 'python/pypi-release/release.gitlab-ci.yml'
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml


run_example:
  image: registry.git.rwth-aachen.de/ebc/ebc_all/gitlab_ci/templates:python_3.9
  stage: test
  before_script:
    - pip install --upgrade pip
    - test -e requirements.txt && pip install -r requirements.txt || echo no requirements to install
    - test -e setup.py && pip install -e . || echo no setup.py found
  script:
    - python ci/test_examples.py
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - allow_failure: false
