# Default TLS configuration
# We mostly use "negate" interface so that default TL config
# never throws warnings if some TLs are not available

# Currently compiled tls: ucp,cuda,nccl,shm,sharp,mlx5

# Default for CL_BASIC: all except sharp,nccl.
# shm/cuda will silently disqualify themself for multinode teams
# but will be used on a single node
OMPI_UCC_CL_BASIC_TLS=^sharp,nccl,mlx5

# Defaults for CL_HIER: set per SBGP
# Sharp should be explicitly enabled
OMPI_UCC_CL_HIER_NODE_SBGP_TLS=^sharp,nccl,mlx5

# shm,cuda are also disabled for NODE_LEADERS and NET
OMPI_UCC_CL_HIER_NODE_LEADERS_SBGP_TLS=^sharp,nccl,shm,cuda,mlx5
OMPI_UCC_CL_HIER_NET_SBGP_TLS=^sharp,nccl,shm,cuda,mlx5

# FULL_SBGP is currently only used for hierarchical alltoall
# with ucp sbgp on top
OMPI_UCC_CL_HIER_FULL_SBGP_TLS=ucp

OMPI_UCC_CLS=basic,hier

# Disable allgatherv because ucc has only "ring" algo and
# perf with "ompi/tuned" is better than ucc
# allgatherv is disabled at UCC level, it's not possible to control allgatherv using coll_ucc_cts of ompi
OMPI_UCC_TUNE=allgatherv:0

# Don't use CL HIER for CUDA collectives in OMPI
OMPI_UCC_CL_HIER_TUNE=alltoallv:0#alltoall:0#allreduce:cuda,cuda_managed:0#bcast:cuda,cuda_managed:0

# Don't use TL MLX5 for CUDA collectives
UCC_TL_MLX5_TUNE=cuda,cuda_managed:0

# Tuning sections, currently only supports TL/UCP
#Intel Broadwell:
[vendor=intel model=broadwell team_size=28 ppn=28 nnodes=1]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=7
UCC_TL_UCP_TUNE=allreduce:0-4k:@0#allreduce:4k-inf:@1

[vendor=intel model=broadwell team_size=2 ppn=1 nnodes=2]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=2
UCC_TL_UCP_TUNE=allreduce:0-128k:@0#allreduce:128k-inf:@1

[vendor=intel model=broadwell team_size=4 ppn=1 nnodes=4]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=4
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=4
UCC_TL_UCP_TUNE=allreduce:0-16k:@0#allreduce:16k-inf:@1

[vendor=intel model=broadwell team_size=8 ppn=1 nnodes=8]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=8
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=8
UCC_TL_UCP_TUNE=allreduce:0-4k:@0#allreduce:4k-inf:@1

#Intel Skylake:
[vendor=intel model=skylake team_size=40 ppn=40 nnodes=1]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=0-128k:host:2,128k-inf:host:8
UCC_TL_UCP_TUNE=allreduce:0-2k:@0#allreduce:2k-inf:@1

[vendor=intel model=skylake team_size=2 ppn=1 nnodes=2]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=2
UCC_TL_UCP_TUNE=allreduce:0-16k:@0#allreduce:16k-inf:@1

[vendor=intel model=skylake team_size=4 ppn=1 nnodes=4]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=4
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=4
UCC_TL_UCP_TUNE=allreduce:0-8k:@0#allreduce:8k-inf:@1

[vendor=intel model=skylake team_size=8 ppn=1 nnodes=8]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=0-8k:host:8,8k-inf:host:2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=8
UCC_TL_UCP_TUNE=allreduce:0-4k:@0#allreduce:4k-inf:@1

[vendor=intel model=skylake team_size=32 ppn=1 nnodes=32]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=0-8k:host:8,8k-inf:host:2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=8
UCC_TL_UCP_TUNE=allreduce:0-2k:@0#allreduce:2k-inf:@1

#Amd Rome:
[vendor=amd model=rome team_size=128 ppn=128 nnodes=1]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=0-64k:host:4,64k-inf:host:8
UCC_TL_UCP_TUNE=allreduce:0-1k:@0#allreduce:1k-inf:@1

[vendor=amd model=rome team_size=2 ppn=1 nnodes=2]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=2
UCC_TL_UCP_TUNE=allreduce:0-256k:@0#allreduce:256k-inf:@1

[vendor=amd model=rome team_size=4 ppn=1 nnodes=4]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=4
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=4
UCC_TL_UCP_TUNE=allreduce:0-16k:@0#allreduce:16k-inf:@1

[vendor=amd model=rome team_size=8 ppn=1 nnodes=8]
UCC_TL_UCP_ALLREDUCE_KN_RADIX=0-8k:host:8,8k-inf:host:2
UCC_TL_UCP_ALLREDUCE_SRA_KN_RADIX=8
UCC_TL_UCP_TUNE=allreduce:0-8k:@0#allreduce:8k-inf:@1
