import Kratos
import Kratos.TimeDiscretization
from typing import overload

class AffineTransform:
    @overload
    def __init__(self, arg0: Kratos.Array3, arg1: float, arg2: Kratos.Array3, arg3: Kratos.Array3) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.Array3, arg1: Kratos.Array3, arg2: Kratos.Array3) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.Quaternion, arg1: Kratos.Array3, arg2: Kratos.Array3) -> None: ...
    def Apply(self, arg0: Kratos.Array3) -> Kratos.Array3: ...
    @overload
    def SetRotation(self, arg0: Kratos.Array3, arg1: float, arg2: Kratos.Array3) -> None: ...
    @overload
    def SetRotation(self, arg0: Kratos.Array3, arg1: float, arg2: Kratos.Array3) -> None: ...
    @overload
    def SetRotation(self, arg0: Kratos.Array3, arg1: Kratos.Array3) -> None: ...
    @overload
    def SetRotation(self, arg0: Kratos.Quaternion, arg1: Kratos.Array3) -> None: ...
    def SetTranslation(self, arg0: Kratos.Array3) -> None: ...

class FixedMeshALEUtilities:
    def __init__(self, arg0: Kratos.Model, arg1: Kratos.Parameters) -> None: ...
    def ComputeMeshMovement(self, arg0: float) -> None: ...
    def Initialize(self, arg0: Kratos.ModelPart) -> None: ...
    def ProjectVirtualValues2D(self, arg0: Kratos.ModelPart, arg1: int) -> None: ...
    def ProjectVirtualValues3D(self, arg0: Kratos.ModelPart, arg1: int) -> None: ...
    def SetVirtualMeshValuesFromOriginMesh(self) -> None: ...
    def UndoMeshMovement(self) -> None: ...

class KratosMeshMovingApplication(Kratos.KratosApplication):
    def __init__(self) -> None: ...

class LaplacianMeshMovingStrategy(Kratos.ImplicitSolvingStrategy):
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.LinearSolver, arg2: int, arg3: bool, arg4: bool, arg5: bool, arg6: int) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.LinearSolver, arg2: int, arg3: bool, arg4: bool, arg5: bool, arg6: int, arg7: bool) -> None: ...

class ParametricAffineTransform:
    @overload
    def __init__(self, arg0: Kratos.Parameters, arg1: Kratos.Parameters, arg2: Kratos.Parameters, arg3: Kratos.Parameters) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.Parameters, arg1: Kratos.Parameters, arg2: Kratos.Parameters) -> None: ...
    def Apply(self, arg0: Kratos.Array3, arg1: float, arg2: float, arg3: float, arg4: float) -> Kratos.Array3: ...

class StructuralMeshMovingStrategy(Kratos.ImplicitSolvingStrategy):
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.LinearSolver, arg2: int, arg3: bool, arg4: bool, arg5: bool, arg6: int, arg7: float) -> None: ...
    @overload
    def __init__(self, arg0: Kratos.ModelPart, arg1: Kratos.LinearSolver, arg2: int, arg3: bool, arg4: bool, arg5: bool, arg6: int, arg7: float, arg8: bool) -> None: ...

@overload
def CalculateMeshVelocities(arg0: Kratos.ModelPart, arg1: Kratos.TimeDiscretization.BDF1) -> None: ...
@overload
def CalculateMeshVelocities(arg0: Kratos.ModelPart, arg1: Kratos.TimeDiscretization.BDF2) -> None: ...
@overload
def CalculateMeshVelocities(arg0: Kratos.ModelPart, arg1: Kratos.TimeDiscretization.Newmark) -> None: ...
@overload
def CalculateMeshVelocities(arg0: Kratos.ModelPart, arg1: Kratos.TimeDiscretization.Bossak) -> None: ...
@overload
def CalculateMeshVelocities(arg0: Kratos.ModelPart, arg1: Kratos.TimeDiscretization.GeneralizedAlpha) -> None: ...
def MoveMesh(arg0: Kratos.NodesArray) -> None: ...
@overload
def MoveModelPart(arg0: Kratos.ModelPart, arg1: Kratos.Array3, arg2: float, arg3: Kratos.Array3, arg4: Kratos.Array3) -> None: ...
@overload
def MoveModelPart(arg0: Kratos.ModelPart, arg1: Kratos.Parameters, arg2: Kratos.Parameters, arg3: Kratos.Parameters, arg4: Kratos.Parameters) -> None: ...
@overload
def MoveModelPart(arg0: Kratos.ModelPart, arg1: AffineTransform) -> None: ...
@overload
def MoveModelPart(arg0: Kratos.ModelPart, arg1: ParametricAffineTransform) -> None: ...
def SuperImposeMeshDisplacement(arg0: Kratos.ModelPart, arg1: Kratos.Array1DVariable3) -> None: ...
def SuperImposeMeshVelocity(arg0: Kratos.ModelPart, arg1: Kratos.Array1DVariable3) -> None: ...
