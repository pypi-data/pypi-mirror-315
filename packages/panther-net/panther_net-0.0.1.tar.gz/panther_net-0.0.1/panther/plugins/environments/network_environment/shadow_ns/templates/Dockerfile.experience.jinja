FROM shadow_ns_v1_panther:latest AS shadow_base

{% for service in services %}
FROM {{ service.implementation_name }}_{{ service.service_protocol.version.name }}_panther:latest AS {{ service.service_name }}_stage

# Copy files from the service stage to /opt in the final image
{% for port in service.service_config_to_test.ports %}
EXPOSE {{ port }}
{% endfor %}

# Set container working directory
# WORKDIR "{{ service.run_cmd["run_cmd"]["working_dir"] }}"

# Add service-specific environment variables
ENV ROLE="{{ service.role.name }}"
ENV UID=${UID}
ENV GID=${GID}
{% for key, value in service.environments.items() %}
ENV {{ key }}="{{ value }}"
{% endfor %}

# Define the command for the service
RUN <<EOF
echo "Running pre-compilation commands:"
{% for cmd in service.run_cmd["pre_compile_cmds"] %}
{{ cmd }}
{% endfor %}
EOF

RUN <<EOF
echo "Running compilation commands:"
{% for cmd in service.run_cmd["compile_cmds"] %}
{{ cmd }}
{% endfor %}
EOF

RUN <<EOF
echo "Running post-compilation commands:"
{% for cmd in service.run_cmd["post_compile_cmds"] %}
{{ cmd }}
{% endfor %}
EOF
{% endfor %}

# Final stage
FROM shadow_ns_v1_panther:latest
WORKDIR /
ENV DEBIAN_FRONTEND=noninteractive
USER root

{% for service in services %}
{% if "ivy" in service.service_name %}
COPY --from={{ service.service_name }}_stage /usr/local/lib/python3.10 /usr/local/lib/python3.10
COPY --from={{ service.service_name }}_stage /opt /opt
{% else %}
COPY --from={{ service.service_name }}_stage /opt /opt/{{ service.service_name }}
{% endif %}
{% endfor %}

COPY --from=shadow_ns_v1_panther /shadow /shadow
COPY --from=shadow_ns_v1_panther /root/.cargo/ /root/.cargo/
COPY --from=shadow_ns_v1_panther /root/.local/ /root/.local/
COPY --from=shadow_ns_v1_panther /usr/include/shadow.h /usr/include/shadow.h
COPY --from=shadow_ns_v1_panther /etc/shadow /etc/shadow

ENV PATH="/root/.local/bin:/root/.cargo/bin:${PATH}"
ENV PATH="/shadow/build:/root/shadow/build/:${PATH}"
RUN rustup default stable
RUN rm -rf shadow.data/

ADD {{ additional_param }} /shadow_ns_config.yml
ENV RUST_BACKTRACE=1
ENTRYPOINT [ "/bin/sh", "-c", "shadow /shadow_ns_config.yml --data-directory /app/logs/shadow.data > /app/logs/shadow_stdout.log 2> /app/logs/shadow_stderr.log; {% for service in services %}{% if not test_config.services[service.service_name].implementation.type.name == "testers" %}{% set replacement_path = '/opt/' ~ service.service_name ~ '/' %}{% else %}{% set replacement_path = '/opt/'%}{% endif %}{% for cmd in service.run_cmd["post_run_cmds"] %}{{ cmd | replace("\n", "") | replace('/opt/', replacement_path) | replace("/app/logs/", "/app/logs/" ~ service.service_name ~ "/") }}{% endfor -%}{% endfor -%}" ]

