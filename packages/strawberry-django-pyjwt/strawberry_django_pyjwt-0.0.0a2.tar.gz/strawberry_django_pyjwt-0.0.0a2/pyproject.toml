[build-system]
# build-backend = "poetry.masonry.api"
# requires = ["poetry>=0.12"]
requires = ["setuptools>=62.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''
include = '\.pyi?$'
line-length = 88
skip-string-normalization = 1
target-version = ['py310', 'py311', 'py312', 'py38', 'py39']

[tool.coverage.report]
exclude_lines = [
  "@abc.abstractmethod",
  "@abstractmethod",
  "@overload",
  "assert_never",
  "if TYPE_CHECKING:",
  "pragma: nocover",
  "pragma:nocover",
]
precision = 2

[tool.coverage.run]
branch = true
omit = [".venv/**", "manage.py", "tests/migrations/**"]
source = ["strawberry_django_jwt"]

[tool.django-stubs]
#django_settings_module = "strawberry_django_jwt.settings"
django_settings_module = "tests.example_app.settings"

[tool.isort]
force_sort_within_sections = true
multi_line_output = 3
profile = "black"

[tool.mypy]
disallow_untyped_defs = true
exclude = [
  # "django",
  "donotinclude",
  "manage.py",
]
plugins = [
  "mypy_django_plugin.main",
  "strawberry.ext.mypy_plugin",
]
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["importlib_metadata.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["strawberry_django.*"]

[tool.poe.tasks]
format-black = "black ./"
format-isort = "isort ./"
format-toml = "toml-sort pyproject.toml --all --trailing-comma-inline-array -i"
lint-black = "black ./ --check --diff"
lint-isort = "isort ./ --check --diff --profile black"
# lint-pylint = "pylint ./"
type-check = "mypy ./"

[tool.poetry]
authors = [
  "VojtÄ›ch Dohnal <vojdoh@gmail.com>",
  "advl <email@email.com>"
]
classifiers = [
  'Development Status :: 3 - Alpha',
  'Environment :: Web Environment',
  'Framework :: Django :: 3.2',
  'Framework :: Django :: 4.0',
  'Framework :: Django',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Operating System :: OS Independent',
]
description = "Strawberry-graphql port of the graphene-django-jwt package"
license = "MIT"
maintainers = []
name = "strawberry-django-pyjwt"
packages = [
  {include = "strawberry_django_jwt"},
]
readme = "README.md"
version = "0.0.0a2"

[tool.poetry.dependencies]
Django = [
  {markers = "python_version >= '3.10'", optional = true, version = ">=5,<6"},
  {markers = "python_version >= '3.8.1' and python_version < '3.10'", optional = true, version = ">=4,<5"},
]
PyJWT = ">=1.7.1,<3.0"
django-admin-display = "^1.3.0"
importlib-metadata = {python = "<=3.7", version = ">=1.7,<5.0"}
packaging = ">=20.0,<30.0"
python = "^3.8.1"
strawberry-graphql = ">=0.254.0,<1.0"
strawberry-graphql-django = [
  {allow-prereleases = true, markers = "python_version < '3.10'", version = ">=0.3"},
  {markers = "python_version >= '3.10'", version = "^0.52.0"},
]
# For use in local tests and development, in future poetry release replace with dev-dependencies group.
uvicorn = {extras = ["standard"], optional = true, version = "^0.18.2"}

[tool.poetry.extras]
dev = ["uvicorn"]

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
coverage = {extras = ["toml"], version = "^6.4.1"}
cryptography = ">=38.0"
django-mock-queries = "^2.1.7"
django-stubs = [
  {markers = "python_version < '3.10'", version = "<1.12.0"},
  {markers = "python_version >= '3.10'", version = "^5.0.2"},
]
isort = "^5.13.2"
mock = {python = "<3.8", version = "^4.0"}
mypy = "^1.10.1"
poethepoet = "^0.27.0"
pytest = "^7.1.3"
pytest-cov = ">=4.0"
pytest-django = "^4.0.0"
toml-sort = "^0.23.1"
types-cryptography = "^3.3.15"
types-jwt = "^0.1.0"
types-mock = "^4.0.0"
# types-pkg-resources = "^0.1.0" # "Does not match any version"
flake8 = "^7.1.0"
nox = "^2024.4.15"
nox-poetry = "^1.0.3"
ipdb = "^0.13.13"

[tool.poetry.urls]
"Homepage" = "https://github.com/advl/strawberry-django-pyjwt/"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.example_app.settings"
addopts = "-ra -q"
filterwarnings = []
minversion = "6.0"
python_files = "tests.py test_*.py *_tests.py"
testpaths = [
  "tests",
]
