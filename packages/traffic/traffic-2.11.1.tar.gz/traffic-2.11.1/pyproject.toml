[project]
name = "traffic"
homepage = "https://github.com/xoolive/traffic/"
documentation = "https://traffic-viz.github.io/"
description = "A toolbox for manipulating and analysing air traffic data"
authors = [{ name = "Xavier Olive", email = "git@xoolive.org" }]
license = "MIT"
readme = "readme.md"
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
dependencies = [
  "cartes>=0.8.3",
  "httpx>=0.27.2",
  "impunity>=1.0.4",
  "metar>=1.11.0",
  "onnxruntime>=1.19.2",
  "openap>=2.0",
  "pitot>=0.3.1",
  "py7zr>=0.22.0",
  "pyarrow>=18.0.0",
  "pyopensky>=2.11",
  "rich>=13.9.4",
  "rs1090>=0.3.8",
  "typing-extensions>=4.12.2",
]

[tool.uv]
dev-dependencies = [
  "codecov>=2.1.13",
  "mypy>=1.13.0",
  "pre-commit>=4.0.1",
  "pytest>=8.3.3",
  "pytest-cov>=6.0.0",
  "pytest-timeout>=2.3.1",
  "ruff>=0.7.2",
  "sphinx>=8.1.3",
  "sphinx-autodoc-typehints>=2.5.0",
  "sphinx-rtd-theme>=3.0.1",
  "jupyter-sphinx>=0.5.3",
]

[tool.uv.sources]
# cartes = { path = "../cartes", editable = true }
# impunity = { path = "../impunity", editable = true }
# pitot = { path = "../pitot", editable = true }
# pyopensky = { path = "../pyopensky", editable = true }
# rs1090 = { path = "../rs1090/python", editable = true }

[project.scripts]
traffic = 'traffic.console:main'

[project.optional-dependencies]
altair = ["altair>=5.4.1"]
plotly = ["plotly>=5.24.1"]
leaflet = ["ipyleaflet>=0.19.2", "ipywidgets>=8.1.5"]
lonboard = ["lonboard>=0.10.3; python_version<'3.13'"]
spark = ["pyspark>=3.5.3"]
xarray = ["xarray>=2024.10.0"]
learning = ["scikit-learn>=1.5.2"]

[build-system]
requires = ["hatchling", "hatch_vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 80
target-version = "py310"

[tool.ruff.lint]
select = [
  "E",
  "W",      # pycodestyle
  "F",      # pyflakes
  "I",      # isort
  "NPY",    # numpy
  "NPY201", # numpy
  # "PD",  # pandas
  "DTZ", # flake8-datetimez
  "RUF",
]

[tool.ruff.lint.isort]
known-first-party = ["numpy", "pandas", "pyproj", "shapely"]

[tool.mypy]
python_version = "3.10"
platform = "posix"

color_output = true
pretty = true
show_column_numbers = true
strict = true
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
addopts = "--log-level=INFO --color=yes --doctest-modules --doctest-report ndiff"
testpaths = [
  "src/traffic/core/intervals.py",
  "src/traffic/core/time.py",
  "src/traffic/data/basic/",
  "src/traffic/data/datasets/",
  "tests",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS", "NUMBER"]
