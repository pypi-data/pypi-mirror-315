[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "teklia-nerval"
version = "0.3.3"
description = "Tool to evaluate NER on noisy text."
dependencies = [
    "editdistance==0.8.1",
    "edlib==1.3.9.post1",
    "prettytable==3.9.0",
]
authors = [
    { name = "Teklia", email = "contact@teklia.com" },
]
maintainers = [
    { name = "Teklia", email = "contact@teklia.com" },
]
requires-python = ">=3.10"
readme = { file = "README.md", content-type = "text/markdown" }
keywords = ["python"]
classifiers = [
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.scripts]
"nerval" = "nerval.cli:main"

[tool.setuptools]
packages = ["nerval"]

[tool.ruff]
exclude = [".git", "__pycache__"]
target-version = "py312"

[tool.ruff.lint]
ignore = [
    "E501",
    # Conflicts with the formatter
    "COM812"
]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # Flake8 Debugger
    "T1",
    # Isort
    "I",
    # Implicit Optional
    "RUF013",
    # Invalid pyproject.toml
    "RUF200",
    # pyupgrade
    "UP",
    # pandas-vet
    "PD",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-commas
    "COM",
    # flake8-comprehension
    "C4",
    # flake8-import-conventions
    "ICN",
    # flake8-quotes
    "Q",
    # flake8-raise
    "RSE",
    # flake8-simplify
    "SIM",
    # flake8-unused-arguments
    "ARG",
    # flake8-pytest-style
    "PT",
    # flake8-use-pathlib
    "PTH",
]

[tool.ruff.lint.per-file-ignores]
# Ignore `pytest-composite-assertion` rules of `flake8-pytest-style` linter for non-test files
"nerval/**/*.py" = ["PT018"]

[tool.ruff.lint.isort]
known-first-party = []
known-third-party = ["pytest", "setuptools", "editdistance", "edlib", "prettytable"]
