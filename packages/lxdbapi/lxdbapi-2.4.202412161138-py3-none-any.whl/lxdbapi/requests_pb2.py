# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lxdbapi/requests.proto
"""Generated protocol buffer code."""
from ._vendor.google.protobuf import descriptor as _descriptor
from ._vendor.google.protobuf import descriptor_pool as _descriptor_pool
from ._vendor.google.protobuf import message as _message
from ._vendor.google.protobuf import reflection as _reflection
from ._vendor.google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from lxdbapi import common_pb2 as lxdbapi_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16lxdbapi/requests.proto\x12\x07lxdbapi\x1a\x14lxdbapi/common.proto\"(\n\x0f\x43\x61talogsRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"0\n\x17\x44\x61tabasePropertyRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"\x81\x01\n\x0eSchemasRequest\x12\x0f\n\x07\x63\x61talog\x18\x01 \x01(\t\x12\x16\n\x0eschema_pattern\x18\x02 \x01(\t\x12\x15\n\rconnection_id\x18\x03 \x01(\t\x12\x13\n\x0bhas_catalog\x18\x04 \x01(\x08\x12\x1a\n\x12has_schema_pattern\x18\x05 \x01(\x08\"\xe6\x01\n\rTablesRequest\x12\x0f\n\x07\x63\x61talog\x18\x01 \x01(\t\x12\x16\n\x0eschema_pattern\x18\x02 \x01(\t\x12\x1a\n\x12table_name_pattern\x18\x03 \x01(\t\x12\x11\n\ttype_list\x18\x04 \x03(\t\x12\x15\n\rhas_type_list\x18\x06 \x01(\x08\x12\x15\n\rconnection_id\x18\x07 \x01(\t\x12\x13\n\x0bhas_catalog\x18\x08 \x01(\x08\x12\x1a\n\x12has_schema_pattern\x18\t \x01(\x08\x12\x1e\n\x16has_table_name_pattern\x18\n \x01(\x08\"*\n\x11TableTypesRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"\xfb\x01\n\x0e\x43olumnsRequest\x12\x0f\n\x07\x63\x61talog\x18\x01 \x01(\t\x12\x16\n\x0eschema_pattern\x18\x02 \x01(\t\x12\x1a\n\x12table_name_pattern\x18\x03 \x01(\t\x12\x1b\n\x13\x63olumn_name_pattern\x18\x04 \x01(\t\x12\x15\n\rconnection_id\x18\x05 \x01(\t\x12\x13\n\x0bhas_catalog\x18\x06 \x01(\x08\x12\x1a\n\x12has_schema_pattern\x18\x07 \x01(\x08\x12\x1e\n\x16has_table_name_pattern\x18\x08 \x01(\x08\x12\x1f\n\x17has_column_name_pattern\x18\t \x01(\x08\"(\n\x0fTypeInfoRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"\xa1\x01\n\x18PrepareAndExecuteRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x15\n\rmax_row_count\x18\x03 \x01(\x04\x12\x14\n\x0cstatement_id\x18\x04 \x01(\r\x12\x16\n\x0emax_rows_total\x18\x05 \x01(\x03\x12\x1c\n\x14\x66irst_frame_max_size\x18\x06 \x01(\x05\"c\n\x0ePrepareRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x15\n\rmax_row_count\x18\x03 \x01(\x04\x12\x16\n\x0emax_rows_total\x18\x04 \x01(\x03\"\x80\x01\n\x0c\x46\x65tchRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12\x0e\n\x06offset\x18\x03 \x01(\x04\x12\x1b\n\x13\x66\x65tch_max_row_count\x18\x04 \x01(\r\x12\x16\n\x0e\x66rame_max_size\x18\x05 \x01(\x05\"/\n\x16\x43reateStatementRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"D\n\x15\x43loseStatementRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\"D\n\x15\x43loseResultSetRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\"\x93\x01\n\x15OpenConnectionRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x36\n\x04info\x18\x02 \x03(\x0b\x32(.lxdbapi.OpenConnectionRequest.InfoEntry\x1a+\n\tInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"/\n\x16\x43loseConnectionRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"a\n\x15\x43onnectionSyncRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x31\n\nconn_props\x18\x02 \x01(\x0b\x32\x1d.lxdbapi.ConnectionProperties\"\xd7\x01\n\x0e\x45xecuteRequest\x12\x31\n\x0fstatementHandle\x18\x01 \x01(\x0b\x32\x18.lxdbapi.StatementHandle\x12-\n\x10parameter_values\x18\x02 \x03(\x0b\x32\x13.lxdbapi.TypedValue\x12\'\n\x1f\x64\x65precated_first_frame_max_size\x18\x03 \x01(\x04\x12\x1c\n\x14has_parameter_values\x18\x04 \x01(\x08\x12\x1c\n\x14\x66irst_frame_max_size\x18\x05 \x01(\x05\"h\n\x10WriteBlobRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12\'\n\x0b\x62lob_values\x18\x03 \x03(\x0b\x32\x12.lxdbapi.LxBlobMsg\"m\n\x15WriteBlobBatchRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12\'\n\x0b\x62lob_values\x18\x03 \x03(\x0b\x32\x12.lxdbapi.LxBlobMsg\"e\n\x0ePutDataRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12&\n\nblob_value\x18\x03 \x01(\x0b\x32\x12.lxdbapi.LxBlobMsg\"f\n\x0fReadBlobRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12&\n\tblob_info\x18\x03 \x01(\x0b\x32\x13.lxdbapi.LxBlobInfo\"u\n\x12SyncResultsRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12\"\n\x05state\x18\x03 \x01(\x0b\x32\x13.lxdbapi.QueryState\x12\x0e\n\x06offset\x18\x04 \x01(\x04\"&\n\rCommitRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"(\n\x0fRollbackRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\"b\n\x1dPrepareAndExecuteBatchRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12\x14\n\x0csql_commands\x18\x03 \x03(\t\"<\n\x0bUpdateBatch\x12-\n\x10parameter_values\x18\x01 \x03(\x0b\x32\x13.lxdbapi.TypedValue\"i\n\x13\x45xecuteBatchRequest\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\x14\n\x0cstatement_id\x18\x02 \x01(\r\x12%\n\x07updates\x18\x03 \x03(\x0b\x32\x14.lxdbapi.UpdateBatch\"H\n\x0fLxActionRequest\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12%\n\x06params\x18\x02 \x03(\x0b\x32\x15.lxdbapi.KeyValuePairB\"\n org.apache.calcite.avatica.protob\x06proto3')



_CATALOGSREQUEST = DESCRIPTOR.message_types_by_name['CatalogsRequest']
_DATABASEPROPERTYREQUEST = DESCRIPTOR.message_types_by_name['DatabasePropertyRequest']
_SCHEMASREQUEST = DESCRIPTOR.message_types_by_name['SchemasRequest']
_TABLESREQUEST = DESCRIPTOR.message_types_by_name['TablesRequest']
_TABLETYPESREQUEST = DESCRIPTOR.message_types_by_name['TableTypesRequest']
_COLUMNSREQUEST = DESCRIPTOR.message_types_by_name['ColumnsRequest']
_TYPEINFOREQUEST = DESCRIPTOR.message_types_by_name['TypeInfoRequest']
_PREPAREANDEXECUTEREQUEST = DESCRIPTOR.message_types_by_name['PrepareAndExecuteRequest']
_PREPAREREQUEST = DESCRIPTOR.message_types_by_name['PrepareRequest']
_FETCHREQUEST = DESCRIPTOR.message_types_by_name['FetchRequest']
_CREATESTATEMENTREQUEST = DESCRIPTOR.message_types_by_name['CreateStatementRequest']
_CLOSESTATEMENTREQUEST = DESCRIPTOR.message_types_by_name['CloseStatementRequest']
_CLOSERESULTSETREQUEST = DESCRIPTOR.message_types_by_name['CloseResultSetRequest']
_OPENCONNECTIONREQUEST = DESCRIPTOR.message_types_by_name['OpenConnectionRequest']
_OPENCONNECTIONREQUEST_INFOENTRY = _OPENCONNECTIONREQUEST.nested_types_by_name['InfoEntry']
_CLOSECONNECTIONREQUEST = DESCRIPTOR.message_types_by_name['CloseConnectionRequest']
_CONNECTIONSYNCREQUEST = DESCRIPTOR.message_types_by_name['ConnectionSyncRequest']
_EXECUTEREQUEST = DESCRIPTOR.message_types_by_name['ExecuteRequest']
_WRITEBLOBREQUEST = DESCRIPTOR.message_types_by_name['WriteBlobRequest']
_WRITEBLOBBATCHREQUEST = DESCRIPTOR.message_types_by_name['WriteBlobBatchRequest']
_PUTDATAREQUEST = DESCRIPTOR.message_types_by_name['PutDataRequest']
_READBLOBREQUEST = DESCRIPTOR.message_types_by_name['ReadBlobRequest']
_SYNCRESULTSREQUEST = DESCRIPTOR.message_types_by_name['SyncResultsRequest']
_COMMITREQUEST = DESCRIPTOR.message_types_by_name['CommitRequest']
_ROLLBACKREQUEST = DESCRIPTOR.message_types_by_name['RollbackRequest']
_PREPAREANDEXECUTEBATCHREQUEST = DESCRIPTOR.message_types_by_name['PrepareAndExecuteBatchRequest']
_UPDATEBATCH = DESCRIPTOR.message_types_by_name['UpdateBatch']
_EXECUTEBATCHREQUEST = DESCRIPTOR.message_types_by_name['ExecuteBatchRequest']
_LXACTIONREQUEST = DESCRIPTOR.message_types_by_name['LxActionRequest']
CatalogsRequest = _reflection.GeneratedProtocolMessageType('CatalogsRequest', (_message.Message,), {
  'DESCRIPTOR' : _CATALOGSREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.CatalogsRequest)
  })
_sym_db.RegisterMessage(CatalogsRequest)

DatabasePropertyRequest = _reflection.GeneratedProtocolMessageType('DatabasePropertyRequest', (_message.Message,), {
  'DESCRIPTOR' : _DATABASEPROPERTYREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.DatabasePropertyRequest)
  })
_sym_db.RegisterMessage(DatabasePropertyRequest)

SchemasRequest = _reflection.GeneratedProtocolMessageType('SchemasRequest', (_message.Message,), {
  'DESCRIPTOR' : _SCHEMASREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.SchemasRequest)
  })
_sym_db.RegisterMessage(SchemasRequest)

TablesRequest = _reflection.GeneratedProtocolMessageType('TablesRequest', (_message.Message,), {
  'DESCRIPTOR' : _TABLESREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.TablesRequest)
  })
_sym_db.RegisterMessage(TablesRequest)

TableTypesRequest = _reflection.GeneratedProtocolMessageType('TableTypesRequest', (_message.Message,), {
  'DESCRIPTOR' : _TABLETYPESREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.TableTypesRequest)
  })
_sym_db.RegisterMessage(TableTypesRequest)

ColumnsRequest = _reflection.GeneratedProtocolMessageType('ColumnsRequest', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNSREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.ColumnsRequest)
  })
_sym_db.RegisterMessage(ColumnsRequest)

TypeInfoRequest = _reflection.GeneratedProtocolMessageType('TypeInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _TYPEINFOREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.TypeInfoRequest)
  })
_sym_db.RegisterMessage(TypeInfoRequest)

PrepareAndExecuteRequest = _reflection.GeneratedProtocolMessageType('PrepareAndExecuteRequest', (_message.Message,), {
  'DESCRIPTOR' : _PREPAREANDEXECUTEREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.PrepareAndExecuteRequest)
  })
_sym_db.RegisterMessage(PrepareAndExecuteRequest)

PrepareRequest = _reflection.GeneratedProtocolMessageType('PrepareRequest', (_message.Message,), {
  'DESCRIPTOR' : _PREPAREREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.PrepareRequest)
  })
_sym_db.RegisterMessage(PrepareRequest)

FetchRequest = _reflection.GeneratedProtocolMessageType('FetchRequest', (_message.Message,), {
  'DESCRIPTOR' : _FETCHREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.FetchRequest)
  })
_sym_db.RegisterMessage(FetchRequest)

CreateStatementRequest = _reflection.GeneratedProtocolMessageType('CreateStatementRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATESTATEMENTREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.CreateStatementRequest)
  })
_sym_db.RegisterMessage(CreateStatementRequest)

CloseStatementRequest = _reflection.GeneratedProtocolMessageType('CloseStatementRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLOSESTATEMENTREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.CloseStatementRequest)
  })
_sym_db.RegisterMessage(CloseStatementRequest)

CloseResultSetRequest = _reflection.GeneratedProtocolMessageType('CloseResultSetRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLOSERESULTSETREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.CloseResultSetRequest)
  })
_sym_db.RegisterMessage(CloseResultSetRequest)

OpenConnectionRequest = _reflection.GeneratedProtocolMessageType('OpenConnectionRequest', (_message.Message,), {

  'InfoEntry' : _reflection.GeneratedProtocolMessageType('InfoEntry', (_message.Message,), {
    'DESCRIPTOR' : _OPENCONNECTIONREQUEST_INFOENTRY,
    '__module__' : 'lxdbapi.requests_pb2'
    # @@protoc_insertion_point(class_scope:lxdbapi.OpenConnectionRequest.InfoEntry)
    })
  ,
  'DESCRIPTOR' : _OPENCONNECTIONREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.OpenConnectionRequest)
  })
_sym_db.RegisterMessage(OpenConnectionRequest)
_sym_db.RegisterMessage(OpenConnectionRequest.InfoEntry)

CloseConnectionRequest = _reflection.GeneratedProtocolMessageType('CloseConnectionRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLOSECONNECTIONREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.CloseConnectionRequest)
  })
_sym_db.RegisterMessage(CloseConnectionRequest)

ConnectionSyncRequest = _reflection.GeneratedProtocolMessageType('ConnectionSyncRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONSYNCREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.ConnectionSyncRequest)
  })
_sym_db.RegisterMessage(ConnectionSyncRequest)

ExecuteRequest = _reflection.GeneratedProtocolMessageType('ExecuteRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTEREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.ExecuteRequest)
  })
_sym_db.RegisterMessage(ExecuteRequest)

WriteBlobRequest = _reflection.GeneratedProtocolMessageType('WriteBlobRequest', (_message.Message,), {
  'DESCRIPTOR' : _WRITEBLOBREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.WriteBlobRequest)
  })
_sym_db.RegisterMessage(WriteBlobRequest)

WriteBlobBatchRequest = _reflection.GeneratedProtocolMessageType('WriteBlobBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _WRITEBLOBBATCHREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.WriteBlobBatchRequest)
  })
_sym_db.RegisterMessage(WriteBlobBatchRequest)

PutDataRequest = _reflection.GeneratedProtocolMessageType('PutDataRequest', (_message.Message,), {
  'DESCRIPTOR' : _PUTDATAREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.PutDataRequest)
  })
_sym_db.RegisterMessage(PutDataRequest)

ReadBlobRequest = _reflection.GeneratedProtocolMessageType('ReadBlobRequest', (_message.Message,), {
  'DESCRIPTOR' : _READBLOBREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.ReadBlobRequest)
  })
_sym_db.RegisterMessage(ReadBlobRequest)

SyncResultsRequest = _reflection.GeneratedProtocolMessageType('SyncResultsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SYNCRESULTSREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.SyncResultsRequest)
  })
_sym_db.RegisterMessage(SyncResultsRequest)

CommitRequest = _reflection.GeneratedProtocolMessageType('CommitRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMITREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.CommitRequest)
  })
_sym_db.RegisterMessage(CommitRequest)

RollbackRequest = _reflection.GeneratedProtocolMessageType('RollbackRequest', (_message.Message,), {
  'DESCRIPTOR' : _ROLLBACKREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.RollbackRequest)
  })
_sym_db.RegisterMessage(RollbackRequest)

PrepareAndExecuteBatchRequest = _reflection.GeneratedProtocolMessageType('PrepareAndExecuteBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _PREPAREANDEXECUTEBATCHREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.PrepareAndExecuteBatchRequest)
  })
_sym_db.RegisterMessage(PrepareAndExecuteBatchRequest)

UpdateBatch = _reflection.GeneratedProtocolMessageType('UpdateBatch', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEBATCH,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.UpdateBatch)
  })
_sym_db.RegisterMessage(UpdateBatch)

ExecuteBatchRequest = _reflection.GeneratedProtocolMessageType('ExecuteBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTEBATCHREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.ExecuteBatchRequest)
  })
_sym_db.RegisterMessage(ExecuteBatchRequest)

LxActionRequest = _reflection.GeneratedProtocolMessageType('LxActionRequest', (_message.Message,), {
  'DESCRIPTOR' : _LXACTIONREQUEST,
  '__module__' : 'lxdbapi.requests_pb2'
  # @@protoc_insertion_point(class_scope:lxdbapi.LxActionRequest)
  })
_sym_db.RegisterMessage(LxActionRequest)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n org.apache.calcite.avatica.proto'
  _OPENCONNECTIONREQUEST_INFOENTRY._options = None
  _OPENCONNECTIONREQUEST_INFOENTRY._serialized_options = b'8\001'
  _CATALOGSREQUEST._serialized_start=57
  _CATALOGSREQUEST._serialized_end=97
  _DATABASEPROPERTYREQUEST._serialized_start=99
  _DATABASEPROPERTYREQUEST._serialized_end=147
  _SCHEMASREQUEST._serialized_start=150
  _SCHEMASREQUEST._serialized_end=279
  _TABLESREQUEST._serialized_start=282
  _TABLESREQUEST._serialized_end=512
  _TABLETYPESREQUEST._serialized_start=514
  _TABLETYPESREQUEST._serialized_end=556
  _COLUMNSREQUEST._serialized_start=559
  _COLUMNSREQUEST._serialized_end=810
  _TYPEINFOREQUEST._serialized_start=812
  _TYPEINFOREQUEST._serialized_end=852
  _PREPAREANDEXECUTEREQUEST._serialized_start=855
  _PREPAREANDEXECUTEREQUEST._serialized_end=1016
  _PREPAREREQUEST._serialized_start=1018
  _PREPAREREQUEST._serialized_end=1117
  _FETCHREQUEST._serialized_start=1120
  _FETCHREQUEST._serialized_end=1248
  _CREATESTATEMENTREQUEST._serialized_start=1250
  _CREATESTATEMENTREQUEST._serialized_end=1297
  _CLOSESTATEMENTREQUEST._serialized_start=1299
  _CLOSESTATEMENTREQUEST._serialized_end=1367
  _CLOSERESULTSETREQUEST._serialized_start=1369
  _CLOSERESULTSETREQUEST._serialized_end=1437
  _OPENCONNECTIONREQUEST._serialized_start=1440
  _OPENCONNECTIONREQUEST._serialized_end=1587
  _OPENCONNECTIONREQUEST_INFOENTRY._serialized_start=1544
  _OPENCONNECTIONREQUEST_INFOENTRY._serialized_end=1587
  _CLOSECONNECTIONREQUEST._serialized_start=1589
  _CLOSECONNECTIONREQUEST._serialized_end=1636
  _CONNECTIONSYNCREQUEST._serialized_start=1638
  _CONNECTIONSYNCREQUEST._serialized_end=1735
  _EXECUTEREQUEST._serialized_start=1738
  _EXECUTEREQUEST._serialized_end=1953
  _WRITEBLOBREQUEST._serialized_start=1955
  _WRITEBLOBREQUEST._serialized_end=2059
  _WRITEBLOBBATCHREQUEST._serialized_start=2061
  _WRITEBLOBBATCHREQUEST._serialized_end=2170
  _PUTDATAREQUEST._serialized_start=2172
  _PUTDATAREQUEST._serialized_end=2273
  _READBLOBREQUEST._serialized_start=2275
  _READBLOBREQUEST._serialized_end=2377
  _SYNCRESULTSREQUEST._serialized_start=2379
  _SYNCRESULTSREQUEST._serialized_end=2496
  _COMMITREQUEST._serialized_start=2498
  _COMMITREQUEST._serialized_end=2536
  _ROLLBACKREQUEST._serialized_start=2538
  _ROLLBACKREQUEST._serialized_end=2578
  _PREPAREANDEXECUTEBATCHREQUEST._serialized_start=2580
  _PREPAREANDEXECUTEBATCHREQUEST._serialized_end=2678
  _UPDATEBATCH._serialized_start=2680
  _UPDATEBATCH._serialized_end=2740
  _EXECUTEBATCHREQUEST._serialized_start=2742
  _EXECUTEBATCHREQUEST._serialized_end=2847
  _LXACTIONREQUEST._serialized_start=2849
  _LXACTIONREQUEST._serialized_end=2921
# @@protoc_insertion_point(module_scope)
